;
; +-------------------------------------------------------------------------+
; |      This file was generated by The Interactive Disassembler (IDA)      |
; |           Copyright (c) 2025 Hex-Rays, <support@hex-rays.com>           |
; |                            Freeware version                             |
; +-------------------------------------------------------------------------+
;
; Input SHA256 : E8ECCE0EBBEDF5F051AC7286AC8A1DBF384C58B9D39544AF59308EC5566CBF15
; Input MD5    : A78916306B1BACB73084ED5459239E6C
; Input CRC32  : EEE0D598
; Compiler     : GNU C++

; File Name   : C:\Users\studentadmin\Downloads\chall(1)
; Format      : ELF64 for x86-64 (Executable)
; Imagebase   : 400000
; Interpreter '/lib64/ld-linux-x86-64.so.2'
; Needed Library 'libstdc++.so.6'
; Needed Library 'libgcc_s.so.1'
; Needed Library 'libc.so.6'
;
; Source File : 'chall.cpp'
; Source File : 'crt1.o'
; Source File : 'crtstuff.c'

                .686p
                .mmx
                .model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read
LOAD            segment mempage public 'DATA' use64
                assume cs:LOAD
                ;org 400000h
dword_400000    dd 464C457Fh            ; DATA XREF: LOAD:00000000004000C0↓o
                                        ; File format: \x7FELF
                db 2                    ; File class: 64-bit
                db 1                    ; Data encoding: little-endian
                db 1                    ; File version
                db 3                    ; OS/ABI: GNU/Linux
                db 0                    ; ABI Version
                db 7 dup(0)             ; Padding
                dw 2                    ; File type: Executable
                dw 3Eh                  ; Machine: x86-64
                dd 1                    ; File version
                dq offset _start        ; Entry point
                dq 40h                  ; PHT file offset
                dq 208C8h               ; SHT file offset
                dd 0                    ; Processor-specific flags
                dw 40h                  ; ELF header size
                dw 38h                  ; PHT entry size
                dw 0Eh                  ; Number of entries in PHT
                dw 40h                  ; SHT entry size
                dw 22h                  ; Number of entries in SHT
                dw 21h                  ; SHT entry index for string table
; ELF64 Program Header
; PHT Entry 0
dword_400040    dd 6                    ; DATA XREF: LOAD:0000000000400050↓o
                                        ; Type: PHDR
                dd 4                    ; Flags
                dq 40h                  ; File offset
                dq offset dword_400040  ; Virtual address
                dq 400040h              ; Physical address
                dq 310h                 ; Size in file image
                dq 310h                 ; Size in memory image
                dq 8                    ; Alignment
; PHT Entry 1
                dd 3                    ; Type: INTERP
                dd 4                    ; Flags
                dq 350h                 ; File offset
                dq offset aLib64LdLinuxX8 ; Virtual address
                dq 400350h              ; Physical address
                dq 1Ch                  ; Size in file image
                dq 1Ch                  ; Size in memory image
                dq 1                    ; Alignment
; PHT Entry 2
                dd 1                    ; Type: LOAD
                dd 4                    ; Flags
                dq 0                    ; File offset
                dq offset dword_400000  ; Virtual address
                dq 400000h              ; Physical address
                dq 16A8h                ; Size in file image
                dq 16A8h                ; Size in memory image
                dq 1000h                ; Alignment
; PHT Entry 3
                dd 1                    ; Type: LOAD
                dd 5                    ; Flags
                dq 2000h                ; File offset
                dq offset _init_proc    ; Virtual address
                dq 402000h              ; Physical address
                dq 13EDDh               ; Size in file image
                dq 13EDDh               ; Size in memory image
                dq 1000h                ; Alignment
; PHT Entry 4
                dd 1                    ; Type: LOAD
                dd 4                    ; Flags
                dq 16000h               ; File offset
                dq offset _IO_stdin_used ; Virtual address
                dq 416000h              ; Physical address
                dq 1EACh                ; Size in file image
                dq 1EACh                ; Size in memory image
                dq 1000h                ; Alignment
; PHT Entry 5
                dd 1                    ; Type: LOAD
                dd 6                    ; Flags
                dq 18DD8h               ; File offset
                dq offset __frame_dummy_init_array_entry ; Virtual address
                dq 419DD8h              ; Physical address
                dq 5D8h                 ; Size in file image
                dq 728h                 ; Size in memory image
                dq 1000h                ; Alignment
; PHT Entry 6
                dd 1                    ; Type: LOAD
                dd 5                    ; Flags
                dq 1A269h               ; File offset
                dq offset _Z15anchor_functionv ; Virtual address
                dq 480269h              ; Physical address
                dq 0Ch                  ; Size in file image
                dq 0Ch                  ; Size in memory image
                dq 1000h                ; Alignment
; PHT Entry 7
                dd 2                    ; Type: DYNAMIC
                dd 6                    ; Flags
                dq 18E00h               ; File offset
                dq offset _DYNAMIC      ; Virtual address
                dq 419E00h              ; Physical address
                dq 1F0h                 ; Size in file image
                dq 1F0h                 ; Size in memory image
                dq 8                    ; Alignment
; PHT Entry 8
                dd 4                    ; Type: NOTE
                dd 4                    ; Flags
                dq 370h                 ; File offset
                dq offset dword_400370  ; Virtual address
                dq 400370h              ; Physical address
                dq 30h                  ; Size in file image
                dq 30h                  ; Size in memory image
                dq 8                    ; Alignment
; PHT Entry 9
                dd 4                    ; Type: NOTE
                dd 4                    ; Flags
                dq 3A0h                 ; File offset
                dq offset dword_4003A0  ; Virtual address
                dq 4003A0h              ; Physical address
                dq 44h                  ; Size in file image
                dq 44h                  ; Size in memory image
                dq 4                    ; Alignment
; PHT Entry 10
                dd 6474E553h            ; Type: 6474E553
                dd 4                    ; Flags
                dq 370h                 ; File offset
                dq offset dword_400370  ; Virtual address
                dq 400370h              ; Physical address
                dq 30h                  ; Size in file image
                dq 30h                  ; Size in memory image
                dq 8                    ; Alignment
; PHT Entry 11
                dd 6474E550h            ; Type: EH_FRAME
                dd 4                    ; Flags
                dq 16480h               ; File offset
                dq offset __GNU_EH_FRAME_HDR ; Virtual address
                dq 416480h              ; Physical address
                dq 4F4h                 ; Size in file image
                dq 4F4h                 ; Size in memory image
                dq 4                    ; Alignment
; PHT Entry 12
                dd 6474E551h            ; Type: STACK
                dd 6                    ; Flags
                dq 0                    ; File offset
                dq 0                    ; Virtual address
                dq 0                    ; Physical address
                dq 0                    ; Size in file image
                dq 0                    ; Size in memory image
                dq 10h                  ; Alignment
; PHT Entry 13
                dd 6474E552h            ; Type: RO-AFTER
                dd 4                    ; Flags
                dq 18DD8h               ; File offset
                dq offset __frame_dummy_init_array_entry ; Virtual address
                dq 419DD8h              ; Physical address
                dq 228h                 ; Size in file image
                dq 228h                 ; Size in memory image
                dq 1                    ; Alignment
aLib64LdLinuxX8 db '/lib64/ld-linux-x86-64.so.2',0
                                        ; DATA XREF: LOAD:0000000000400088↑o
                align 10h
; ELF Note Entry
dword_400370    dd 4                    ; DATA XREF: LOAD:0000000000400210↑o
                                        ; LOAD:0000000000400280↑o
                                        ; Name Size
                dd 20h                  ; Desc Size
                dd 5                    ; Type: NT_GNU_PROPERTY_TYPE_0
aGnu            db 'GNU',0              ; Name
                db 2, 2 dup(0), 0C0h, 4, 3 dup(0), 3, 7 dup(0), 2, 80h ; Desc
                db 0, 0C0h, 4, 3 dup(0), 1, 7 dup(0)
; ELF Note Entry
dword_4003A0    dd 4                    ; DATA XREF: LOAD:0000000000400248↑o
                                        ; Name Size
                dd 14h                  ; Desc Size
                dd 3                    ; Type: NT_GNU_BUILD_ID
aGnu_0          db 'GNU',0              ; Name
                db 1Eh, 63h, 21h, 0B1h, 0CFh, 0F5h, 19h, 0A0h, 55h, 0C6h ; Desc
                db 90h, 0BDh, 0EDh, 0BFh, 87h, 2 dup(97h), 60h, 0CDh, 89h
; ELF Note Entry
__abi_tag       dd 4                    ; Name Size
                dd 10h                  ; Desc Size
                dd 1                    ; Type: NT_GNU_ABI_TAG
aGnu_1          db 'GNU',0              ; Name
                dd 0, 3, 2, 0           ; ABI: Linux 3.2.0
                align 8
; ELF GNU Hash Table
elf_gnu_hash_nbuckets dd 3
elf_gnu_hash_symbias dd 2Bh
elf_gnu_hash_bitmask_nwords dd 1
elf_gnu_hash_shift dd 6
elf_gnu_hash_indexes dq 2120052100100410h
elf_gnu_hash_bucket dd 2Bh, 2Ch, 2Eh
elf_gnu_hash_chain dd 5F90810Bh, 0F11ED7Ch, 0BC096AA1h, 430C9814h, 0B66B4978h
                dd 4CD54529h, 0
; ELF Symbol Table
                Elf64_Sym <0>
                Elf64_Sym <offset aErrnoLocation - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "__errno_location"
                Elf64_Sym <offset aZst7getlineics - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZSt7getlineIcSt11char_traitsIcESaIcEER"...
                           0>
                Elf64_Sym <offset aZnst14basicIfs_0 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNSt14basic_ifstreamIcSt11char_traitsI"...
                           0>
                Elf64_Sym <offset aNanosleep - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "nanosleep"
                Elf64_Sym <offset aZst17ThrowBadA - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZSt17__throw_bad_allocv"
                           0>
                Elf64_Sym <offset aCxaBeginCatch - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "__cxa_begin_catch"
                Elf64_Sym <offset aZnst7Cxx1112ba_3 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNSt7__cxx1112basic_stringIcSt11char_t"...
                           0>
                Elf64_Sym <offset aZnkst9basicIos_0 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNKSt9basic_iosIcSt11char_traitsIcEEnt"...
                           0>
                Elf64_Sym <offset aZnst7Cxx1119ba_0 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNSt7__cxx1119basic_istringstreamIcSt1"...
                           0>
                Elf64_Sym <offset aZst20ThrowLeng - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZSt20__throw_length_errorPKc"
                           0>
                Elf64_Sym <offset aZnst7Cxx1112ba_1 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNSt7__cxx1112basic_stringIcSt11char_t"...
                           0>
                Elf64_Sym <offset aZnsirseri - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "_ZNSirsERi"
                Elf64_Sym <offset aZnst7Cxx1112ba_4 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNSt7__cxx1112basic_stringIcSt11char_t"...
                           0>
                Elf64_Sym <offset aLibcStartMain - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "__libc_start_main"
                Elf64_Sym <offset aZst28ThrowBadA - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZSt28__throw_bad_array_new_lengthv"
                           0>
                Elf64_Sym <offset aCxaAtexit - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "__cxa_atexit"
                Elf64_Sym <offset aZstlsicst11cha - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZStlsIcSt11char_traitsIcESaIcEERSt13ba"...
                           0>
                Elf64_Sym <offset aZnkst7Cxx1112b_2 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNKSt7__cxx1112basic_stringIcSt11char_"...
                           0>
                Elf64_Sym <offset aZnwm - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "_Znwm"
                Elf64_Sym <offset aZdlpvm - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "_ZdlPvm"
                Elf64_Sym <offset aZnsolsepfrsosE - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZNSolsEPFRSoS_E"
                           0>
                Elf64_Sym <offset aZnsaiced1ev - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "_ZNSaIcED1Ev"
                Elf64_Sym <offset aStackChkFail - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "__stack_chk_fail"
                Elf64_Sym <offset aZstlsist11char - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZStlsISt11char_traitsIcEERSt13basic_os"...
                           0>
                Elf64_Sym <offset aZnkst9basicIos - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZNKSt9basic_iosIcSt11char_traitsIcEEcv"...
                           0>
                Elf64_Sym <offset aZstrsicst11cha - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZStrsIcSt11char_traitsIcESaIcEERSt13ba"...
                           0>
                Elf64_Sym <offset aZnst7Cxx1112ba_2 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNSt7__cxx1112basic_stringIcSt11char_t"...
                           0>
                Elf64_Sym <offset aZnst7Cxx1112ba_0 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNSt7__cxx1112basic_stringIcSt11char_t"...
                           0>
                Elf64_Sym <offset aCxaRethrow - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "__cxa_rethrow"
                Elf64_Sym <offset aZnst14basicOfs_0 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNSt14basic_ofstreamIcSt11char_traitsI"...
                           0>
                Elf64_Sym <offset aZnkst7Cxx1112b - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZNKSt7__cxx1112basic_stringIcSt11char_"...
                           0>
                Elf64_Sym <offset aZnst8iosBase4i_0 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNSt8ios_base4InitC1Ev"
                           0>
                Elf64_Sym <offset aCxaEndCatch - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "__cxa_end_catch"
                Elf64_Sym <offset aZnst7Cxx1119ba - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZNSt7__cxx1119basic_istringstreamIcSt1"...
                           0>
                Elf64_Sym <offset aZnkst7Cxx1112b_0 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNKSt7__cxx1112basic_stringIcSt11char_"...
                           0>
                Elf64_Sym <offset aUnwindResume - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "_Unwind_Resume"
                Elf64_Sym <offset aZnsaicec1ev - offset unk_4008C0, 12h, 0, 0, 0, 0> ; "_ZNSaIcEC1Ev"
                Elf64_Sym <offset aZnst14basicIfs - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZNSt14basic_ifstreamIcSt11char_traitsI"...
                           0>
                Elf64_Sym <offset aZnkst7Cxx1112b_1 - offset unk_4008C0, 12h, 0, 0, 0,\ ; "_ZNKSt7__cxx1112basic_stringIcSt11char_"...
                           0>
                Elf64_Sym <offset aGmonStart - offset unk_4008C0, 20h, 0, 0, 0, 0> ; "__gmon_start__"
                Elf64_Sym <offset aZnst14basicOfs - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZNSt14basic_ofstreamIcSt11char_traitsI"...
                           0>
                Elf64_Sym <offset aZnst7Cxx1112ba - offset unk_4008C0, 12h, 0, 0, 0, \ ; "_ZNSt7__cxx1112basic_stringIcSt11char_t"...
                           0>
                Elf64_Sym <offset aZtist9exceptio - offset unk_4008C0, 21h, 0, 18h, \ ; "_ZTISt9exception"
                           offset _ZTISt9exception@GLIBCXX_3_4, 10h>
                Elf64_Sym <offset aAbort - offset unk_4008C0, 12h, 0, 0, \ ; "abort"
                           offset _abort, 0>
                Elf64_Sym <offset aZst5flushicst1 - offset unk_4008C0, 12h, 0, 0, \ ; "_ZSt5flushIcSt11char_traitsIcEERSt13bas"...
                           offset __ZSt5flushIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_,\ ; std::flush<char,std::char_traits<char>>(std::ostream &)
                           0>
                Elf64_Sym <offset aZst4cout - offset unk_4008C0, 11h, 0, 1Dh, \ ; "_ZSt4cout"
                           offset _ZSt4cout@GLIBCXX_3_4, 110h>
                Elf64_Sym <offset aGxxPersonality - offset unk_4008C0, 12h, 0, 0, \ ; "__gxx_personality_v0"
                           offset ___gxx_personality_v0, 0>
                Elf64_Sym <offset aZnst8iosBase4i - offset unk_4008C0, 12h, 0, 0, \ ; "_ZNSt8ios_base4InitD1Ev"
                           offset __ZNSt8ios_base4InitD1Ev, 0> ; std::ios_base::Init::~Init()
; ELF String Table
unk_4008C0      db    0                 ; DATA XREF: LOAD:0000000000400440↑o
                                        ; LOAD:0000000000400458↑o ...
aGmonStart      db '__gmon_start__',0   ; DATA XREF: LOAD:00000000004007E8↑o
aZstlsist11char db '_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c',0
                                        ; DATA XREF: LOAD:0000000000400668↑o
aZnkst7Cxx1112b db '_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv',0
                                        ; DATA XREF: LOAD:0000000000400710↑o
aZst20ThrowLeng db '_ZSt20__throw_length_errorPKc',0
                                        ; DATA XREF: LOAD:0000000000400518↑o
aZnst14basicOfs db '_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic'
                                        ; DATA XREF: LOAD:0000000000400800↑o
                db '_stringIcS1_SaIcEEESt13_Ios_Openmode',0
aZnsirseri      db '_ZNSirsERi',0       ; DATA XREF: LOAD:0000000000400548↑o
aZnkst9basicIos db '_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv',0
                                        ; DATA XREF: LOAD:0000000000400680↑o
aZtist9exceptio db '_ZTISt9exception',0 ; DATA XREF: LOAD:0000000000400830↑o
aZnst7Cxx1112ba db '_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm',0
                                        ; DATA XREF: LOAD:0000000000400818↑o
aZstlsicst11cha db '_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt'
                                        ; DATA XREF: LOAD:00000000004005C0↑o
                db '7__cxx1112basic_stringIS4_S5_T1_EE',0
aZdlpvm         db '_ZdlPvm',0          ; DATA XREF: LOAD:0000000000400608↑o
aZnsaiced1ev    db '_ZNSaIcED1Ev',0     ; DATA XREF: LOAD:0000000000400638↑o
aZnst7Cxx1112ba_0 db '_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev',0
                                        ; DATA XREF: LOAD:00000000004006C8↑o
aZnst7Cxx1112ba_1 db '_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_',0
                                        ; DATA XREF: LOAD:0000000000400530↑o
aZnst14basicIfs db '_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode'
                                        ; DATA XREF: LOAD:00000000004007B8↑o
                db 0
aZnst7Cxx1112ba_2 db '_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_',0
                                        ; DATA XREF: LOAD:00000000004006B0↑o
aZnst8iosBase4i db '_ZNSt8ios_base4InitD1Ev',0
                                        ; DATA XREF: LOAD:00000000004008A8↑o
aZnkst7Cxx1112b_0 db '_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcm'
                                        ; DATA XREF: LOAD:0000000000400770↑o
                db 0
aZnsolsepfrsosE db '_ZNSolsEPFRSoS_E',0 ; DATA XREF: LOAD:0000000000400620↑o
aZnkst9basicIos_0 db '_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv',0
                                        ; DATA XREF: LOAD:00000000004004E8↑o
aZst17ThrowBadA db '_ZSt17__throw_bad_allocv',0
                                        ; DATA XREF: LOAD:00000000004004A0↑o
aCxaBeginCatch  db '__cxa_begin_catch',0 ; DATA XREF: LOAD:00000000004004B8↑o
aZnkst7Cxx1112b_1 db '_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv',0
                                        ; DATA XREF: LOAD:00000000004007D0↑o
aZst7getlineics db '_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7'
                                        ; DATA XREF: LOAD:0000000000400458↑o
                db '_RNSt7__cxx1112basic_stringIS4_S5_T1_EE',0
aGxxPersonality db '__gxx_personality_v0',0 ; DATA XREF: LOAD:0000000000400890↑o
aZnsaicec1ev    db '_ZNSaIcEC1Ev',0     ; DATA XREF: LOAD:00000000004007A0↑o
aZst28ThrowBadA db '_ZSt28__throw_bad_array_new_lengthv',0
                                        ; DATA XREF: LOAD:0000000000400590↑o
aZnst7Cxx1119ba db '_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERK'
                                        ; DATA XREF: LOAD:0000000000400758↑o
                db 'NS_12basic_stringIcS2_S3_EESt13_Ios_Openmode',0
aZnst14basicIfs_0 db '_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev',0
                                        ; DATA XREF: LOAD:0000000000400470↑o
aZnst7Cxx1112ba_3 db '_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_',0
                                        ; DATA XREF: LOAD:00000000004004D0↑o
aZnwm           db '_Znwm',0            ; DATA XREF: LOAD:00000000004005F0↑o
aZnst8iosBase4i_0 db '_ZNSt8ios_base4InitC1Ev',0
                                        ; DATA XREF: LOAD:0000000000400728↑o
aZst5flushicst1 db '_ZSt5flushIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_',0
                                        ; DATA XREF: LOAD:0000000000400860↑o
aCxaRethrow     db '__cxa_rethrow',0    ; DATA XREF: LOAD:00000000004006E0↑o
aZnst7Cxx1112ba_4 db '_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev',0
                                        ; DATA XREF: LOAD:0000000000400560↑o
aZst4cout       db '_ZSt4cout',0        ; DATA XREF: LOAD:0000000000400878↑o
aZnst14basicOfs_0 db '_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev',0
                                        ; DATA XREF: LOAD:00000000004006F8↑o
aZnst7Cxx1119ba_0 db '_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev',0
                                        ; DATA XREF: LOAD:0000000000400500↑o
aCxaEndCatch    db '__cxa_end_catch',0  ; DATA XREF: LOAD:0000000000400740↑o
aZstrsicst11cha db '_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7'
                                        ; DATA XREF: LOAD:0000000000400698↑o
                db '__cxx1112basic_stringIS4_S5_T1_EE',0
aZnkst7Cxx1112b_2 db '_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv',0
                                        ; DATA XREF: LOAD:00000000004005D8↑o
aUnwindResume   db '_Unwind_Resume',0   ; DATA XREF: LOAD:0000000000400788↑o
aLibcStartMain  db '__libc_start_main',0 ; DATA XREF: LOAD:0000000000400578↑o
aNanosleep      db 'nanosleep',0        ; DATA XREF: LOAD:0000000000400488↑o
aCxaAtexit      db '__cxa_atexit',0     ; DATA XREF: LOAD:00000000004005A8↑o
aAbort          db 'abort',0            ; DATA XREF: LOAD:0000000000400848↑o
aErrnoLocation  db '__errno_location',0 ; DATA XREF: LOAD:0000000000400440↑o
aStackChkFail   db '__stack_chk_fail',0 ; DATA XREF: LOAD:0000000000400650↑o
aLibstdcSo6     db 'libstdc++.so.6',0   ; DATA XREF: LOAD:0000000000401188↓o
aLibgccSSo1     db 'libgcc_s.so.1',0    ; DATA XREF: LOAD:0000000000401168↓o
aLibcSo6        db 'libc.so.6',0        ; DATA XREF: LOAD:00000000004011E8↓o
aGcc30          db 'GCC_3.0',0          ; DATA XREF: LOAD:0000000000401178↓o
aCxxabi139      db 'CXXABI_1.3.9',0     ; DATA XREF: LOAD:0000000000401198↓o
aGlibcxx3429    db 'GLIBCXX_3.4.29',0   ; DATA XREF: LOAD:00000000004011A8↓o
aCxxabi13       db 'CXXABI_1.3',0       ; DATA XREF: LOAD:00000000004011B8↓o
aGlibcxx34      db 'GLIBCXX_3.4',0      ; DATA XREF: LOAD:00000000004011C8↓o
aGlibcxx3421    db 'GLIBCXX_3.4.21',0   ; DATA XREF: LOAD:00000000004011D8↓o
aGlibc24        db 'GLIBC_2.4',0        ; DATA XREF: LOAD:00000000004011F8↓o
aGlibc234       db 'GLIBC_2.34',0       ; DATA XREF: LOAD:0000000000401208↓o
aGlibc225       db 'GLIBC_2.2.5',0      ; DATA XREF: LOAD:0000000000401218↓o
                align 2
; ELF GNU Symbol Version Table
                dw 0
                dw 2                    ; __errno_location@@GLIBC_2.2.5
                dw 3                    ; _ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE@@GLIBCXX_3.4.21
                dw 4                    ; _ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@@GLIBCXX_3.4
                dw 2                    ; nanosleep@@GLIBC_2.2.5
                dw 4                    ; _ZSt17__throw_bad_allocv@@GLIBCXX_3.4
                dw 5                    ; __cxa_begin_catch@@CXXABI_1.3
                dw 3                    ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@@GLIBCXX_3.4.21
                dw 4                    ; _ZNKSt9basic_iosIcSt11char_traitsIcEEntEv@@GLIBCXX_3.4
                dw 3                    ; _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev@@GLIBCXX_3.4.21
                dw 4                    ; _ZSt20__throw_length_errorPKc@@GLIBCXX_3.4
                dw 3                    ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@@GLIBCXX_3.4.21
                dw 4                    ; _ZNSirsERi@@GLIBCXX_3.4
                dw 3                    ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@@GLIBCXX_3.4.21
                dw 6                    ; __libc_start_main@@GLIBC_2.34
                dw 7                    ; _ZSt28__throw_bad_array_new_lengthv@@GLIBCXX_3.4.29
                dw 2                    ; __cxa_atexit@@GLIBC_2.2.5
                dw 3                    ; _ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@@GLIBCXX_3.4.21
                dw 3                    ; _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv@@GLIBCXX_3.4.21
                dw 4                    ; _Znwm@@GLIBCXX_3.4
                dw 8                    ; _ZdlPvm@@CXXABI_1.3.9
                dw 4                    ; _ZNSolsEPFRSoS_E@@GLIBCXX_3.4
                dw 4                    ; _ZNSaIcED1Ev@@GLIBCXX_3.4
                dw 9                    ; __stack_chk_fail@@GLIBC_2.4
                dw 4                    ; _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@@GLIBCXX_3.4
                dw 3                    ; _ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv@@GLIBCXX_3.4.21
                dw 3                    ; _ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE@@GLIBCXX_3.4.21
                dw 3                    ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@@GLIBCXX_3.4.21
                dw 3                    ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@@GLIBCXX_3.4.21
                dw 5                    ; __cxa_rethrow@@CXXABI_1.3
                dw 4                    ; _ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev@@GLIBCXX_3.4
                dw 3                    ; _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv@@GLIBCXX_3.4.21
                dw 4                    ; _ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4
                dw 5                    ; __cxa_end_catch@@CXXABI_1.3
                dw 3                    ; _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode@@GLIBCXX_3.4.21
                dw 3                    ; _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcm@@GLIBCXX_3.4.21
                dw 0Ah                  ; _Unwind_Resume@@GCC_3.0
                dw 4                    ; _ZNSaIcEC1Ev@@GLIBCXX_3.4
                dw 4                    ; _ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode@@GLIBCXX_3.4
                dw 3                    ; _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv@@GLIBCXX_3.4.21
                dw 1                    ; global symbol: __gmon_start__
                dw 3                    ; _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@@GLIBCXX_3.4.21
                dw 3                    ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@@GLIBCXX_3.4.21
                dw 4                    ; _ZTISt9exception@@GLIBCXX_3.4
                dw 2                    ; abort@@GLIBC_2.2.5
                dw 4                    ; _ZSt5flushIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@@GLIBCXX_3.4
                dw 4                    ; _ZSt4cout@@GLIBCXX_3.4
                dw 5                    ; __gxx_personality_v0@@CXXABI_1.3
                dw 4                    ; _ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4
; ELF GNU Symbol Version Requirements
                Elf64_Verneed <1, 1, offset aLibgccSSo1 - offset unk_4008C0, 10h, 20h> ; "libgcc_s.so.1"
                Elf64_Vernaux <0B792650h, 0, 0Ah, offset aGcc30 - offset unk_4008C0, \ ; "GCC_3.0"
                               0>
                Elf64_Verneed <1, 5, offset aLibstdcSo6 - offset unk_4008C0, 10h, 60h> ; "libstdc++.so.6"
                Elf64_Vernaux <0BAFD179h, 0, 8, offset aCxxabi139 - offset unk_4008C0,\ ; "CXXABI_1.3.9"
                               10h>
                Elf64_Vernaux <297F879h, 0, 7, \ ; "GLIBCXX_3.4.29"
                               offset aGlibcxx3429 - offset unk_4008C0, 10h>
                Elf64_Vernaux <56BAFD3h, 0, 5, offset aCxxabi13 - offset unk_4008C0, \ ; "CXXABI_1.3"
                               10h>
                Elf64_Vernaux <8922974h, 0, 4, offset aGlibcxx34 - offset unk_4008C0, \ ; "GLIBCXX_3.4"
                               10h>
                Elf64_Vernaux <297F871h, 0, 3, \ ; "GLIBCXX_3.4.21"
                               offset aGlibcxx3421 - offset unk_4008C0, 0>
                Elf64_Verneed <1, 3, offset aLibcSo6 - offset unk_4008C0, 10h, 0> ; "libc.so.6"
                Elf64_Vernaux <0D696914h, 0, 9, offset aGlibc24 - offset unk_4008C0, \ ; "GLIBC_2.4"
                               10h>
                Elf64_Vernaux <69691B4h, 0, 6, offset aGlibc234 - offset unk_4008C0, \ ; "GLIBC_2.34"
                               10h>
                Elf64_Vernaux <9691A75h, 0, 2, offset aGlibc225 - offset unk_4008C0, \ ; "GLIBC_2.2.5"
                               0>
; ELF RELA Relocation Table
                Elf64_Rela <419FF0h, 0E00000006h, 0> ; R_X86_64_GLOB_DAT __libc_start_main
                Elf64_Rela <419FF8h, 2800000006h, 0> ; R_X86_64_GLOB_DAT __gmon_start__
                Elf64_Rela <419DF0h, 2B00000005h, 0> ; R_X86_64_COPY _ZTISt9exception
                Elf64_Rela <41A3C0h, 2E00000005h, 0> ; R_X86_64_COPY _ZSt4cout
; ELF JMPREL Relocation Table
                Elf64_Rela <41A018h, 100000007h, 0> ; R_X86_64_JUMP_SLOT __errno_location
                Elf64_Rela <41A020h, 200000007h, 0> ; R_X86_64_JUMP_SLOT _ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE
                Elf64_Rela <41A028h, 300000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev
                Elf64_Rela <41A030h, 400000007h, 0> ; R_X86_64_JUMP_SLOT nanosleep
                Elf64_Rela <41A038h, 500000007h, 0> ; R_X86_64_JUMP_SLOT _ZSt17__throw_bad_allocv
                Elf64_Rela <41A040h, 600000007h, 0> ; R_X86_64_JUMP_SLOT __cxa_begin_catch
                Elf64_Rela <41A048h, 700000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
                Elf64_Rela <41A050h, 800000007h, 0> ; R_X86_64_JUMP_SLOT _ZNKSt9basic_iosIcSt11char_traitsIcEEntEv
                Elf64_Rela <41A058h, 900000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev
                Elf64_Rela <41A060h, 0A00000007h, 0> ; R_X86_64_JUMP_SLOT _ZSt20__throw_length_errorPKc
                Elf64_Rela <41A068h, 2C00000007h, 0> ; R_X86_64_JUMP_SLOT abort
                Elf64_Rela <41A070h, 0B00000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_
                Elf64_Rela <41A078h, 0C00000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSirsERi
                Elf64_Rela <41A080h, 0D00000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
                Elf64_Rela <41A088h, 0F00000007h, 0> ; R_X86_64_JUMP_SLOT _ZSt28__throw_bad_array_new_lengthv
                Elf64_Rela <41A090h, 1000000007h, 0> ; R_X86_64_JUMP_SLOT __cxa_atexit
                Elf64_Rela <41A098h, 1100000007h, 0> ; R_X86_64_JUMP_SLOT _ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE
                Elf64_Rela <41A0A0h, 1200000007h, 0> ; R_X86_64_JUMP_SLOT _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv
                Elf64_Rela <41A0A8h, 1300000007h, 0> ; R_X86_64_JUMP_SLOT _Znwm
                Elf64_Rela <41A0B0h, 1400000007h, 0> ; R_X86_64_JUMP_SLOT _ZdlPvm
                Elf64_Rela <41A0B8h, 1500000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSolsEPFRSoS_E
                Elf64_Rela <41A0C0h, 1600000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSaIcED1Ev
                Elf64_Rela <41A0C8h, 1700000007h, 0> ; R_X86_64_JUMP_SLOT __stack_chk_fail
                Elf64_Rela <41A0D0h, 1800000007h, 0> ; R_X86_64_JUMP_SLOT _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c
                Elf64_Rela <41A0D8h, 1900000007h, 0> ; R_X86_64_JUMP_SLOT _ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv
                Elf64_Rela <41A0E0h, 1A00000007h, 0> ; R_X86_64_JUMP_SLOT _ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE
                Elf64_Rela <41A0E8h, 2D00000007h, 0> ; R_X86_64_JUMP_SLOT _ZSt5flushIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
                Elf64_Rela <41A0F0h, 1B00000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
                Elf64_Rela <41A0F8h, 1C00000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
                Elf64_Rela <41A100h, 1D00000007h, 0> ; R_X86_64_JUMP_SLOT __cxa_rethrow
                Elf64_Rela <41A108h, 1E00000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
                Elf64_Rela <41A110h, 1F00000007h, 0> ; R_X86_64_JUMP_SLOT _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv
                Elf64_Rela <41A118h, 2000000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt8ios_base4InitC1Ev
                Elf64_Rela <41A120h, 2100000007h, 0> ; R_X86_64_JUMP_SLOT __cxa_end_catch
                Elf64_Rela <41A128h, 2F00000007h, 0> ; R_X86_64_JUMP_SLOT __gxx_personality_v0
                Elf64_Rela <41A130h, 2200000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode
                Elf64_Rela <41A138h, 2300000007h, 0> ; R_X86_64_JUMP_SLOT _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcm
                Elf64_Rela <41A140h, 2400000007h, 0> ; R_X86_64_JUMP_SLOT _Unwind_Resume
                Elf64_Rela <41A148h, 2500000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSaIcEC1Ev
                Elf64_Rela <41A150h, 2600000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode
                Elf64_Rela <41A158h, 2700000007h, 0> ; R_X86_64_JUMP_SLOT _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv
                Elf64_Rela <41A160h, 2900000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
                Elf64_Rela <41A168h, 2A00000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm
                Elf64_Rela <41A170h, 3000000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt8ios_base4InitD1Ev
LOAD            ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
_init           segment dword public 'CODE' use64
                assume cs:_init
                ;org 402000h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================


                public _init_proc
_init_proc      proc near               ; DATA XREF: LOAD:00000000004000F8↑o
                endbr64                 ; _init
                sub     rsp, 8
                mov     rax, cs:__gmon_start___ptr
                test    rax, rax
                jz      short loc_402016
                call    rax ; __gmon_start__

loc_402016:                             ; CODE XREF: _init_proc+12↑j
                add     rsp, 8
                retn
_init_proc      endp

_init           ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
LOAD            segment mempage public 'CODE' use64
                assume cs:LOAD
                ;org 40201Bh
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                align 20h
LOAD            ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
_plt            segment para public 'CODE' use64
                assume cs:_plt
                ;org 402020h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================


sub_402020      proc near               ; CODE XREF: sub_402030+9↓j
                                        ; sub_402040+9↓j ...
; __unwind {
                push    cs:qword_41A008
                bnd jmp cs:qword_41A010
sub_402020      endp

; ---------------------------------------------------------------------------
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402030. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402040. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402050. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402060. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402070. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402080. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402090. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4020A0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4020B0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4020C0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4020D0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4020E0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4020F0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402100. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402110. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402120. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402130. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402140. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402150. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402160. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402170. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402180. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402190. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4021A0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4021B0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4021C0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4021D0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4021E0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4021F0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402200. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402210. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402220. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402230. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402240. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402250. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402260. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402270. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402280. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_402290. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4022A0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4022B0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4022C0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4022D0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000F BYTES: COLLAPSED FUNCTION sub_4022E0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; } // starts at 402020
_plt            ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
_plt_sec        segment para public 'CODE' use64
                assume cs:_plt_sec
                ;org 4022F0h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
; [0000000B BYTES: COLLAPSED FUNCTION ___errno_location. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::getline<char,std::char_traits<char>,std::allocator<char>>(std::istream &,std::string &). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::ifstream::~ifstream(). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION _nanosleep. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::__throw_bad_alloc(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION ___cxa_begin_catch. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::string::basic_string(std::string const&). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::ios::operator!(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::istringstream::~istringstream(). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::__throw_length_error(char const*). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION _abort. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::string::basic_string(std::string&&). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::istream::operator>>(int &). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::string::~string(). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::__throw_bad_array_new_length(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION ___cxa_atexit. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::operator<<<char>(std::ostream &,std::string const&). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::string::begin(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION operator new(ulong). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION operator delete(void *,ulong). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::ostream::operator<<(std::ostream & (*)(std::ostream &)). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::allocator<char>::~allocator(). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION ___stack_chk_fail. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::operator<<<std::char_traits<char>>(std::ostream &,char). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::ios::operator bool(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::operator>><char>(std::istream &,std::string &). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::flush<char,std::char_traits<char>>(std::ostream &). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::string::basic_string(char const*,std::allocator<char> const&). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::string::basic_string(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION ___cxa_rethrow. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::ofstream::~ofstream(). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::string::length(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::ios_base::Init::Init(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION ___cxa_end_catch. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION ___gxx_personality_v0. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::istringstream::basic_istringstream(std::string const&,std::_Ios_Openmode). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::string::rfind(char const*,ulong). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION __Unwind_Resume. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::allocator<char>::allocator(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::ifstream::basic_ifstream(char const*,std::_Ios_Openmode). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::string::end(void). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::ofstream::basic_ofstream(std::string const&,std::_Ios_Openmode). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; [0000000B BYTES: COLLAPSED FUNCTION std::string::operator[](ulong). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 20h
; [0000000B BYTES: COLLAPSED FUNCTION std::ios_base::Init::~Init(). PRESS CTRL-NUMPAD+ TO EXPAND]
                align 10h
; } // starts at 4022F0
_plt_sec        ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
_text           segment para public 'CODE' use64
                assume cs:_text
                ;org 4025B0h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn fuzzy-sp

                public _start
_start          proc near               ; DATA XREF: LOAD:0000000000400018↑o
; __unwind {
                endbr64
                xor     ebp, ebp
                mov     r9, rdx         ; rtld_fini
                pop     rsi             ; argc
                mov     rdx, rsp        ; ubp_av
                and     rsp, 0FFFFFFFFFFFFFFF0h
                push    rax
                push    rsp             ; stack_end
                xor     r8d, r8d        ; fini
                xor     ecx, ecx        ; init
                mov     rdi, offset main ; main
                call    cs:__libc_start_main_ptr
                hlt
; } // starts at 4025B0
_start          endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


                public _dl_relocate_static_pie
_dl_relocate_static_pie proc near
; __unwind {
                endbr64
                retn
; } // starts at 4025E0
_dl_relocate_static_pie endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


deregister_tm_clones proc near          ; CODE XREF: __do_global_dtors_aux+11↓p
                mov     eax, offset __bss_start
                cmp     rax, offset __bss_start
                jz      short locret_402610
                mov     eax, 0
                test    rax, rax
                jz      short locret_402610
                mov     edi, offset __bss_start
                jmp     rax
; ---------------------------------------------------------------------------
                align 10h

locret_402610:                          ; CODE XREF: deregister_tm_clones+B↑j
                                        ; deregister_tm_clones+15↑j
                retn
deregister_tm_clones endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


register_tm_clones proc near            ; CODE XREF: frame_dummy+4↓j
                mov     esi, offset __bss_start
                sub     rsi, offset __bss_start
                mov     rax, rsi
                shr     rsi, 3Fh
                sar     rax, 3
                add     rsi, rax
                sar     rsi, 1
                jz      short locret_402650
                mov     eax, 0
                test    rax, rax
                jz      short locret_402650
                mov     edi, offset __bss_start
                jmp     rax
; ---------------------------------------------------------------------------

locret_402650:                          ; CODE XREF: register_tm_clones+1D↑j
                                        ; register_tm_clones+27↑j
                retn
register_tm_clones endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


__do_global_dtors_aux proc near         ; DATA XREF: .fini_array:__do_global_dtors_aux_fini_array_entry↓o
                endbr64
                cmp     cs:completed_0, 0
                jnz     short locret_402680
                push    rbp
                mov     rbp, rsp
                call    deregister_tm_clones
                mov     cs:completed_0, 1
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                align 20h

locret_402680:                          ; CODE XREF: __do_global_dtors_aux+B↑j
                retn
__do_global_dtors_aux endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


frame_dummy     proc near               ; DATA XREF: .init_array:__frame_dummy_init_array_entry↓o
                endbr64
                jmp     short register_tm_clones
frame_dummy     endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __0(void)
_ZL3__0v        proc near               ; CODE XREF: ive_played_these_games_before(void)+60↓p
                                        ; ive_played_these_games_before(void)+131↓p ...
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     eax, 0
                pop     rbp
                retn
; } // starts at 402696
_ZL3__0v        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __1(void)
_ZL3__1v        proc near
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     eax, 1
                pop     rbp
                retn
; } // starts at 4026A5
_ZL3__1v        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __2(void)
_ZL3__2v        proc near               ; CODE XREF: ive_played_these_games_before(void)+57↓p
                                        ; ive_played_these_games_before(void)+128↓p ...
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     eax, 2
                pop     rbp
                retn
; } // starts at 4026B4
_ZL3__2v        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __3(void)
_ZL3__3v        proc near               ; CODE XREF: ive_played_these_games_before(void)+182↓p
                                        ; ive_played_these_games_before(void)+4BE↓p ...
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     eax, 3
                pop     rbp
                retn
; } // starts at 4026C3
_ZL3__3v        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __4(void)
_ZL3__4v        proc near
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     eax, 4
                pop     rbp
                retn
; } // starts at 4026D2
_ZL3__4v        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __5(void)
_ZL3__5v        proc near
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     eax, 5
                pop     rbp
                retn
; } // starts at 4026E1
_ZL3__5v        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __6(void)
_ZL3__6v        proc near               ; CODE XREF: ive_played_these_games_before(void)+174↓p
                                        ; ive_played_these_games_before(void)+4B0↓p ...
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     eax, 6
                pop     rbp
                retn
; } // starts at 4026F0
_ZL3__6v        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __7(void)
_ZL3__7v        proc near               ; CODE XREF: ive_played_these_games_before(void)+49↓p
                                        ; ive_played_these_games_before(void)+11A↓p ...
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     eax, 7
                pop     rbp
                retn
; } // starts at 4026FF
_ZL3__7v        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __8(void)
_ZL3__8v        proc near
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     eax, 8
                pop     rbp
                retn
; } // starts at 40270E
_ZL3__8v        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __9(void)
_ZL3__9v        proc near               ; CODE XREF: ive_played_these_games_before(void)+1A0↓p
                                        ; ive_played_these_games_before(void)+4DC↓p ...
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     eax, 9
                pop     rbp
                retn
; } // starts at 40271D
_ZL3__9v        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall obfusheader_watermark_hook(const char *)
_ZL26obfusheader_watermark_hookPKc proc near
                                        ; CODE XREF: obfusheader_decoy_main(void)+48↓p
                                        ; main+79↓p
                                        ; DATA XREF: ...

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                nop
                pop     rbp
                retn
; } // starts at 40272C
_ZL26obfusheader_watermark_hookPKc endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 obfusheader_decoy_main(void)
_ZL22obfusheader_decoy_mainv proc near  ; CODE XREF: obfusheader_decoy_1(void)+8↓p
                                        ; obfusheader_decoy_2(void)+8↓p ...

var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_20], offset aNeverGonnaGive ; "Never gonna give you up\nNever gonna le"...
                mov     [rbp+var_18], 0
                mov     [rbp+var_24], 0
                jmp     short loc_40278E
; ---------------------------------------------------------------------------

loc_40276F:                             ; CODE XREF: obfusheader_decoy_main(void)+61↓j
                mov     rdx, cs:_ZL26obfusheader_watermark_orig ; obfusheader_watermark_orig
                mov     eax, [rbp+var_24]
                cdqe
                mov     rax, [rbp+rax*8+var_20]
                mov     rdi, rax        ; char *
                call    rdx ; obfusheader_watermark_hook(char const*) ; obfusheader_watermark_hook(char const*)
                mov     eax, [rbp+var_24]
                add     eax, 1
                mov     [rbp+var_24], eax

loc_40278E:                             ; CODE XREF: obfusheader_decoy_main(void)+32↑j
                mov     eax, [rbp+var_24]
                cdqe
                cmp     rax, 1
                setbe   al
                test    al, al
                jnz     short loc_40276F
                nop
                mov     rax, [rbp+var_8]
                sub     rax, fs:28h
                jz      short locret_4027B3
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_4027B3:                          ; CODE XREF: obfusheader_decoy_main(void)+71↑j
                leave
                retn
; } // starts at 40273B
_ZL22obfusheader_decoy_mainv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 obfusheader_decoy_1(void)
_ZL19obfusheader_decoy_1v proc near     ; CODE XREF: main+E2A0↓p
                                        ; DATA XREF: obf::select_func<void (*)(void),10,6,&(abort),0>(void)+23↓o ...
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                call    _ZL22obfusheader_decoy_mainv ; obfusheader_decoy_main(void)
                nop
                pop     rbp
                retn
; } // starts at 4027B5
_ZL19obfusheader_decoy_1v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 obfusheader_decoy_2(void)
_ZL19obfusheader_decoy_2v proc near     ; CODE XREF: main+E2A0↓p
                                        ; DATA XREF: obf::select_func<void (*)(void),10,6,&(abort),0>(void)+2B↓o ...
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                call    _ZL22obfusheader_decoy_mainv ; obfusheader_decoy_main(void)
                nop
                pop     rbp
                retn
; } // starts at 4027C5
_ZL19obfusheader_decoy_2v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 obfusheader_decoy_3(void)
_ZL19obfusheader_decoy_3v proc near     ; CODE XREF: main+E2A0↓p
                                        ; DATA XREF: obf::select_func<void (*)(void),10,6,&(abort),0>(void)+33↓o ...
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                call    _ZL22obfusheader_decoy_mainv ; obfusheader_decoy_main(void)
                nop
                pop     rbp
                retn
; } // starts at 4027D5
_ZL19obfusheader_decoy_3v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 obfusheader_decoy_4(void)
_ZL19obfusheader_decoy_4v proc near
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                call    _ZL22obfusheader_decoy_mainv ; obfusheader_decoy_main(void)
                nop
                pop     rbp
                retn
; } // starts at 4027E5
_ZL19obfusheader_decoy_4v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 obfusheader_decoy_5(void)
_ZL19obfusheader_decoy_5v proc near     ; DATA XREF: obf::select_func<void (*)(void),10,6,&(abort),0>(void)+53↓o
                                        ; obf::select_func<void (*)(void),10,6,&(abort),4>(void)+53↓o ...
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                call    _ZL22obfusheader_decoy_mainv ; obfusheader_decoy_main(void)
                nop
                pop     rbp
                retn
; } // starts at 4027F5
_ZL19obfusheader_decoy_5v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 obfusheader_decoy_6(void)
_ZL19obfusheader_decoy_6v proc near
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                call    _ZL22obfusheader_decoy_mainv ; obfusheader_decoy_main(void)
                nop
                pop     rbp
                retn
; } // starts at 402805
_ZL19obfusheader_decoy_6v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 obfusheader_decoy_7(void)
_ZL19obfusheader_decoy_7v proc near
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                call    _ZL22obfusheader_decoy_mainv ; obfusheader_decoy_main(void)
                nop
                pop     rbp
                retn
; } // starts at 402815
_ZL19obfusheader_decoy_7v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 obfusheader_decoy_8(void)
_ZL19obfusheader_decoy_8v proc near
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                call    _ZL22obfusheader_decoy_mainv ; obfusheader_decoy_main(void)
                nop
                pop     rbp
                retn
; } // starts at 402825
_ZL19obfusheader_decoy_8v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 obfusheader_decoy_9(void)
_ZL19obfusheader_decoy_9v proc near
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                call    _ZL22obfusheader_decoy_mainv ; obfusheader_decoy_main(void)
                nop
                pop     rbp
                retn
; } // starts at 402835
_ZL19obfusheader_decoy_9v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 obfusheader_decoy_10(void)
_ZL20obfusheader_decoy_10v proc near
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                call    _ZL22obfusheader_decoy_mainv ; obfusheader_decoy_main(void)
                nop
                pop     rbp
                retn
; } // starts at 402845
_ZL20obfusheader_decoy_10v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 ive_played_these_games_before(void)
                public _Z29ive_played_these_games_beforev
_Z29ive_played_these_games_beforev proc near ; CODE XREF: main+956C↓p

var_42C         = dword ptr -42Ch
var_428         = dword ptr -428h
var_424         = dword ptr -424h
var_420         = dword ptr -420h
var_41C         = dword ptr -41Ch
var_418         = qword ptr -418h
var_410         = qword ptr -410h
var_408         = qword ptr -408h
var_400         = qword ptr -400h
var_3F8         = qword ptr -3F8h
var_3F0         = byte ptr -3F0h
var_3D0         = byte ptr -3D0h
var_3B0         = byte ptr -3B0h
var_230         = byte ptr -230h
var_28          = qword ptr -28h

; __unwind { // ___gxx_personality_v0
                endbr64
                push    rbp
                mov     rbp, rsp
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 410h
                mov     rax, fs:28h
                mov     [rbp+var_28], rax
                xor     eax, eax
                lea     rax, [rbp+var_230]
                mov     edx, 8
                mov     esi, offset aProcSelfStatus ; "/proc/self/status"
                mov     rdi, rax
;   try {
                call    __ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode ; std::ifstream::basic_ifstream(char const*,std::_Ios_Openmode)
;   } // starts at 40288E
                movzx   eax, cs:_ZL2_9
                movsx   r12d, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, r12d
                mov     r13d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   r12d, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                mov     edx, r12d
                imul    edx, eax
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, r13d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_402BB0
                lea     rax, [rbp+var_230]
                add     rax, 100h
                mov     rdi, rax
;   try {
                call    __ZNKSt9basic_iosIcSt11char_traitsIcEEntEv ; std::ios::operator!(void)
;   } // starts at 402907
                movzx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                movsd   [rbp+var_400], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_400]
                movsd   [rbp+var_418], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   r12d, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, r12d
                mov     r13d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   r12d, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, r12d
                shl     eax, 2
                add     eax, r13d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_402A11
                movzx   eax, cs:_ZL2_3
                movsx   r12d, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, r12d
                mov     r12d, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     r12d, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     r12d, eax
                setnz   al
                test    al, al
                jz      short loc_402A11
                mov     eax, 8
                jmp     loc_402B14
; ---------------------------------------------------------------------------

loc_402A11:                             ; CODE XREF: ive_played_these_games_before(void)+167↑j
                                        ; ive_played_these_games_before(void)+1B0↑j
                movzx   eax, cs:_ZL2_9
                movsx   r12d, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, r12d
                mov     r13d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   r12d, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                mov     edx, r12d
                imul    edx, eax
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r13d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_402B0F
                movzx   eax, cs:_ZL2_9
                movsx   r12d, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, r12d
                mov     r13d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   r12d, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                mov     edx, r12d
                imul    edx, eax
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r13d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_402AE4
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_402AFD
; ---------------------------------------------------------------------------

loc_402AE4:                             ; CODE XREF: ive_played_these_games_before(void)+282↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_402AFD:                             ; CODE XREF: ive_played_these_games_before(void)+28D↑j
                movsd   xmm1, [rbp+var_418]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_402B14
; ---------------------------------------------------------------------------

loc_402B0F:                             ; CODE XREF: ive_played_these_games_before(void)+21C↑j
                mov     eax, 0

loc_402B14:                             ; CODE XREF: ive_played_these_games_before(void)+1B7↑j
                                        ; ive_played_these_games_before(void)+2B8↑j
                mov     r13d, eax
                movzx   eax, cs:_ZL2_9
                movsx   r12d, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, r12d
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   r12d, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                mov     edx, r12d
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     ecx, eax
                movzx   eax, cs:_ZL2_1
                movsx   edx, al
                mov     eax, ecx
                sub     eax, edx
                imul    eax, r13d
                test    eax, eax
                jz      short loc_402B82
                mov     eax, 1
                jmp     short loc_402B87
; ---------------------------------------------------------------------------

loc_402B82:                             ; CODE XREF: ive_played_these_games_before(void)+324↑j
                mov     eax, 0

loc_402B87:                             ; CODE XREF: ive_played_these_games_before(void)+32B↑j
                test    al, al
                jz      short loc_402BB0
                mov     [rbp+var_428], 0
                mov     eax, [rbp+var_428]
                cmp     eax, 37h ; '7'
                ja      short loc_402BB0
                mov     ebx, 0
                mov     r12d, 0
                jmp     loc_402FEE
; ---------------------------------------------------------------------------

loc_402BB0:                             ; CODE XREF: ive_played_these_games_before(void)+9C↑j
                                        ; ive_played_these_games_before(void)+334↑j ...
                lea     rax, [rbp+var_3F0]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev ; std::string::basic_string(void)
                jmp     loc_402F8F
; ---------------------------------------------------------------------------

loc_402BC4:                             ; CODE XREF: ive_played_these_games_before(void)+76A↓j
                movzx   eax, cs:_ZL2_9
                movsx   r12d, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, r12d
                mov     r13d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   r12d, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                mov     edx, r12d
                imul    edx, eax
                mov     eax, edx
                shl     eax, 3
                sub     eax, edx
                add     eax, r13d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_402F8F
                lea     rax, [rbp+var_3F0]
                mov     edx, 0
                mov     esi, offset aTracerpid ; "TracerPid:"
                mov     rdi, rax
;   try {
                call    __ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcm ; std::string::rfind(char const*,ulong)
                test    rax, rax
                jnz     short loc_402C50
                movsd   xmm0, cs:qword_416418
                jmp     short loc_402C54
; ---------------------------------------------------------------------------

loc_402C50:                             ; CODE XREF: ive_played_these_games_before(void)+3EF↑j
                pxor    xmm0, xmm0

loc_402C54:                             ; CODE XREF: ive_played_these_games_before(void)+3F9↑j
                movsd   [rbp+var_3F8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_3F8]
                movsd   [rbp+var_410], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   r12d, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, r12d
                mov     r13d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   r12d, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, r12d
                shl     eax, 2
                add     eax, r13d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_402D4D
                movzx   eax, cs:_ZL2_3
                movsx   r12d, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, r12d
                mov     r12d, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     r12d, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     r12d, eax
                setnz   al
                test    al, al
                jz      short loc_402D4D
                mov     eax, 8
                jmp     loc_402E50
; ---------------------------------------------------------------------------

loc_402D4D:                             ; CODE XREF: ive_played_these_games_before(void)+4A3↑j
                                        ; ive_played_these_games_before(void)+4EC↑j
                movzx   eax, cs:_ZL2_9
                movsx   r12d, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, r12d
                mov     r13d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   r12d, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                mov     edx, r12d
                imul    edx, eax
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r13d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_402E4B
                movzx   eax, cs:_ZL2_9
                movsx   r12d, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, r12d
                mov     r13d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   r12d, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                mov     edx, r12d
                imul    edx, eax
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r13d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_402E20
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_402E39
; ---------------------------------------------------------------------------

loc_402E20:                             ; CODE XREF: ive_played_these_games_before(void)+5BE↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_402E39:                             ; CODE XREF: ive_played_these_games_before(void)+5C9↑j
                movsd   xmm1, [rbp+var_410]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_402E50
; ---------------------------------------------------------------------------

loc_402E4B:                             ; CODE XREF: ive_played_these_games_before(void)+558↑j
                mov     eax, 0

loc_402E50:                             ; CODE XREF: ive_played_these_games_before(void)+4F3↑j
                                        ; ive_played_these_games_before(void)+5F4↑j
                mov     r13d, eax
                movzx   eax, cs:_ZL2_9
                movsx   r12d, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, r12d
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   r12d, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, r12d
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     ecx, eax
                movzx   eax, cs:_ZL2_1
                movsx   edx, al
                mov     eax, ecx
                sub     eax, edx
                imul    eax, r13d
                test    eax, eax
                jz      short loc_402EB6
                mov     eax, 1
                jmp     short loc_402EBB
; ---------------------------------------------------------------------------

loc_402EB6:                             ; CODE XREF: ive_played_these_games_before(void)+658↑j
                mov     eax, 0

loc_402EBB:                             ; CODE XREF: ive_played_these_games_before(void)+65F↑j
                test    al, al
                jz      loc_402F8F
                lea     rcx, [rbp+var_3F0]
                lea     rax, [rbp+var_3B0]
                mov     edx, 8
                mov     rsi, rcx
                mov     rdi, rax
                call    __ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode ; std::istringstream::basic_istringstream(std::string const&,std::_Ios_Openmode)
;   } // starts at 402C3C
                lea     rax, [rbp+var_3D0]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev ; std::string::basic_string(void)
                lea     rdx, [rbp+var_3D0]
                lea     rax, [rbp+var_3B0]
                mov     rsi, rdx
                mov     rdi, rax
;   try {
                call    __ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE ; std::operator>><char>(std::istream &,std::string &)
                mov     rdx, rax
                lea     rax, [rbp+var_42C]
                mov     rsi, rax
                mov     rdi, rdx
                call    __ZNSirsERi     ; std::istream::operator>>(int &)
;   } // starts at 402F04
                mov     [rbp+var_424], 0
                mov     eax, [rbp+var_424]
                cmp     eax, 7
                ja      short loc_402F46
                mov     eax, [rbp+var_42C]
                test    eax, eax
                setnz   bl
                mov     r12d, 0
                jmp     short loc_402F4C
; ---------------------------------------------------------------------------

loc_402F46:                             ; CODE XREF: ive_played_these_games_before(void)+6DC↑j
                mov     r12d, 1

loc_402F4C:                             ; CODE XREF: ive_played_these_games_before(void)+6EF↑j
                lea     rax, [rbp+var_3D0]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                cmp     r12d, 1
                jnz     short loc_402F69
                mov     r12d, 1
                jmp     short loc_402F6F
; ---------------------------------------------------------------------------

loc_402F69:                             ; CODE XREF: ive_played_these_games_before(void)+70A↑j
                mov     r12d, 0

loc_402F6F:                             ; CODE XREF: ive_played_these_games_before(void)+712↑j
                lea     rax, [rbp+var_3B0]
                mov     rdi, rax
                call    __ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev ; std::istringstream::~istringstream()
                cmp     r12d, 1
                jnz     short loc_402F87
                nop
                jmp     short loc_402F8F
; ---------------------------------------------------------------------------

loc_402F87:                             ; CODE XREF: ive_played_these_games_before(void)+72D↑j
                mov     r12d, 0
                jmp     short loc_402FCB
; ---------------------------------------------------------------------------

loc_402F8F:                             ; CODE XREF: ive_played_these_games_before(void)+36A↑j
                                        ; ive_played_these_games_before(void)+3CD↑j ...
                lea     rdx, [rbp+var_3F0]
                lea     rax, [rbp+var_230]
                mov     rsi, rdx
                mov     rdi, rax
;   try {
                call    __ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE ; std::getline<char,std::char_traits<char>,std::allocator<char>>(std::istream &,std::string &)
                mov     rdx, [rax]
                sub     rdx, 18h
                mov     rdx, [rdx]
                add     rax, rdx
                mov     rdi, rax
                call    __ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv ; std::ios::operator bool(void)
;   } // starts at 402FA3
                test    al, al
                jnz     loc_402BC4
                mov     r12d, 1

loc_402FCB:                             ; CODE XREF: ive_played_these_games_before(void)+738↑j
                lea     rax, [rbp+var_3F0]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                cmp     r12d, 1
                jnz     short loc_402FE8
                mov     r12d, 1
                jmp     short loc_402FEE
; ---------------------------------------------------------------------------

loc_402FE8:                             ; CODE XREF: ive_played_these_games_before(void)+789↑j
                mov     r12d, 0

loc_402FEE:                             ; CODE XREF: ive_played_these_games_before(void)+356↑j
                                        ; ive_played_these_games_before(void)+791↑j
                lea     rax, [rbp+var_230]
                mov     rdi, rax
                call    __ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev ; std::ifstream::~ifstream()
                cmp     r12d, 1
                jnz     short loc_403024

loc_403003:                             ; CODE XREF: ive_played_these_games_before(void)+894↓j
                mov     [rbp+var_41C], 0
                mov     eax, [rbp+var_41C]
                cmp     eax, 21h ; '!'
                ja      short loc_40301F
                mov     ebx, 0
                jmp     short loc_403024
; ---------------------------------------------------------------------------

loc_40301F:                             ; CODE XREF: ive_played_these_games_before(void)+7C1↑j
                jmp     loc_4030EE
; ---------------------------------------------------------------------------

loc_403024:                             ; CODE XREF: ive_played_these_games_before(void)+7AC↑j
                                        ; ive_played_these_games_before(void)+7C8↑j ...
                mov     eax, ebx
                jmp     loc_4030EE
; ---------------------------------------------------------------------------
;   cleanup() // owned by 402F04
                endbr64
                mov     r13, rax
                mov     r12, rdx
                lea     rax, [rbp+var_3D0]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                lea     rax, [rbp+var_3B0]
                mov     rdi, rax
                call    __ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev ; std::istringstream::~istringstream()
                jmp     short loc_40305F
; ---------------------------------------------------------------------------
;   cleanup() // owned by 402C3C
;   cleanup() // owned by 402FA3
                endbr64
                mov     r13, rax
                mov     r12, rdx

loc_40305F:                             ; CODE XREF: ive_played_these_games_before(void)+7FE↑j
                lea     rax, [rbp+var_3F0]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                jmp     short loc_40307A
; ---------------------------------------------------------------------------
;   cleanup() // owned by 402907
                endbr64
                mov     r13, rax
                mov     r12, rdx

loc_40307A:                             ; CODE XREF: ive_played_these_games_before(void)+819↑j
                lea     rax, [rbp+var_230]
                mov     rdi, rax
                call    __ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev ; std::ifstream::~ifstream()
                mov     rax, r13
                mov     rdx, r12
                jmp     short loc_403095
; ---------------------------------------------------------------------------
;   catch(_ZTISt9exception@GLIBCXX_3_4) // owned by 40288E
                endbr64

loc_403095:                             ; CODE XREF: ive_played_these_games_before(void)+83A↑j
                cmp     rdx, 1
                jz      short loc_4030A3
                mov     rdi, rax        ; struct _Unwind_Exception *
                call    __Unwind_Resume
; ---------------------------------------------------------------------------

loc_4030A3:                             ; CODE XREF: ive_played_these_games_before(void)+844↑j
                mov     rdi, rax        ; void *
                call    ___cxa_begin_catch
                mov     [rbp+var_408], rax
                mov     [rbp+var_420], 0
                mov     eax, [rbp+var_420]
                cmp     eax, 48h ; 'H'
                ja      short loc_4030D4
                mov     ebx, 0
                mov     r12d, 0
                jmp     short loc_4030DA
; ---------------------------------------------------------------------------

loc_4030D4:                             ; CODE XREF: ive_played_these_games_before(void)+870↑j
                mov     r12d, 1

loc_4030DA:                             ; CODE XREF: ive_played_these_games_before(void)+87D↑j
                call    ___cxa_end_catch
                cmp     r12d, 1
                jnz     loc_403024
                jmp     loc_403003
; ---------------------------------------------------------------------------

loc_4030EE:                             ; CODE XREF: ive_played_these_games_before(void):loc_40301F↑j
                                        ; ive_played_these_games_before(void)+7D1↑j
                mov     rdx, [rbp+var_28]
                sub     rdx, fs:28h
                jz      short loc_403102
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

loc_403102:                             ; CODE XREF: ive_played_these_games_before(void)+8A6↑j
                add     rsp, 410h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     rbp
                retn
; } // starts at 402855
_Z29ive_played_these_games_beforev endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall lost_in_the_sauce(_QWORD, _QWORD, _QWORD)
                public _Z17lost_in_the_sauceNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm
_Z17lost_in_the_sauceNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm proc near
                                        ; CODE XREF: main+FAD5↓p

var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 40h
                mov     [rbp+var_28], rdi
                mov     [rbp+var_30], rsi
                mov     [rbp+var_38], rdx
                lea     rax, [rbp+var_38]
                mov     [rbp+var_10], rax
                mov     [rbp+var_8], 8
                mov     [rbp+var_18], 0
                jmp     short loc_40317D
; ---------------------------------------------------------------------------

loc_403144:                             ; CODE XREF: lost_in_the_sauce(std::string,ulong)+80↓j
                mov     rdx, [rbp+var_18]
                mov     rax, [rbp+var_30]
                mov     rsi, rdx
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm ; std::string::operator[](ulong)
                mov     rcx, rax
                movzx   esi, byte ptr [rcx]
                mov     rax, [rbp+var_18]
                mov     edx, 0
                div     [rbp+var_8]
                mov     rax, [rbp+var_10]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                xor     eax, esi
                mov     [rcx], al
                add     [rbp+var_18], 1

loc_40317D:                             ; CODE XREF: lost_in_the_sauce(std::string,ulong)+30↑j
                mov     rax, [rbp+var_30]
                mov     rdi, rax
                call    __ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv ; std::string::length(void)
                cmp     [rbp+var_18], rax
                setb    al
                test    al, al
                jnz     short loc_403144
                mov     rdx, [rbp+var_30]
                mov     rax, [rbp+var_28]
                mov     rsi, rdx
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_ ; std::string::basic_string(std::string&&)
                mov     rax, [rbp+var_28]
                leave
                retn
; } // starts at 403112
_Z17lost_in_the_sauceNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall main::{lambda(void)#1}::operator()(_QWORD)
_ZZ4mainENKUlvE_clEv proc near          ; CODE XREF: main+B6↓p

var_28          = qword ptr -28h
var_13          = qword ptr -13h
var_B           = byte ptr -0Bh
var_A           = byte ptr -0Ah
var_9           = byte ptr -9
var_8           = qword ptr -8

; __unwind {
                push    rbp
                mov     rbp, rsp
                sub     rsp, 40h
                mov     [rbp+var_28], rdi
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     byte ptr [rbp+var_13], 0
                mov     byte ptr [rbp+var_13+1], 0AEh
                mov     byte ptr [rbp+var_13+2], 0E6h
                mov     byte ptr [rbp+var_13+3], 0E6h
                mov     byte ptr [rbp+var_13+4], 0F2h
                mov     byte ptr [rbp+var_13+5], 0AAh
                mov     byte ptr [rbp+var_13+6], 0E8h
                mov     byte ptr [rbp+var_13+7], 0F2h
                mov     [rbp+var_B], 0E4h
                mov     [rbp+var_A], 0E5h
                mov     [rbp+var_9], 8Ah
                mov     rax, [rbp+var_13]
                movzx   esi, [rbp+var_B]
                movzx   ecx, [rbp+var_A]
                shl     rcx, 8
                or      rsi, rcx
                movzx   ecx, [rbp+var_9]
                shl     rcx, 10h
                or      rcx, rsi
                mov     rdx, rcx
                mov     rcx, [rbp+var_8]
                sub     rcx, fs:28h
                jz      short locret_40322A
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_40322A:                          ; CODE XREF: main::{lambda(void)#1}::operator()(void)+75↑j
                leave
                retn
; } // starts at 4031AE
_ZZ4mainENKUlvE_clEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall main::{lambda(void)#2}::operator()(_QWORD, _QWORD)
_ZZ4mainENKUlvE0_clEv proc near         ; CODE XREF: main+18CC↓p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax], 0
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1], 0F5h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+2], 0EAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+3], 0EAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+4], 0F7h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+5], 0A5h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+6], 0E5h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+7], 0EFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+8], 0E9h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+9], 0E5h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Ah], 0E6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Bh], 0EEh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Ch], 0E2h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Dh], 0EAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Eh], 0EBh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Fh], 0AFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+10h], 0E7h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+11h], 0FEh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+12h], 0FCh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+13h], 0B4h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+14h], 0E0h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+15h], 0B5h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+16h], 0E1h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+17h], 0F8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+18h], 0EAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+19h], 0F2h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Ah], 0B4h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Bh], 0BBh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Ch], 0E8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Dh], 0E8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Eh], 0F8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Fh], 0F9h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+20h], 0AAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+21h], 0A1h
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 40322C
_ZZ4mainENKUlvE0_clEv endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall main::{lambda(void)#3}::operator()(_QWORD, _QWORD)
_ZZ4mainENKUlvE1_clEv proc near         ; CODE XREF: main+329D↓p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax], 0
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1], 0B8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+2], 0D2h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+3], 81h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+4], 0C6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+5], 0D2h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+6], 0C1h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+7], 0F3h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+8], 0FDh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+9], 8Bh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Ah], 0BAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Bh], 9Bh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Ch], 0FFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Dh], 0BDh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Eh], 0BBh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Fh], 0FCh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+10h], 0CEh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+11h], 89h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+12h], 0A2h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+13h], 0AAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+14h], 0CAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+15h], 0E6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+16h], 0E5h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+17h], 0A8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+18h], 0FFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+19h], 0C0h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Ah], 0EAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Bh], 0A7h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Ch], 0ACh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Dh], 0AEh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Eh], 0F1h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Fh], 94h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+20h], 0CDh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+21h], 0B6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+22h], 0A3h
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 40334E
_ZZ4mainENKUlvE1_clEv endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall main::{lambda(void)#4}::operator()(_QWORD, _QWORD)
_ZZ4mainENKUlvE2_clEv proc near         ; CODE XREF: main+4A7A↓p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax], 0
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1], 0EBh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+2], 0A3h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+3], 0E3h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+4], 0EAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+5], 0F2h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+6], 0A7h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+7], 0EEh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+8], 0E6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+9], 0F8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Ah], 0E8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Bh], 0E9h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Ch], 0E9h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Dh], 0AEh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Eh], 0FBh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Fh], 0FFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+10h], 0B1h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+11h], 0FFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+12h], 0F2h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+13h], 0FFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+14h], 0F0h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+15h], 0B6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+16h], 0F6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+17h], 0B8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+18h], 0F1h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+19h], 0FBh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Ah], 0E9h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Bh], 0F8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Ch], 0BDh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Dh], 0ECh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Eh], 0FAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1Fh], 0D6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+20h], 81h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+21h], 0C1h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+22h], 0CBh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+23h], 0C5h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+24h], 0C9h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+25h], 0CAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+26h], 89h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+27h], 88h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+28h], 0CBh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+29h], 0DFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+2Ah], 0DFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+2Bh], 8Ch
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+2Ch], 0DEh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+2Dh], 0C7h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+2Eh], 0C1h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+2Fh], 0D3h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+30h], 0D4h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+31h], 92h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+32h], 0DAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+33h], 94h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+34h], 0C2h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+35h], 0D7h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+36h], 0D9h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+37h], 0CCh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+38h], 99h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+39h], 0CEh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+3Ah], 0D4h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+3Bh], 9Ch
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+3Ch], 0DFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+3Dh], 0DBh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+3Eh], 9Fh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+3Fh], 0AEh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+40h], 0A8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+41h], 0A1h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+42h], 0A6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+43h], 0E8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+44h], 0E5h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+45h], 0AFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+46h], 0E0h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+47h], 0A4h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+48h], 0A5h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+49h], 0EAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+4Ah], 0A1h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+4Bh], 0B9h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+4Ch], 0BEh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+4Dh], 0BAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+4Eh], 0EFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+4Fh], 0B8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+50h], 0B8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+51h], 0B6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+52h], 0B6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+53h], 0F4h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+54h], 0A1h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+55h], 0BEh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+56h], 0B2h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+57h], 0F8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+58h], 0BFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+59h], 0B6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+5Ah], 0BAh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+5Bh], 0BBh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+5Ch], 0FDh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+5Dh], 0ADh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+5Eh], 0B0h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+5Fh], 8Dh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+60h], 84h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+61h], 95h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+62h], 8Bh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+63h], 81h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+64h], 97h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+65h], 83h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+66h], 0EDh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+67h], 0E8h
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 403478
_ZZ4mainENKUlvE2_clEv endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall main::{lambda(void)#5}::operator()(_QWORD, _QWORD)
_ZZ4mainENKUlvE3_clEv proc near         ; CODE XREF: main+6257↓p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax], 0
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+1], 0EBh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+2], 0E5h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+3], 0F5h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+4], 0F6h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+5], 0FEh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+6], 0A8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+7], 0E1h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+8], 0FFh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+9], 0E5h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Ah], 0F8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Bh], 0E4h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Ch], 0E0h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Dh], 0E8h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Eh], 0B1h
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+0Fh], 9Bh
                mov     rax, [rbp+var_8]
                mov     byte ptr [rax+10h], 92h
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 4037CA
_ZZ4mainENKUlvE3_clEv endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall main::{lambda(void)#6}::operator()(_QWORD)
_ZZ4mainENKUlvE4_clEv proc near         ; CODE XREF: main+7D27↓p

var_8           = qword ptr -8

; __unwind {
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     al, 0
                mov     edx, eax
                mov     rax, 0FFFFFF8300000000h
                or      rax, rdx
                pop     rbp
                retn
; } // starts at 403864
_ZZ4mainENKUlvE4_clEv endp

; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall main::{lambda(void)#7}::operator()(_QWORD)
_ZZ4mainENKUlvE5_clEv proc near         ; CODE XREF: main+9800↓p

var_8           = qword ptr -8

; __unwind {
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     al, 0
                mov     edx, eax
                mov     rax, 0FFFFFF8F00000000h
                or      rax, rdx
                pop     rbp
                retn
; } // starts at 403880
_ZZ4mainENKUlvE5_clEv endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall main::{lambda(void)#8}::operator()(_QWORD)
_ZZ4mainENKUlvE6_clEv proc near         ; CODE XREF: main+B2BD↓p

var_8           = qword ptr -8

; __unwind {
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     al, 0
                mov     edx, eax
                mov     rax, 0FFFFFF8C00000000h
                or      rax, rdx
                pop     rbp
                retn
; } // starts at 40389C
_ZZ4mainENKUlvE6_clEv endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall main::{lambda(void)#9}::operator()(_QWORD)
_ZZ4mainENKUlvE7_clEv proc near         ; CODE XREF: main+CAAD↓p

var_8           = qword ptr -8

; __unwind {
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     al, 0
                mov     edx, eax
                mov     rax, 0FFFFFF8800000000h
                or      rax, rdx
                pop     rbp
                retn
; } // starts at 4038B8
_ZZ4mainENKUlvE7_clEv endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall main::{lambda(void)#10}::operator()(_QWORD, _QWORD)
_ZZ4mainENKUlvE8_clEv proc near         ; CODE XREF: main+E2AC↓p

var_8           = qword ptr -8

; __unwind {
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     al, 0
                mov     edx, eax
                mov     rax, 0FFFFFF8F00000000h
                or      rax, rdx
                pop     rbp
                retn
; } // starts at 4038D4
_ZZ4mainENKUlvE8_clEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; int __fastcall main(int argc, const char **argv, const char **envp)
                public main
main            proc near               ; DATA XREF: _start+18↑o

var_AB1         = byte ptr -0AB1h
var_AB0         = dword ptr -0AB0h
var_AAC         = dword ptr -0AACh
var_AA8         = dword ptr -0AA8h
var_AA4         = dword ptr -0AA4h
var_AA0         = dword ptr -0AA0h
var_A9C         = dword ptr -0A9Ch
var_A98         = dword ptr -0A98h
var_A94         = dword ptr -0A94h
var_A90         = dword ptr -0A90h
var_A8C         = dword ptr -0A8Ch
var_A88         = dword ptr -0A88h
var_A84         = dword ptr -0A84h
var_A80         = dword ptr -0A80h
var_A7C         = dword ptr -0A7Ch
var_A78         = qword ptr -0A78h
var_A70         = qword ptr -0A70h
var_A68         = qword ptr -0A68h
var_A60         = qword ptr -0A60h
var_A58         = qword ptr -0A58h
var_A50         = qword ptr -0A50h
var_A48         = qword ptr -0A48h
var_A40         = qword ptr -0A40h
var_A38         = qword ptr -0A38h
var_A30         = qword ptr -0A30h
var_A28         = qword ptr -0A28h
var_A20         = qword ptr -0A20h
var_A18         = qword ptr -0A18h
var_A10         = qword ptr -0A10h
var_A08         = qword ptr -0A08h
var_A00         = qword ptr -0A00h
var_9F8         = qword ptr -9F8h
var_9F0         = qword ptr -9F0h
var_9E8         = qword ptr -9E8h
var_9E0         = qword ptr -9E0h
var_9D8         = qword ptr -9D8h
var_9D0         = qword ptr -9D0h
var_9C8         = qword ptr -9C8h
var_9C0         = qword ptr -9C0h
var_9B8         = qword ptr -9B8h
var_9B0         = qword ptr -9B0h
var_9A8         = qword ptr -9A8h
var_9A0         = qword ptr -9A0h
var_998         = qword ptr -998h
var_990         = qword ptr -990h
var_988         = qword ptr -988h
var_980         = qword ptr -980h
var_978         = qword ptr -978h
var_970         = qword ptr -970h
var_968         = qword ptr -968h
var_960         = qword ptr -960h
var_958         = qword ptr -958h
var_950         = qword ptr -950h
var_948         = qword ptr -948h
var_940         = qword ptr -940h
var_938         = qword ptr -938h
var_930         = qword ptr -930h
var_928         = qword ptr -928h
var_920         = qword ptr -920h
var_918         = qword ptr -918h
var_910         = qword ptr -910h
var_908         = qword ptr -908h
var_900         = qword ptr -900h
var_8F8         = qword ptr -8F8h
var_8F0         = qword ptr -8F0h
var_8E8         = qword ptr -8E8h
var_8E0         = qword ptr -8E0h
var_8D8         = qword ptr -8D8h
var_8D0         = qword ptr -8D0h
var_8C8         = qword ptr -8C8h
var_8C0         = qword ptr -8C0h
var_8B8         = qword ptr -8B8h
var_8B0         = qword ptr -8B0h
var_8A8         = qword ptr -8A8h
var_8A0         = qword ptr -8A0h
var_898         = qword ptr -898h
var_890         = qword ptr -890h
var_888         = qword ptr -888h
var_880         = qword ptr -880h
var_878         = qword ptr -878h
var_870         = qword ptr -870h
var_868         = qword ptr -868h
var_860         = qword ptr -860h
var_858         = qword ptr -858h
var_850         = qword ptr -850h
var_848         = qword ptr -848h
var_840         = qword ptr -840h
var_838         = qword ptr -838h
var_830         = qword ptr -830h
var_828         = qword ptr -828h
var_820         = qword ptr -820h
var_818         = qword ptr -818h
var_810         = qword ptr -810h
var_808         = qword ptr -808h
var_800         = qword ptr -800h
var_7F8         = qword ptr -7F8h
var_7F0         = qword ptr -7F0h
var_7E8         = qword ptr -7E8h
var_7E0         = qword ptr -7E0h
var_7D8         = qword ptr -7D8h
var_7D0         = qword ptr -7D0h
var_7C8         = qword ptr -7C8h
var_7C0         = qword ptr -7C0h
var_7B8         = qword ptr -7B8h
var_7B0         = qword ptr -7B0h
var_7A8         = qword ptr -7A8h
var_7A0         = qword ptr -7A0h
var_798         = qword ptr -798h
var_790         = qword ptr -790h
var_788         = qword ptr -788h
var_780         = qword ptr -780h
var_778         = qword ptr -778h
var_770         = qword ptr -770h
var_768         = qword ptr -768h
var_760         = qword ptr -760h
var_758         = qword ptr -758h
var_750         = qword ptr -750h
var_748         = qword ptr -748h
var_740         = qword ptr -740h
var_738         = qword ptr -738h
var_730         = qword ptr -730h
var_728         = qword ptr -728h
var_720         = qword ptr -720h
var_718         = qword ptr -718h
var_710         = qword ptr -710h
var_708         = qword ptr -708h
var_700         = qword ptr -700h
var_6F8         = qword ptr -6F8h
var_6F0         = qword ptr -6F0h
var_6E8         = qword ptr -6E8h
var_6E0         = qword ptr -6E0h
var_6D8         = qword ptr -6D8h
var_6D0         = qword ptr -6D0h
var_6C8         = qword ptr -6C8h
var_6C0         = qword ptr -6C0h
var_6B8         = qword ptr -6B8h
var_6B0         = qword ptr -6B0h
var_6A8         = qword ptr -6A8h
var_6A0         = qword ptr -6A0h
var_698         = qword ptr -698h
var_690         = qword ptr -690h
var_688         = qword ptr -688h
var_680         = qword ptr -680h
var_678         = qword ptr -678h
var_670         = qword ptr -670h
var_668         = qword ptr -668h
var_660         = qword ptr -660h
var_658         = qword ptr -658h
var_650         = qword ptr -650h
var_648         = qword ptr -648h
var_640         = qword ptr -640h
var_638         = qword ptr -638h
var_630         = qword ptr -630h
var_628         = qword ptr -628h
var_620         = qword ptr -620h
var_618         = qword ptr -618h
var_610         = qword ptr -610h
var_608         = qword ptr -608h
var_600         = qword ptr -600h
var_5F8         = qword ptr -5F8h
var_5F0         = qword ptr -5F0h
var_5E8         = qword ptr -5E8h
var_5E0         = qword ptr -5E0h
var_5D8         = qword ptr -5D8h
var_5D0         = qword ptr -5D0h
var_5C8         = qword ptr -5C8h
var_5C0         = qword ptr -5C0h
var_5B8         = qword ptr -5B8h
var_5B0         = qword ptr -5B0h
var_5A8         = qword ptr -5A8h
var_5A0         = qword ptr -5A0h
var_598         = qword ptr -598h
var_590         = qword ptr -590h
var_588         = qword ptr -588h
var_580         = qword ptr -580h
var_578         = qword ptr -578h
var_570         = qword ptr -570h
var_568         = qword ptr -568h
var_560         = qword ptr -560h
var_558         = qword ptr -558h
var_550         = qword ptr -550h
var_548         = qword ptr -548h
var_540         = qword ptr -540h
var_538         = qword ptr -538h
var_530         = qword ptr -530h
var_528         = qword ptr -528h
var_520         = qword ptr -520h
var_518         = qword ptr -518h
var_510         = qword ptr -510h
var_508         = qword ptr -508h
var_500         = qword ptr -500h
var_4F8         = qword ptr -4F8h
var_4F0         = qword ptr -4F0h
var_4E8         = qword ptr -4E8h
var_4E0         = qword ptr -4E0h
var_4D8         = qword ptr -4D8h
var_4D0         = qword ptr -4D0h
var_4C8         = qword ptr -4C8h
var_4C0         = qword ptr -4C0h
var_4B8         = qword ptr -4B8h
var_4B0         = qword ptr -4B0h
var_4A8         = qword ptr -4A8h
var_4A0         = qword ptr -4A0h
var_498         = qword ptr -498h
var_490         = qword ptr -490h
var_488         = qword ptr -488h
var_480         = qword ptr -480h
var_478         = qword ptr -478h
var_470         = qword ptr -470h
var_468         = qword ptr -468h
var_460         = qword ptr -460h
var_458         = qword ptr -458h
var_450         = qword ptr -450h
var_448         = qword ptr -448h
var_440         = qword ptr -440h
var_438         = qword ptr -438h
var_430         = qword ptr -430h
var_428         = qword ptr -428h
var_420         = qword ptr -420h
var_418         = qword ptr -418h
var_410         = qword ptr -410h
var_408         = qword ptr -408h
var_400         = qword ptr -400h
var_3F8         = qword ptr -3F8h
var_3F0         = qword ptr -3F0h
var_3E8         = qword ptr -3E8h
var_3E0         = qword ptr -3E0h
var_3D8         = qword ptr -3D8h
var_3D0         = qword ptr -3D0h
var_3C8         = qword ptr -3C8h
var_3C0         = qword ptr -3C0h
var_3B8         = qword ptr -3B8h
var_3B0         = qword ptr -3B0h
var_3A8         = qword ptr -3A8h
var_3A0         = qword ptr -3A0h
var_398         = qword ptr -398h
var_390         = qword ptr -390h
var_388         = qword ptr -388h
var_380         = qword ptr -380h
var_378         = qword ptr -378h
var_370         = qword ptr -370h
var_368         = qword ptr -368h
var_360         = byte ptr -360h
var_340         = qword ptr -340h
var_338         = qword ptr -338h
var_330         = qword ptr -330h
var_320         = byte ptr -320h
var_300         = byte ptr -300h
var_2E0         = byte ptr -2E0h
var_2C0         = byte ptr -2C0h
var_2A0         = byte ptr -2A0h
var_280         = byte ptr -280h
var_260         = qword ptr -260h
var_240         = qword ptr -240h
var_238         = word ptr -238h
var_236         = byte ptr -236h
var_38          = qword ptr -38h

; __unwind { // ___gxx_personality_v0
                endbr64
                push    rbp
                mov     rbp, rsp
                push    r15
                push    r14
                push    r13
                push    r12
                push    rbx
                sub     rsp, 0A98h
                mov     rax, fs:28h
                mov     [rbp+var_38], rax
                xor     eax, eax
                mov     [rbp+var_740], offset _Z15anchor_functionv ; anchor_function(void)
                mov     [rbp+var_340], offset aNeverGonnaGive_0 ; "never gonna give you up"
                mov     [rbp+var_338], offset aNeverGonnaLetY ; "never gonna let you down"
                mov     [rbp+var_330], 0
                mov     [rbp+var_AB0], 0
                jmp     short loc_403979
; ---------------------------------------------------------------------------

loc_40394E:                             ; CODE XREF: main+9B↓j
                mov     rdx, cs:_ZL26obfusheader_watermark_orig ; obfusheader_watermark_orig
                mov     eax, [rbp+var_AB0]
                cdqe
                mov     rax, [rbp+rax*8+var_340]
                mov     rdi, rax        ; char *
                call    rdx ; obfusheader_watermark_hook(char const*) ; obfusheader_watermark_hook(char const*)
                mov     eax, [rbp+var_AB0]
                add     eax, 1
                mov     [rbp+var_AB0], eax

loc_403979:                             ; CODE XREF: main+5D↑j
                mov     eax, [rbp+var_AB0]
                cdqe
                cmp     rax, 2
                setbe   al
                test    al, al
                jnz     short loc_40394E
                lea     rax, [rbp+var_360]
                mov     rdi, rax
                call    __ZNSaIcEC1Ev   ; std::allocator<char>::allocator(void)
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    _ZZ4mainENKUlvE_clEv ; main::{lambda(void)#1}::operator()(void)
                mov     [rbp+var_240], rax
                movzx   esi, dx
                movzx   ecx, [rbp+var_238]
                and     ecx, 0
                or      ecx, esi
                mov     [rbp+var_238], cx
                mov     rax, rdx
                shr     rax, 10h
                movzx   edx, al
                movzx   eax, [rbp+var_236]
                and     eax, 0
                or      eax, edx
                mov     [rbp+var_236], al
                lea     rax, [rbp+var_240]
                mov     [rbp+var_738], rax
                mov     rax, [rbp+var_738]
                movzx   eax, byte ptr [rax]
                xor     eax, 1
                test    al, al
                jz      loc_40515A
                mov     rax, [rbp+var_738]
                add     rax, 1
                mov     [rbp+var_730], rax
                mov     [rbp+var_AAC], 0
                jmp     loc_405142
; ---------------------------------------------------------------------------

loc_403A27:                             ; CODE XREF: main+1864↓j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_403EA6
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416420
                movsd   [rbp+var_728], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_728]
                movsd   [rbp+var_A38], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_403B7A
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_403B7A
                mov     eax, 8
                jmp     loc_403C75
; ---------------------------------------------------------------------------

loc_403B7A:                             ; CODE XREF: main+23B↑j main+27F↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_403C70
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_403C45
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_403C5E
; ---------------------------------------------------------------------------

loc_403C45:                             ; CODE XREF: main+349↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_403C5E:                             ; CODE XREF: main+354↑j
                movsd   xmm1, [rbp+var_A38]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_403C75
; ---------------------------------------------------------------------------

loc_403C70:                             ; CODE XREF: main+2E7↑j
                mov     eax, 0

loc_403C75:                             ; CODE XREF: main+286↑j main+37F↑j
                add     r12d, eax
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416420
                movsd   [rbp+var_720], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_720]
                movsd   [rbp+var_A30], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_403D8A
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_403D8A
                mov     eax, 8
                jmp     loc_403E85
; ---------------------------------------------------------------------------

loc_403D8A:                             ; CODE XREF: main+44B↑j main+48F↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_403E80
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_403E55
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_403E6E
; ---------------------------------------------------------------------------

loc_403E55:                             ; CODE XREF: main+559↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_403E6E:                             ; CODE XREF: main+564↑j
                movsd   xmm1, [rbp+var_A30]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_403E85
; ---------------------------------------------------------------------------

loc_403E80:                             ; CODE XREF: main+4F7↑j
                mov     eax, 0

loc_403E85:                             ; CODE XREF: main+496↑j main+58F↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_403EA6:                             ; CODE XREF: main+174↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 3
                sub     eax, edx
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_404CB1
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, eax
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40438D
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416428
                movsd   [rbp+var_718], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_718]
                movsd   [rbp+var_A48], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_404061
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_404061
                mov     eax, 8
                jmp     loc_40415C
; ---------------------------------------------------------------------------

loc_404061:                             ; CODE XREF: main+722↑j main+766↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_404157
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40412C
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_404145
; ---------------------------------------------------------------------------

loc_40412C:                             ; CODE XREF: main+830↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_404145:                             ; CODE XREF: main+83B↑j
                movsd   xmm1, [rbp+var_A48]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40415C
; ---------------------------------------------------------------------------

loc_404157:                             ; CODE XREF: main+7CE↑j
                mov     eax, 0

loc_40415C:                             ; CODE XREF: main+76D↑j main+866↑j
                add     r12d, eax
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416428
                movsd   [rbp+var_710], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_710]
                movsd   [rbp+var_A40], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_404271
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_404271
                mov     eax, 8
                jmp     loc_40436C
; ---------------------------------------------------------------------------

loc_404271:                             ; CODE XREF: main+932↑j main+976↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_404367
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40433C
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_404355
; ---------------------------------------------------------------------------

loc_40433C:                             ; CODE XREF: main+A40↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_404355:                             ; CODE XREF: main+A4B↑j
                movsd   xmm1, [rbp+var_A40]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40436C
; ---------------------------------------------------------------------------

loc_404367:                             ; CODE XREF: main+9DE↑j
                mov     eax, 0

loc_40436C:                             ; CODE XREF: main+97D↑j main+A76↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_40438D:                             ; CODE XREF: main+65B↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40480C
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416430
                movsd   [rbp+var_708], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_708]
                movsd   [rbp+var_A58], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_4044E0
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_4044E0
                mov     eax, 8
                jmp     loc_4045DB
; ---------------------------------------------------------------------------

loc_4044E0:                             ; CODE XREF: main+BA1↑j main+BE5↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4045D6
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4045AB
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4045C4
; ---------------------------------------------------------------------------

loc_4045AB:                             ; CODE XREF: main+CAF↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4045C4:                             ; CODE XREF: main+CBA↑j
                movsd   xmm1, [rbp+var_A58]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_4045DB
; ---------------------------------------------------------------------------

loc_4045D6:                             ; CODE XREF: main+C4D↑j
                mov     eax, 0

loc_4045DB:                             ; CODE XREF: main+BEC↑j main+CE5↑j
                add     r12d, eax
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416430
                movsd   [rbp+var_700], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_700]
                movsd   [rbp+var_A50], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_4046F0
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_4046F0
                mov     eax, 8
                jmp     loc_4047EB
; ---------------------------------------------------------------------------

loc_4046F0:                             ; CODE XREF: main+DB1↑j main+DF5↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4047E6
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4047BB
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4047D4
; ---------------------------------------------------------------------------

loc_4047BB:                             ; CODE XREF: main+EBF↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4047D4:                             ; CODE XREF: main+ECA↑j
                movsd   xmm1, [rbp+var_A50]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_4047EB
; ---------------------------------------------------------------------------

loc_4047E6:                             ; CODE XREF: main+E5D↑j
                mov     eax, 0

loc_4047EB:                             ; CODE XREF: main+DFC↑j main+EF5↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_40480C:                             ; CODE XREF: main+ADA↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_404CB1
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                mov     eax, [rbp+var_AAC]
                sub     eax, 7Fh
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_6F8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_6F8]
                movsd   [rbp+var_A68], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40497F
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40497F
                mov     eax, 8
                jmp     loc_404A7A
; ---------------------------------------------------------------------------

loc_40497F:                             ; CODE XREF: main+1040↑j main+1084↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_404A75
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_404A4A
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_404A63
; ---------------------------------------------------------------------------

loc_404A4A:                             ; CODE XREF: main+114E↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_404A63:                             ; CODE XREF: main+1159↑j
                movsd   xmm1, [rbp+var_A68]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_404A7A
; ---------------------------------------------------------------------------

loc_404A75:                             ; CODE XREF: main+10EC↑j
                mov     eax, 0

loc_404A7A:                             ; CODE XREF: main+108B↑j main+1184↑j
                add     r12d, eax
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                movzx   r14d, byte ptr [rax]
                mov     eax, [rbp+var_AAC]
                sub     eax, 7Fh
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_6F0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_6F0]
                movsd   [rbp+var_A60], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_404B95
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_404B95
                mov     eax, 8
                jmp     loc_404C90
; ---------------------------------------------------------------------------

loc_404B95:                             ; CODE XREF: main+1256↑j main+129A↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_404C8B
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_404C60
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_404C79
; ---------------------------------------------------------------------------

loc_404C60:                             ; CODE XREF: main+1364↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_404C79:                             ; CODE XREF: main+136F↑j
                movsd   xmm1, [rbp+var_A60]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_404C90
; ---------------------------------------------------------------------------

loc_404C8B:                             ; CODE XREF: main+1302↑j
                mov     eax, 0

loc_404C90:                             ; CODE XREF: main+12A1↑j main+139A↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_404CB1:                             ; CODE XREF: main+611↑j main+F70↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                shl     eax, 3
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_405133
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416438
                movsd   [rbp+var_6E8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_6E8]
                movsd   [rbp+var_A78], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_404E07
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_404E07
                mov     eax, 8
                jmp     loc_404F02
; ---------------------------------------------------------------------------

loc_404E07:                             ; CODE XREF: main+14C8↑j main+150C↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_404EFD
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_404ED2
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_404EEB
; ---------------------------------------------------------------------------

loc_404ED2:                             ; CODE XREF: main+15D6↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_404EEB:                             ; CODE XREF: main+15E1↑j
                movsd   xmm1, [rbp+var_A78]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_404F02
; ---------------------------------------------------------------------------

loc_404EFD:                             ; CODE XREF: main+1574↑j
                mov     eax, 0

loc_404F02:                             ; CODE XREF: main+1513↑j main+160C↑j
                add     r12d, eax
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416438
                movsd   [rbp+var_6E0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_6E0]
                movsd   [rbp+var_A70], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_405017
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_405017
                mov     eax, 8
                jmp     loc_405112
; ---------------------------------------------------------------------------

loc_405017:                             ; CODE XREF: main+16D8↑j main+171C↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40510D
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4050E2
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4050FB
; ---------------------------------------------------------------------------

loc_4050E2:                             ; CODE XREF: main+17E6↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4050FB:                             ; CODE XREF: main+17F1↑j
                movsd   xmm1, [rbp+var_A70]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_405112
; ---------------------------------------------------------------------------

loc_40510D:                             ; CODE XREF: main+1784↑j
                mov     eax, 0

loc_405112:                             ; CODE XREF: main+1723↑j main+181C↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AAC]
                movsxd  rdx, eax
                mov     rax, [rbp+var_730]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_405133:                             ; CODE XREF: main+1401↑j
                mov     eax, [rbp+var_AAC]
                add     eax, 1
                mov     [rbp+var_AAC], eax

loc_405142:                             ; CODE XREF: main+133↑j
                mov     eax, [rbp+var_AAC]
                cdqe
                cmp     rax, 9
                setbe   al
                test    al, al
                jnz     loc_403A27
                nop

loc_40515A:                             ; CODE XREF: main+111↑j
                mov     rax, [rbp+var_738]
                mov     byte ptr [rax], 1
                mov     rax, [rbp+var_738]
                lea     rcx, [rax+1]
                nop
                lea     rdx, [rbp+var_360]
                lea     rax, [rbp+var_320]
                mov     rsi, rcx
                mov     rdi, rax
;   try {
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_ ; std::string::basic_string(char const*,std::allocator<char> const&)
;   } // starts at 405184
                lea     rax, [rbp+var_360]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                lea     rax, [rbp+var_360]
                mov     rdi, rax
                call    __ZNSaIcEC1Ev   ; std::allocator<char>::allocator(void)
                lea     rax, [rbp+var_240]
                lea     rdx, [rbp+var_748]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZZ4mainENKUlvE0_clEv ; main::{lambda(void)#2}::operator()(void)
                lea     rax, [rbp+var_240]
                mov     [rbp+var_6D8], rax
                mov     rax, [rbp+var_6D8]
                movzx   eax, byte ptr [rax]
                xor     eax, 1
                test    al, al
                jz      loc_406937
                mov     rax, [rbp+var_6D8]
                add     rax, 1
                mov     [rbp+var_6D0], rax
                mov     [rbp+var_AA8], 0
                jmp     loc_40691F
; ---------------------------------------------------------------------------

loc_405204:                             ; CODE XREF: main+3041↓j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_405683
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416420
                movsd   [rbp+var_6C8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_6C8]
                movsd   [rbp+var_9E8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_405357
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_405357
                mov     eax, 8
                jmp     loc_405452
; ---------------------------------------------------------------------------

loc_405357:                             ; CODE XREF: main+1A18↑j main+1A5C↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40544D
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_405422
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40543B
; ---------------------------------------------------------------------------

loc_405422:                             ; CODE XREF: main+1B26↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40543B:                             ; CODE XREF: main+1B31↑j
                movsd   xmm1, [rbp+var_9E8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_405452
; ---------------------------------------------------------------------------

loc_40544D:                             ; CODE XREF: main+1AC4↑j
                mov     eax, 0

loc_405452:                             ; CODE XREF: main+1A63↑j main+1B5C↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416420
                movsd   [rbp+var_6C0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_6C0]
                movsd   [rbp+var_9E0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_405567
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_405567
                mov     eax, 8
                jmp     loc_405662
; ---------------------------------------------------------------------------

loc_405567:                             ; CODE XREF: main+1C28↑j main+1C6C↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40565D
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_405632
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40564B
; ---------------------------------------------------------------------------

loc_405632:                             ; CODE XREF: main+1D36↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40564B:                             ; CODE XREF: main+1D41↑j
                movsd   xmm1, [rbp+var_9E0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_405662
; ---------------------------------------------------------------------------

loc_40565D:                             ; CODE XREF: main+1CD4↑j
                mov     eax, 0

loc_405662:                             ; CODE XREF: main+1C73↑j main+1D6C↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_405683:                             ; CODE XREF: main+1951↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 3
                sub     eax, edx
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40648E
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, eax
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_405B6A
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416428
                movsd   [rbp+var_6B8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_6B8]
                movsd   [rbp+var_9F8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40583E
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40583E
                mov     eax, 8
                jmp     loc_405939
; ---------------------------------------------------------------------------

loc_40583E:                             ; CODE XREF: main+1EFF↑j main+1F43↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_405934
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_405909
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_405922
; ---------------------------------------------------------------------------

loc_405909:                             ; CODE XREF: main+200D↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_405922:                             ; CODE XREF: main+2018↑j
                movsd   xmm1, [rbp+var_9F8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_405939
; ---------------------------------------------------------------------------

loc_405934:                             ; CODE XREF: main+1FAB↑j
                mov     eax, 0

loc_405939:                             ; CODE XREF: main+1F4A↑j main+2043↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416428
                movsd   [rbp+var_6B0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_6B0]
                movsd   [rbp+var_9F0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_405A4E
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_405A4E
                mov     eax, 8
                jmp     loc_405B49
; ---------------------------------------------------------------------------

loc_405A4E:                             ; CODE XREF: main+210F↑j main+2153↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_405B44
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_405B19
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_405B32
; ---------------------------------------------------------------------------

loc_405B19:                             ; CODE XREF: main+221D↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_405B32:                             ; CODE XREF: main+2228↑j
                movsd   xmm1, [rbp+var_9F0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_405B49
; ---------------------------------------------------------------------------

loc_405B44:                             ; CODE XREF: main+21BB↑j
                mov     eax, 0

loc_405B49:                             ; CODE XREF: main+215A↑j main+2253↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_405B6A:                             ; CODE XREF: main+1E38↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_405FE9
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416430
                movsd   [rbp+var_6A8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_6A8]
                movsd   [rbp+var_A08], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_405CBD
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_405CBD
                mov     eax, 8
                jmp     loc_405DB8
; ---------------------------------------------------------------------------

loc_405CBD:                             ; CODE XREF: main+237E↑j main+23C2↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_405DB3
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_405D88
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_405DA1
; ---------------------------------------------------------------------------

loc_405D88:                             ; CODE XREF: main+248C↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_405DA1:                             ; CODE XREF: main+2497↑j
                movsd   xmm1, [rbp+var_A08]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_405DB8
; ---------------------------------------------------------------------------

loc_405DB3:                             ; CODE XREF: main+242A↑j
                mov     eax, 0

loc_405DB8:                             ; CODE XREF: main+23C9↑j main+24C2↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416430
                movsd   [rbp+var_6A0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_6A0]
                movsd   [rbp+var_A00], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_405ECD
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_405ECD
                mov     eax, 8
                jmp     loc_405FC8
; ---------------------------------------------------------------------------

loc_405ECD:                             ; CODE XREF: main+258E↑j main+25D2↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_405FC3
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_405F98
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_405FB1
; ---------------------------------------------------------------------------

loc_405F98:                             ; CODE XREF: main+269C↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_405FB1:                             ; CODE XREF: main+26A7↑j
                movsd   xmm1, [rbp+var_A00]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_405FC8
; ---------------------------------------------------------------------------

loc_405FC3:                             ; CODE XREF: main+263A↑j
                mov     eax, 0

loc_405FC8:                             ; CODE XREF: main+25D9↑j main+26D2↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_405FE9:                             ; CODE XREF: main+22B7↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40648E
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                mov     eax, [rbp+var_AA8]
                sub     eax, 7Fh
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_698], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_698]
                movsd   [rbp+var_A18], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40615C
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40615C
                mov     eax, 8
                jmp     loc_406257
; ---------------------------------------------------------------------------

loc_40615C:                             ; CODE XREF: main+281D↑j main+2861↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_406252
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_406227
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_406240
; ---------------------------------------------------------------------------

loc_406227:                             ; CODE XREF: main+292B↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_406240:                             ; CODE XREF: main+2936↑j
                movsd   xmm1, [rbp+var_A18]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_406257
; ---------------------------------------------------------------------------

loc_406252:                             ; CODE XREF: main+28C9↑j
                mov     eax, 0

loc_406257:                             ; CODE XREF: main+2868↑j main+2961↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                movzx   r14d, byte ptr [rax]
                mov     eax, [rbp+var_AA8]
                sub     eax, 7Fh
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_690], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_690]
                movsd   [rbp+var_A10], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_406372
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_406372
                mov     eax, 8
                jmp     loc_40646D
; ---------------------------------------------------------------------------

loc_406372:                             ; CODE XREF: main+2A33↑j main+2A77↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_406468
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40643D
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_406456
; ---------------------------------------------------------------------------

loc_40643D:                             ; CODE XREF: main+2B41↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_406456:                             ; CODE XREF: main+2B4C↑j
                movsd   xmm1, [rbp+var_A10]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40646D
; ---------------------------------------------------------------------------

loc_406468:                             ; CODE XREF: main+2ADF↑j
                mov     eax, 0

loc_40646D:                             ; CODE XREF: main+2A7E↑j main+2B77↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_40648E:                             ; CODE XREF: main+1DEE↑j main+274D↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                shl     eax, 3
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_406910
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416438
                movsd   [rbp+var_688], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_688]
                movsd   [rbp+var_A28], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_4065E4
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_4065E4
                mov     eax, 8
                jmp     loc_4066DF
; ---------------------------------------------------------------------------

loc_4065E4:                             ; CODE XREF: main+2CA5↑j main+2CE9↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4066DA
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4066AF
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4066C8
; ---------------------------------------------------------------------------

loc_4066AF:                             ; CODE XREF: main+2DB3↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4066C8:                             ; CODE XREF: main+2DBE↑j
                movsd   xmm1, [rbp+var_A28]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_4066DF
; ---------------------------------------------------------------------------

loc_4066DA:                             ; CODE XREF: main+2D51↑j
                mov     eax, 0

loc_4066DF:                             ; CODE XREF: main+2CF0↑j main+2DE9↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416438
                movsd   [rbp+var_680], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_680]
                movsd   [rbp+var_A20], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_4067F4
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_4067F4
                mov     eax, 8
                jmp     loc_4068EF
; ---------------------------------------------------------------------------

loc_4067F4:                             ; CODE XREF: main+2EB5↑j main+2EF9↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4068EA
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4068BF
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4068D8
; ---------------------------------------------------------------------------

loc_4068BF:                             ; CODE XREF: main+2FC3↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4068D8:                             ; CODE XREF: main+2FCE↑j
                movsd   xmm1, [rbp+var_A20]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_4068EF
; ---------------------------------------------------------------------------

loc_4068EA:                             ; CODE XREF: main+2F61↑j
                mov     eax, 0

loc_4068EF:                             ; CODE XREF: main+2F00↑j main+2FF9↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA8]
                movsxd  rdx, eax
                mov     rax, [rbp+var_6D0]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_406910:                             ; CODE XREF: main+2BDE↑j
                mov     eax, [rbp+var_AA8]
                add     eax, 1
                mov     [rbp+var_AA8], eax

loc_40691F:                             ; CODE XREF: main+1910↑j
                mov     eax, [rbp+var_AA8]
                cdqe
                cmp     rax, 20h ; ' '
                setbe   al
                test    al, al
                jnz     loc_405204
                nop

loc_406937:                             ; CODE XREF: main+18EE↑j
                mov     rax, [rbp+var_6D8]
                mov     byte ptr [rax], 1
                mov     rax, [rbp+var_6D8]
                lea     rcx, [rax+1]
                nop
                lea     rdx, [rbp+var_360]
                lea     rax, [rbp+var_300]
                mov     rsi, rcx
                mov     rdi, rax
;   try {
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_ ; std::string::basic_string(char const*,std::allocator<char> const&)
;   } // starts at 406961
                lea     rax, [rbp+var_360]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                lea     rax, [rbp+var_360]
                mov     rdi, rax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev ; std::vector<std::string>::vector(void)
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcEC1Ev   ; std::allocator<char>::allocator(void)
                lea     rdx, [rbp+var_748]
                lea     rax, [rbp+var_240]
                mov     esi, offset aHereSSomeSageA ; "here's some sage advice from my residen"...
                mov     rdi, rax
;   try {
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_ ; std::string::basic_string(char const*,std::allocator<char> const&)
;   } // starts at 4069A9
                lea     rdx, [rbp+var_240]
                lea     rax, [rbp+var_360]
                mov     rsi, rdx
                mov     rdi, rax
;   try {
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ ; std::vector<std::string>::push_back(std::string&&)
;   } // starts at 4069C2
                lea     rax, [rbp+var_240]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcEC1Ev   ; std::allocator<char>::allocator(void)
                lea     rdx, [rbp+var_748]
                lea     rax, [rbp+var_240]
                mov     esi, offset aTheManWhoRelie ; "the man who relies on a lighter to star"...
                mov     rdi, rax
;   try {
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_ ; std::string::basic_string(char const*,std::allocator<char> const&)
;   } // starts at 406A0A
                lea     rdx, [rbp+var_240]
                lea     rax, [rbp+var_360]
                mov     rsi, rdx
                mov     rdi, rax
;   try {
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ ; std::vector<std::string>::push_back(std::string&&)
;   } // starts at 406A23
                lea     rax, [rbp+var_240]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcEC1Ev   ; std::allocator<char>::allocator(void)
                lea     rdx, [rbp+var_748]
                lea     rax, [rbp+var_240]
                mov     esi, offset aHeWhoDependsOn ; "he who depends on a tool to fix, will n"...
                mov     rdi, rax
;   try {
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_ ; std::string::basic_string(char const*,std::allocator<char> const&)
;   } // starts at 406A6B
                lea     rdx, [rbp+var_240]
                lea     rax, [rbp+var_360]
                mov     rsi, rdx
                mov     rdi, rax
;   try {
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ ; std::vector<std::string>::push_back(std::string&&)
;   } // starts at 406A84
                lea     rax, [rbp+var_240]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcEC1Ev   ; std::allocator<char>::allocator(void)
                lea     rdx, [rbp+var_748]
                lea     rax, [rbp+var_240]
                mov     esi, offset aHeWhoWritesOnS ; "he who writes on stone instead of paper"...
                mov     rdi, rax
;   try {
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_ ; std::string::basic_string(char const*,std::allocator<char> const&)
;   } // starts at 406ACC
                lea     rdx, [rbp+var_240]
                lea     rax, [rbp+var_360]
                mov     rsi, rdx
                mov     rdi, rax
;   try {
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ ; std::vector<std::string>::push_back(std::string&&)
;   } // starts at 406AE5
                lea     rax, [rbp+var_240]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcEC1Ev   ; std::allocator<char>::allocator(void)
                lea     rdx, [rbp+var_748]
                lea     rax, [rbp+var_240]
                mov     esi, offset aUsingAToolIsSi ; "using a tool is simply not believing in"...
                mov     rdi, rax
;   try {
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_ ; std::string::basic_string(char const*,std::allocator<char> const&)
;   } // starts at 406B2D
                lea     rdx, [rbp+var_240]
                lea     rax, [rbp+var_360]
                mov     rsi, rdx
                mov     rdi, rax
;   try {
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ ; std::vector<std::string>::push_back(std::string&&)
;   } // starts at 406B46
                lea     rax, [rbp+var_240]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcEC1Ev   ; std::allocator<char>::allocator(void)
                lea     rax, [rbp+var_240]
                lea     rdx, [rbp+var_750]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZZ4mainENKUlvE1_clEv ; main::{lambda(void)#3}::operator()(void)
                lea     rax, [rbp+var_240]
                mov     [rbp+var_678], rax
                mov     rax, [rbp+var_678]
                movzx   eax, byte ptr [rax]
                xor     eax, 1
                test    al, al
                jz      loc_408308
                mov     rax, [rbp+var_678]
                add     rax, 1
                mov     [rbp+var_670], rax
                mov     [rbp+var_AA4], 0
                jmp     loc_4082F0
; ---------------------------------------------------------------------------

loc_406BD5:                             ; CODE XREF: main+4A12↓j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_407054
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416428
                movsd   [rbp+var_668], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_668]
                movsd   [rbp+var_998], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_406D28
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_406D28
                mov     eax, 8
                jmp     loc_406E23
; ---------------------------------------------------------------------------

loc_406D28:                             ; CODE XREF: main+33E9↑j main+342D↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_406E1E
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_406DF3
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_406E0C
; ---------------------------------------------------------------------------

loc_406DF3:                             ; CODE XREF: main+34F7↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_406E0C:                             ; CODE XREF: main+3502↑j
                movsd   xmm1, [rbp+var_998]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_406E23
; ---------------------------------------------------------------------------

loc_406E1E:                             ; CODE XREF: main+3495↑j
                mov     eax, 0

loc_406E23:                             ; CODE XREF: main+3434↑j main+352D↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416428
                movsd   [rbp+var_660], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_660]
                movsd   [rbp+var_990], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_406F38
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_406F38
                mov     eax, 8
                jmp     loc_407033
; ---------------------------------------------------------------------------

loc_406F38:                             ; CODE XREF: main+35F9↑j main+363D↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40702E
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_407003
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40701C
; ---------------------------------------------------------------------------

loc_407003:                             ; CODE XREF: main+3707↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40701C:                             ; CODE XREF: main+3712↑j
                movsd   xmm1, [rbp+var_990]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_407033
; ---------------------------------------------------------------------------

loc_40702E:                             ; CODE XREF: main+36A5↑j
                mov     eax, 0

loc_407033:                             ; CODE XREF: main+3644↑j main+373D↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_407054:                             ; CODE XREF: main+3322↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 3
                sub     eax, edx
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_407E5F
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, eax
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40753B
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416430
                movsd   [rbp+var_658], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_658]
                movsd   [rbp+var_9A8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40720F
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40720F
                mov     eax, 8
                jmp     loc_40730A
; ---------------------------------------------------------------------------

loc_40720F:                             ; CODE XREF: main+38D0↑j main+3914↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_407305
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4072DA
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4072F3
; ---------------------------------------------------------------------------

loc_4072DA:                             ; CODE XREF: main+39DE↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4072F3:                             ; CODE XREF: main+39E9↑j
                movsd   xmm1, [rbp+var_9A8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40730A
; ---------------------------------------------------------------------------

loc_407305:                             ; CODE XREF: main+397C↑j
                mov     eax, 0

loc_40730A:                             ; CODE XREF: main+391B↑j main+3A14↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416430
                movsd   [rbp+var_650], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_650]
                movsd   [rbp+var_9A0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40741F
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40741F
                mov     eax, 8
                jmp     loc_40751A
; ---------------------------------------------------------------------------

loc_40741F:                             ; CODE XREF: main+3AE0↑j main+3B24↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_407515
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4074EA
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_407503
; ---------------------------------------------------------------------------

loc_4074EA:                             ; CODE XREF: main+3BEE↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_407503:                             ; CODE XREF: main+3BF9↑j
                movsd   xmm1, [rbp+var_9A0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40751A
; ---------------------------------------------------------------------------

loc_407515:                             ; CODE XREF: main+3B8C↑j
                mov     eax, 0

loc_40751A:                             ; CODE XREF: main+3B2B↑j main+3C24↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_40753B:                             ; CODE XREF: main+3809↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_4079BA
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416438
                movsd   [rbp+var_648], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_648]
                movsd   [rbp+var_9B8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40768E
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40768E
                mov     eax, 8
                jmp     loc_407789
; ---------------------------------------------------------------------------

loc_40768E:                             ; CODE XREF: main+3D4F↑j main+3D93↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_407784
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_407759
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_407772
; ---------------------------------------------------------------------------

loc_407759:                             ; CODE XREF: main+3E5D↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_407772:                             ; CODE XREF: main+3E68↑j
                movsd   xmm1, [rbp+var_9B8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_407789
; ---------------------------------------------------------------------------

loc_407784:                             ; CODE XREF: main+3DFB↑j
                mov     eax, 0

loc_407789:                             ; CODE XREF: main+3D9A↑j main+3E93↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416438
                movsd   [rbp+var_640], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_640]
                movsd   [rbp+var_9B0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40789E
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40789E
                mov     eax, 8
                jmp     loc_407999
; ---------------------------------------------------------------------------

loc_40789E:                             ; CODE XREF: main+3F5F↑j main+3FA3↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_407994
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_407969
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_407982
; ---------------------------------------------------------------------------

loc_407969:                             ; CODE XREF: main+406D↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_407982:                             ; CODE XREF: main+4078↑j
                movsd   xmm1, [rbp+var_9B0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_407999
; ---------------------------------------------------------------------------

loc_407994:                             ; CODE XREF: main+400B↑j
                mov     eax, 0

loc_407999:                             ; CODE XREF: main+3FAA↑j main+40A3↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_4079BA:                             ; CODE XREF: main+3C88↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_407E5F
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                mov     eax, [rbp+var_AA4]
                sub     eax, 7Eh ; '~'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_638], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_638]
                movsd   [rbp+var_9C8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_407B2D
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_407B2D
                mov     eax, 8
                jmp     loc_407C28
; ---------------------------------------------------------------------------

loc_407B2D:                             ; CODE XREF: main+41EE↑j main+4232↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_407C23
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_407BF8
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_407C11
; ---------------------------------------------------------------------------

loc_407BF8:                             ; CODE XREF: main+42FC↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_407C11:                             ; CODE XREF: main+4307↑j
                movsd   xmm1, [rbp+var_9C8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_407C28
; ---------------------------------------------------------------------------

loc_407C23:                             ; CODE XREF: main+429A↑j
                mov     eax, 0

loc_407C28:                             ; CODE XREF: main+4239↑j main+4332↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                movzx   r14d, byte ptr [rax]
                mov     eax, [rbp+var_AA4]
                sub     eax, 7Eh ; '~'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_630], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_630]
                movsd   [rbp+var_9C0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_407D43
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_407D43
                mov     eax, 8
                jmp     loc_407E3E
; ---------------------------------------------------------------------------

loc_407D43:                             ; CODE XREF: main+4404↑j main+4448↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_407E39
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_407E0E
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_407E27
; ---------------------------------------------------------------------------

loc_407E0E:                             ; CODE XREF: main+4512↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_407E27:                             ; CODE XREF: main+451D↑j
                movsd   xmm1, [rbp+var_9C0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_407E3E
; ---------------------------------------------------------------------------

loc_407E39:                             ; CODE XREF: main+44B0↑j
                mov     eax, 0

loc_407E3E:                             ; CODE XREF: main+444F↑j main+4548↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_407E5F:                             ; CODE XREF: main+37BF↑j main+411E↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                shl     eax, 3
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_4082E1
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416440
                movsd   [rbp+var_628], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_628]
                movsd   [rbp+var_9D8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_407FB5
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_407FB5
                mov     eax, 8
                jmp     loc_4080B0
; ---------------------------------------------------------------------------

loc_407FB5:                             ; CODE XREF: main+4676↑j main+46BA↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4080AB
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_408080
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_408099
; ---------------------------------------------------------------------------

loc_408080:                             ; CODE XREF: main+4784↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_408099:                             ; CODE XREF: main+478F↑j
                movsd   xmm1, [rbp+var_9D8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_4080B0
; ---------------------------------------------------------------------------

loc_4080AB:                             ; CODE XREF: main+4722↑j
                mov     eax, 0

loc_4080B0:                             ; CODE XREF: main+46C1↑j main+47BA↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416440
                movsd   [rbp+var_620], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_620]
                movsd   [rbp+var_9D0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_4081C5
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_4081C5
                mov     eax, 8
                jmp     loc_4082C0
; ---------------------------------------------------------------------------

loc_4081C5:                             ; CODE XREF: main+4886↑j main+48CA↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4082BB
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_408290
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4082A9
; ---------------------------------------------------------------------------

loc_408290:                             ; CODE XREF: main+4994↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4082A9:                             ; CODE XREF: main+499F↑j
                movsd   xmm1, [rbp+var_9D0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_4082C0
; ---------------------------------------------------------------------------

loc_4082BB:                             ; CODE XREF: main+4932↑j
                mov     eax, 0

loc_4082C0:                             ; CODE XREF: main+48D1↑j main+49CA↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA4]
                movsxd  rdx, eax
                mov     rax, [rbp+var_670]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_4082E1:                             ; CODE XREF: main+45AF↑j
                mov     eax, [rbp+var_AA4]
                add     eax, 1
                mov     [rbp+var_AA4], eax

loc_4082F0:                             ; CODE XREF: main+32E1↑j
                mov     eax, [rbp+var_AA4]
                cdqe
                cmp     rax, 21h ; '!'
                setbe   al
                test    al, al
                jnz     loc_406BD5
                nop

loc_408308:                             ; CODE XREF: main+32BF↑j
                mov     rax, [rbp+var_678]
                mov     byte ptr [rax], 1
                mov     rax, [rbp+var_678]
                lea     rcx, [rax+1]
                nop
                lea     rdx, [rbp+var_748]
                lea     rax, [rbp+var_2E0]
                mov     rsi, rcx
                mov     rdi, rax
;   try {
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_ ; std::string::basic_string(char const*,std::allocator<char> const&)
;   } // starts at 408332
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcEC1Ev   ; std::allocator<char>::allocator(void)
                lea     rax, [rbp+var_240]
                lea     rdx, [rbp+var_750]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZZ4mainENKUlvE2_clEv ; main::{lambda(void)#4}::operator()(void)
                lea     rax, [rbp+var_240]
                mov     [rbp+var_618], rax
                mov     rax, [rbp+var_618]
                movzx   eax, byte ptr [rax]
                xor     eax, 1
                test    al, al
                jz      loc_409AE5
                mov     rax, [rbp+var_618]
                add     rax, 1
                mov     [rbp+var_610], rax
                mov     [rbp+var_AA0], 0
                jmp     loc_409ACD
; ---------------------------------------------------------------------------

loc_4083B2:                             ; CODE XREF: main+61EF↓j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_408831
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416428
                movsd   [rbp+var_608], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_608]
                movsd   [rbp+var_948], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_408505
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_408505
                mov     eax, 8
                jmp     loc_408600
; ---------------------------------------------------------------------------

loc_408505:                             ; CODE XREF: main+4BC6↑j main+4C0A↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4085FB
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4085D0
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4085E9
; ---------------------------------------------------------------------------

loc_4085D0:                             ; CODE XREF: main+4CD4↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4085E9:                             ; CODE XREF: main+4CDF↑j
                movsd   xmm1, [rbp+var_948]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_408600
; ---------------------------------------------------------------------------

loc_4085FB:                             ; CODE XREF: main+4C72↑j
                mov     eax, 0

loc_408600:                             ; CODE XREF: main+4C11↑j main+4D0A↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416428
                movsd   [rbp+var_600], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_600]
                movsd   [rbp+var_940], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_408715
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_408715
                mov     eax, 8
                jmp     loc_408810
; ---------------------------------------------------------------------------

loc_408715:                             ; CODE XREF: main+4DD6↑j main+4E1A↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40880B
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4087E0
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4087F9
; ---------------------------------------------------------------------------

loc_4087E0:                             ; CODE XREF: main+4EE4↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4087F9:                             ; CODE XREF: main+4EEF↑j
                movsd   xmm1, [rbp+var_940]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_408810
; ---------------------------------------------------------------------------

loc_40880B:                             ; CODE XREF: main+4E82↑j
                mov     eax, 0

loc_408810:                             ; CODE XREF: main+4E21↑j main+4F1A↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_408831:                             ; CODE XREF: main+4AFF↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 3
                sub     eax, edx
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40963C
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, eax
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_408D18
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416430
                movsd   [rbp+var_5F8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_5F8]
                movsd   [rbp+var_958], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_4089EC
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_4089EC
                mov     eax, 8
                jmp     loc_408AE7
; ---------------------------------------------------------------------------

loc_4089EC:                             ; CODE XREF: main+50AD↑j main+50F1↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_408AE2
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_408AB7
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_408AD0
; ---------------------------------------------------------------------------

loc_408AB7:                             ; CODE XREF: main+51BB↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_408AD0:                             ; CODE XREF: main+51C6↑j
                movsd   xmm1, [rbp+var_958]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_408AE7
; ---------------------------------------------------------------------------

loc_408AE2:                             ; CODE XREF: main+5159↑j
                mov     eax, 0

loc_408AE7:                             ; CODE XREF: main+50F8↑j main+51F1↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416430
                movsd   [rbp+var_5F0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_5F0]
                movsd   [rbp+var_950], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_408BFC
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_408BFC
                mov     eax, 8
                jmp     loc_408CF7
; ---------------------------------------------------------------------------

loc_408BFC:                             ; CODE XREF: main+52BD↑j main+5301↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_408CF2
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_408CC7
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_408CE0
; ---------------------------------------------------------------------------

loc_408CC7:                             ; CODE XREF: main+53CB↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_408CE0:                             ; CODE XREF: main+53D6↑j
                movsd   xmm1, [rbp+var_950]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_408CF7
; ---------------------------------------------------------------------------

loc_408CF2:                             ; CODE XREF: main+5369↑j
                mov     eax, 0

loc_408CF7:                             ; CODE XREF: main+5308↑j main+5401↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_408D18:                             ; CODE XREF: main+4FE6↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_409197
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416438
                movsd   [rbp+var_5E8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_5E8]
                movsd   [rbp+var_968], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_408E6B
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_408E6B
                mov     eax, 8
                jmp     loc_408F66
; ---------------------------------------------------------------------------

loc_408E6B:                             ; CODE XREF: main+552C↑j main+5570↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_408F61
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_408F36
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_408F4F
; ---------------------------------------------------------------------------

loc_408F36:                             ; CODE XREF: main+563A↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_408F4F:                             ; CODE XREF: main+5645↑j
                movsd   xmm1, [rbp+var_968]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_408F66
; ---------------------------------------------------------------------------

loc_408F61:                             ; CODE XREF: main+55D8↑j
                mov     eax, 0

loc_408F66:                             ; CODE XREF: main+5577↑j main+5670↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416438
                movsd   [rbp+var_5E0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_5E0]
                movsd   [rbp+var_960], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40907B
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40907B
                mov     eax, 8
                jmp     loc_409176
; ---------------------------------------------------------------------------

loc_40907B:                             ; CODE XREF: main+573C↑j main+5780↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_409171
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_409146
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40915F
; ---------------------------------------------------------------------------

loc_409146:                             ; CODE XREF: main+584A↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40915F:                             ; CODE XREF: main+5855↑j
                movsd   xmm1, [rbp+var_960]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_409176
; ---------------------------------------------------------------------------

loc_409171:                             ; CODE XREF: main+57E8↑j
                mov     eax, 0

loc_409176:                             ; CODE XREF: main+5787↑j main+5880↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_409197:                             ; CODE XREF: main+5465↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40963C
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                mov     eax, [rbp+var_AA0]
                sub     eax, 7Eh ; '~'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_5D8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_5D8]
                movsd   [rbp+var_978], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40930A
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40930A
                mov     eax, 8
                jmp     loc_409405
; ---------------------------------------------------------------------------

loc_40930A:                             ; CODE XREF: main+59CB↑j main+5A0F↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_409400
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4093D5
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4093EE
; ---------------------------------------------------------------------------

loc_4093D5:                             ; CODE XREF: main+5AD9↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4093EE:                             ; CODE XREF: main+5AE4↑j
                movsd   xmm1, [rbp+var_978]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_409405
; ---------------------------------------------------------------------------

loc_409400:                             ; CODE XREF: main+5A77↑j
                mov     eax, 0

loc_409405:                             ; CODE XREF: main+5A16↑j main+5B0F↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                movzx   r14d, byte ptr [rax]
                mov     eax, [rbp+var_AA0]
                sub     eax, 7Eh ; '~'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_5D0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_5D0]
                movsd   [rbp+var_970], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_409520
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_409520
                mov     eax, 8
                jmp     loc_40961B
; ---------------------------------------------------------------------------

loc_409520:                             ; CODE XREF: main+5BE1↑j main+5C25↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_409616
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4095EB
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_409604
; ---------------------------------------------------------------------------

loc_4095EB:                             ; CODE XREF: main+5CEF↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_409604:                             ; CODE XREF: main+5CFA↑j
                movsd   xmm1, [rbp+var_970]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40961B
; ---------------------------------------------------------------------------

loc_409616:                             ; CODE XREF: main+5C8D↑j
                mov     eax, 0

loc_40961B:                             ; CODE XREF: main+5C2C↑j main+5D25↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_40963C:                             ; CODE XREF: main+4F9C↑j main+58FB↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                shl     eax, 3
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_409ABE
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416440
                movsd   [rbp+var_5C8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_5C8]
                movsd   [rbp+var_988], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_409792
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_409792
                mov     eax, 8
                jmp     loc_40988D
; ---------------------------------------------------------------------------

loc_409792:                             ; CODE XREF: main+5E53↑j main+5E97↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_409888
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40985D
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_409876
; ---------------------------------------------------------------------------

loc_40985D:                             ; CODE XREF: main+5F61↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_409876:                             ; CODE XREF: main+5F6C↑j
                movsd   xmm1, [rbp+var_988]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40988D
; ---------------------------------------------------------------------------

loc_409888:                             ; CODE XREF: main+5EFF↑j
                mov     eax, 0

loc_40988D:                             ; CODE XREF: main+5E9E↑j main+5F97↑j
                add     r12d, eax
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416440
                movsd   [rbp+var_5C0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_5C0]
                movsd   [rbp+var_980], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_4099A2
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_4099A2
                mov     eax, 8
                jmp     loc_409A9D
; ---------------------------------------------------------------------------

loc_4099A2:                             ; CODE XREF: main+6063↑j main+60A7↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_409A98
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_409A6D
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_409A86
; ---------------------------------------------------------------------------

loc_409A6D:                             ; CODE XREF: main+6171↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_409A86:                             ; CODE XREF: main+617C↑j
                movsd   xmm1, [rbp+var_980]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_409A9D
; ---------------------------------------------------------------------------

loc_409A98:                             ; CODE XREF: main+610F↑j
                mov     eax, 0

loc_409A9D:                             ; CODE XREF: main+60AE↑j main+61A7↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_AA0]
                movsxd  rdx, eax
                mov     rax, [rbp+var_610]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_409ABE:                             ; CODE XREF: main+5D8C↑j
                mov     eax, [rbp+var_AA0]
                add     eax, 1
                mov     [rbp+var_AA0], eax

loc_409ACD:                             ; CODE XREF: main+4ABE↑j
                mov     eax, [rbp+var_AA0]
                cdqe
                cmp     rax, 66h ; 'f'
                setbe   al
                test    al, al
                jnz     loc_4083B2
                nop

loc_409AE5:                             ; CODE XREF: main+4A9C↑j
                mov     rax, [rbp+var_618]
                mov     byte ptr [rax], 1
                mov     rax, [rbp+var_618]
                lea     rcx, [rax+1]
                nop
                lea     rdx, [rbp+var_748]
                lea     rax, [rbp+var_2C0]
                mov     rsi, rcx
                mov     rdi, rax
;   try {
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_ ; std::string::basic_string(char const*,std::allocator<char> const&)
;   } // starts at 409B0F
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcEC1Ev   ; std::allocator<char>::allocator(void)
                lea     rax, [rbp+var_240]
                lea     rdx, [rbp+var_750]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZZ4mainENKUlvE3_clEv ; main::{lambda(void)#5}::operator()(void)
                lea     rax, [rbp+var_240]
                mov     [rbp+var_5B8], rax
                mov     rax, [rbp+var_5B8]
                movzx   eax, byte ptr [rax]
                xor     eax, 1
                test    al, al
                jz      loc_40B2C2
                mov     rax, [rbp+var_5B8]
                add     rax, 1
                mov     [rbp+var_5B0], rax
                mov     [rbp+var_A9C], 0
                jmp     loc_40B2AA
; ---------------------------------------------------------------------------

loc_409B8F:                             ; CODE XREF: main+79CC↓j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40A00E
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416430
                movsd   [rbp+var_5A8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_5A8]
                movsd   [rbp+var_8F8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_409CE2
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_409CE2
                mov     eax, 8
                jmp     loc_409DDD
; ---------------------------------------------------------------------------

loc_409CE2:                             ; CODE XREF: main+63A3↑j main+63E7↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_409DD8
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_409DAD
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_409DC6
; ---------------------------------------------------------------------------

loc_409DAD:                             ; CODE XREF: main+64B1↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_409DC6:                             ; CODE XREF: main+64BC↑j
                movsd   xmm1, [rbp+var_8F8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_409DDD
; ---------------------------------------------------------------------------

loc_409DD8:                             ; CODE XREF: main+644F↑j
                mov     eax, 0

loc_409DDD:                             ; CODE XREF: main+63EE↑j main+64E7↑j
                add     r12d, eax
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416430
                movsd   [rbp+var_5A0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_5A0]
                movsd   [rbp+var_8F0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_409EF2
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_409EF2
                mov     eax, 8
                jmp     loc_409FED
; ---------------------------------------------------------------------------

loc_409EF2:                             ; CODE XREF: main+65B3↑j main+65F7↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_409FE8
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_409FBD
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_409FD6
; ---------------------------------------------------------------------------

loc_409FBD:                             ; CODE XREF: main+66C1↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_409FD6:                             ; CODE XREF: main+66CC↑j
                movsd   xmm1, [rbp+var_8F0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_409FED
; ---------------------------------------------------------------------------

loc_409FE8:                             ; CODE XREF: main+665F↑j
                mov     eax, 0

loc_409FED:                             ; CODE XREF: main+65FE↑j main+66F7↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_40A00E:                             ; CODE XREF: main+62DC↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 3
                sub     eax, edx
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40AE19
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, eax
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40A4F5
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416438
                movsd   [rbp+var_598], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_598]
                movsd   [rbp+var_908], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40A1C9
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40A1C9
                mov     eax, 8
                jmp     loc_40A2C4
; ---------------------------------------------------------------------------

loc_40A1C9:                             ; CODE XREF: main+688A↑j main+68CE↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40A2BF
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40A294
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40A2AD
; ---------------------------------------------------------------------------

loc_40A294:                             ; CODE XREF: main+6998↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40A2AD:                             ; CODE XREF: main+69A3↑j
                movsd   xmm1, [rbp+var_908]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40A2C4
; ---------------------------------------------------------------------------

loc_40A2BF:                             ; CODE XREF: main+6936↑j
                mov     eax, 0

loc_40A2C4:                             ; CODE XREF: main+68D5↑j main+69CE↑j
                add     r12d, eax
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416438
                movsd   [rbp+var_590], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_590]
                movsd   [rbp+var_900], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40A3D9
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40A3D9
                mov     eax, 8
                jmp     loc_40A4D4
; ---------------------------------------------------------------------------

loc_40A3D9:                             ; CODE XREF: main+6A9A↑j main+6ADE↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40A4CF
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40A4A4
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40A4BD
; ---------------------------------------------------------------------------

loc_40A4A4:                             ; CODE XREF: main+6BA8↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40A4BD:                             ; CODE XREF: main+6BB3↑j
                movsd   xmm1, [rbp+var_900]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40A4D4
; ---------------------------------------------------------------------------

loc_40A4CF:                             ; CODE XREF: main+6B46↑j
                mov     eax, 0

loc_40A4D4:                             ; CODE XREF: main+6AE5↑j main+6BDE↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_40A4F5:                             ; CODE XREF: main+67C3↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40A974
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416440
                movsd   [rbp+var_588], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_588]
                movsd   [rbp+var_918], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40A648
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40A648
                mov     eax, 8
                jmp     loc_40A743
; ---------------------------------------------------------------------------

loc_40A648:                             ; CODE XREF: main+6D09↑j main+6D4D↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40A73E
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40A713
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40A72C
; ---------------------------------------------------------------------------

loc_40A713:                             ; CODE XREF: main+6E17↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40A72C:                             ; CODE XREF: main+6E22↑j
                movsd   xmm1, [rbp+var_918]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40A743
; ---------------------------------------------------------------------------

loc_40A73E:                             ; CODE XREF: main+6DB5↑j
                mov     eax, 0

loc_40A743:                             ; CODE XREF: main+6D54↑j main+6E4D↑j
                add     r12d, eax
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416440
                movsd   [rbp+var_580], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_580]
                movsd   [rbp+var_910], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40A858
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40A858
                mov     eax, 8
                jmp     loc_40A953
; ---------------------------------------------------------------------------

loc_40A858:                             ; CODE XREF: main+6F19↑j main+6F5D↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40A94E
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40A923
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40A93C
; ---------------------------------------------------------------------------

loc_40A923:                             ; CODE XREF: main+7027↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40A93C:                             ; CODE XREF: main+7032↑j
                movsd   xmm1, [rbp+var_910]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40A953
; ---------------------------------------------------------------------------

loc_40A94E:                             ; CODE XREF: main+6FC5↑j
                mov     eax, 0

loc_40A953:                             ; CODE XREF: main+6F64↑j main+705D↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_40A974:                             ; CODE XREF: main+6C42↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40AE19
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                mov     eax, [rbp+var_A9C]
                sub     eax, 7Dh ; '}'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_578], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_578]
                movsd   [rbp+var_928], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40AAE7
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40AAE7
                mov     eax, 8
                jmp     loc_40ABE2
; ---------------------------------------------------------------------------

loc_40AAE7:                             ; CODE XREF: main+71A8↑j main+71EC↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40ABDD
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40ABB2
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40ABCB
; ---------------------------------------------------------------------------

loc_40ABB2:                             ; CODE XREF: main+72B6↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40ABCB:                             ; CODE XREF: main+72C1↑j
                movsd   xmm1, [rbp+var_928]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40ABE2
; ---------------------------------------------------------------------------

loc_40ABDD:                             ; CODE XREF: main+7254↑j
                mov     eax, 0

loc_40ABE2:                             ; CODE XREF: main+71F3↑j main+72EC↑j
                add     r12d, eax
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                movzx   r14d, byte ptr [rax]
                mov     eax, [rbp+var_A9C]
                sub     eax, 7Dh ; '}'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_570], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_570]
                movsd   [rbp+var_920], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40ACFD
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40ACFD
                mov     eax, 8
                jmp     loc_40ADF8
; ---------------------------------------------------------------------------

loc_40ACFD:                             ; CODE XREF: main+73BE↑j main+7402↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40ADF3
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40ADC8
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40ADE1
; ---------------------------------------------------------------------------

loc_40ADC8:                             ; CODE XREF: main+74CC↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40ADE1:                             ; CODE XREF: main+74D7↑j
                movsd   xmm1, [rbp+var_920]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40ADF8
; ---------------------------------------------------------------------------

loc_40ADF3:                             ; CODE XREF: main+746A↑j
                mov     eax, 0

loc_40ADF8:                             ; CODE XREF: main+7409↑j main+7502↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_40AE19:                             ; CODE XREF: main+6779↑j main+70D8↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                shl     eax, 3
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40B29B
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                mov     r12d, eax
                movsd   xmm0, cs:qword_416448
                movsd   [rbp+var_568], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_568]
                movsd   [rbp+var_938], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40AF6F
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40AF6F
                mov     eax, 8
                jmp     loc_40B06A
; ---------------------------------------------------------------------------

loc_40AF6F:                             ; CODE XREF: main+7630↑j main+7674↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40B065
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40B03A
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40B053
; ---------------------------------------------------------------------------

loc_40B03A:                             ; CODE XREF: main+773E↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40B053:                             ; CODE XREF: main+7749↑j
                movsd   xmm1, [rbp+var_938]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40B06A
; ---------------------------------------------------------------------------

loc_40B065:                             ; CODE XREF: main+76DC↑j
                mov     eax, 0

loc_40B06A:                             ; CODE XREF: main+767B↑j main+7774↑j
                add     r12d, eax
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                movzx   eax, byte ptr [rax]
                movsx   r14d, al
                movsd   xmm0, cs:qword_416448
                movsd   [rbp+var_560], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_560]
                movsd   [rbp+var_930], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40B17F
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40B17F
                mov     eax, 8
                jmp     loc_40B27A
; ---------------------------------------------------------------------------

loc_40B17F:                             ; CODE XREF: main+7840↑j main+7884↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40B275
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40B24A
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40B263
; ---------------------------------------------------------------------------

loc_40B24A:                             ; CODE XREF: main+794E↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40B263:                             ; CODE XREF: main+7959↑j
                movsd   xmm1, [rbp+var_930]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40B27A
; ---------------------------------------------------------------------------

loc_40B275:                             ; CODE XREF: main+78EC↑j
                mov     eax, 0

loc_40B27A:                             ; CODE XREF: main+788B↑j main+7984↑j
                and     eax, r14d
                add     eax, eax
                mov     ecx, r12d
                sub     ecx, eax
                mov     eax, [rbp+var_A9C]
                movsxd  rdx, eax
                mov     rax, [rbp+var_5B0]
                add     rax, rdx
                mov     edx, ecx
                mov     [rax], dl

loc_40B29B:                             ; CODE XREF: main+7569↑j
                mov     eax, [rbp+var_A9C]
                add     eax, 1
                mov     [rbp+var_A9C], eax

loc_40B2AA:                             ; CODE XREF: main+629B↑j
                mov     eax, [rbp+var_A9C]
                cdqe
                cmp     rax, 0Fh
                setbe   al
                test    al, al
                jnz     loc_409B8F
                nop

loc_40B2C2:                             ; CODE XREF: main+6279↑j
                mov     rax, [rbp+var_5B8]
                mov     byte ptr [rax], 1
                mov     rax, [rbp+var_5B8]
                lea     rcx, [rax+1]
                nop
                lea     rdx, [rbp+var_748]
                lea     rax, [rbp+var_2A0]
                mov     rsi, rcx
                mov     rdi, rax
;   try {
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_ ; std::string::basic_string(char const*,std::allocator<char> const&)
;   } // starts at 40B2EC
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                lea     rcx, [rbp+var_320]
                lea     rax, [rbp+var_240]
                mov     edx, 10h
                mov     rsi, rcx
                mov     rdi, rax
;   try {
                call    __ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode ; std::ofstream::basic_ofstream(std::string const&,std::_Ios_Openmode)
;   } // starts at 40B319
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40CDFC
                lea     rax, [rbp+var_240]
                add     rax, 0F8h
                mov     rdi, rax
;   try {
                call    __ZNKSt9basic_iosIcSt11char_traitsIcEEntEv ; std::ios::operator!(void)
                movzx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                movsd   [rbp+var_558], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_558]
                movsd   [rbp+var_8E8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40B490
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40B490
                mov     eax, 8
                jmp     loc_40B58B
; ---------------------------------------------------------------------------

loc_40B490:                             ; CODE XREF: main+7B51↑j main+7B95↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40B586
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40B55B
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40B574
; ---------------------------------------------------------------------------

loc_40B55B:                             ; CODE XREF: main+7C5F↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40B574:                             ; CODE XREF: main+7C6A↑j
                movsd   xmm1, [rbp+var_8E8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40B58B
; ---------------------------------------------------------------------------

loc_40B586:                             ; CODE XREF: main+7BFD↑j
                mov     eax, 0

loc_40B58B:                             ; CODE XREF: main+7B9C↑j main+7C95↑j
                mov     r12d, eax
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     ecx, eax
                movzx   eax, cs:_ZL2_1
                movsx   edx, al
                mov     eax, ecx
                sub     eax, edx
                imul    eax, r12d
                test    eax, eax
                jz      short loc_40B5EB
                mov     eax, 1
                jmp     short loc_40B5F0
; ---------------------------------------------------------------------------

loc_40B5EB:                             ; CODE XREF: main+7CF3↑j
                mov     eax, 0

loc_40B5F0:                             ; CODE XREF: main+7CFA↑j
                test    al, al
                jz      loc_40CDFC
                lea     rax, [rbp+var_300]
                mov     rsi, rax
                mov     edi, offset _ZSt4cout@GLIBCXX_3_4
                call    __ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE ; std::operator<<<char>(std::ostream &,std::string const&)
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    _ZZ4mainENKUlvE4_clEv ; main::{lambda(void)#6}::operator()(void)
                mov     [rbp+var_260], rax
                lea     rax, [rbp+var_260]
                mov     [rbp+var_550], rax
                mov     rax, [rbp+var_550]
                movzx   eax, byte ptr [rax]
                xor     eax, 1
                test    al, al
                jz      loc_40CDD9
                mov     rax, [rbp+var_550]
                add     rax, 4
                mov     [rbp+var_548], rax
                mov     [rbp+var_A98], 0
                jmp     loc_40CDC5
; ---------------------------------------------------------------------------

loc_40B666:                             ; CODE XREF: main+94E3↓j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40BAF2
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416440
                movsd   [rbp+var_540], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_540]
                movsd   [rbp+var_8A0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40B7BD
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40B7BD
                mov     eax, 8
                jmp     loc_40B8B8
; ---------------------------------------------------------------------------

loc_40B7BD:                             ; CODE XREF: main+7E7E↑j main+7EC2↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40B8B3
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40B888
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40B8A1
; ---------------------------------------------------------------------------

loc_40B888:                             ; CODE XREF: main+7F8C↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40B8A1:                             ; CODE XREF: main+7F97↑j
                movsd   xmm1, [rbp+var_8A0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40B8B8
; ---------------------------------------------------------------------------

loc_40B8B3:                             ; CODE XREF: main+7F2A↑j
                mov     eax, 0

loc_40B8B8:                             ; CODE XREF: main+7EC9↑j main+7FC2↑j
                add     r12d, eax
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416440
                movsd   [rbp+var_538], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_538]
                movsd   [rbp+var_898], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40B9D0
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40B9D0
                mov     eax, 8
                jmp     loc_40BACB
; ---------------------------------------------------------------------------

loc_40B9D0:                             ; CODE XREF: main+8091↑j main+80D5↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40BAC6
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40BA9B
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40BAB4
; ---------------------------------------------------------------------------

loc_40BA9B:                             ; CODE XREF: main+819F↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40BAB4:                             ; CODE XREF: main+81AA↑j
                movsd   xmm1, [rbp+var_898]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40BACB
; ---------------------------------------------------------------------------

loc_40BAC6:                             ; CODE XREF: main+813D↑j
                mov     eax, 0

loc_40BACB:                             ; CODE XREF: main+80DC↑j main+81D5↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40BAF2:                             ; CODE XREF: main+7DB3↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 3
                sub     eax, edx
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40C927
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, eax
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40BFE6
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416448
                movsd   [rbp+var_530], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_530]
                movsd   [rbp+var_8B0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40BCB1
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40BCB1
                mov     eax, 8
                jmp     loc_40BDAC
; ---------------------------------------------------------------------------

loc_40BCB1:                             ; CODE XREF: main+8372↑j main+83B6↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40BDA7
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40BD7C
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40BD95
; ---------------------------------------------------------------------------

loc_40BD7C:                             ; CODE XREF: main+8480↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40BD95:                             ; CODE XREF: main+848B↑j
                movsd   xmm1, [rbp+var_8B0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40BDAC
; ---------------------------------------------------------------------------

loc_40BDA7:                             ; CODE XREF: main+841E↑j
                mov     eax, 0

loc_40BDAC:                             ; CODE XREF: main+83BD↑j main+84B6↑j
                add     r12d, eax
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416448
                movsd   [rbp+var_528], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_528]
                movsd   [rbp+var_8A8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40BEC4
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40BEC4
                mov     eax, 8
                jmp     loc_40BFBF
; ---------------------------------------------------------------------------

loc_40BEC4:                             ; CODE XREF: main+8585↑j main+85C9↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40BFBA
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40BF8F
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40BFA8
; ---------------------------------------------------------------------------

loc_40BF8F:                             ; CODE XREF: main+8693↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40BFA8:                             ; CODE XREF: main+869E↑j
                movsd   xmm1, [rbp+var_8A8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40BFBF
; ---------------------------------------------------------------------------

loc_40BFBA:                             ; CODE XREF: main+8631↑j
                mov     eax, 0

loc_40BFBF:                             ; CODE XREF: main+85D0↑j main+86C9↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40BFE6:                             ; CODE XREF: main+82A7↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40C472
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416450
                movsd   [rbp+var_520], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_520]
                movsd   [rbp+var_8C0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40C13D
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40C13D
                mov     eax, 8
                jmp     loc_40C238
; ---------------------------------------------------------------------------

loc_40C13D:                             ; CODE XREF: main+87FE↑j main+8842↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40C233
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40C208
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40C221
; ---------------------------------------------------------------------------

loc_40C208:                             ; CODE XREF: main+890C↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40C221:                             ; CODE XREF: main+8917↑j
                movsd   xmm1, [rbp+var_8C0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40C238
; ---------------------------------------------------------------------------

loc_40C233:                             ; CODE XREF: main+88AA↑j
                mov     eax, 0

loc_40C238:                             ; CODE XREF: main+8849↑j main+8942↑j
                add     r12d, eax
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416450
                movsd   [rbp+var_518], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_518]
                movsd   [rbp+var_8B8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40C350
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40C350
                mov     eax, 8
                jmp     loc_40C44B
; ---------------------------------------------------------------------------

loc_40C350:                             ; CODE XREF: main+8A11↑j main+8A55↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40C446
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40C41B
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40C434
; ---------------------------------------------------------------------------

loc_40C41B:                             ; CODE XREF: main+8B1F↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40C434:                             ; CODE XREF: main+8B2A↑j
                movsd   xmm1, [rbp+var_8B8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40C44B
; ---------------------------------------------------------------------------

loc_40C446:                             ; CODE XREF: main+8ABD↑j
                mov     eax, 0

loc_40C44B:                             ; CODE XREF: main+8A5C↑j main+8B55↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40C472:                             ; CODE XREF: main+8733↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40C927
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     r12d, [rax]
                mov     eax, [rbp+var_A98]
                sub     eax, 7Bh ; '{'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_510], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_510]
                movsd   [rbp+var_8D0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40C5E9
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40C5E9
                mov     eax, 8
                jmp     loc_40C6E4
; ---------------------------------------------------------------------------

loc_40C5E9:                             ; CODE XREF: main+8CAA↑j main+8CEE↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40C6DF
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40C6B4
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40C6CD
; ---------------------------------------------------------------------------

loc_40C6B4:                             ; CODE XREF: main+8DB8↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40C6CD:                             ; CODE XREF: main+8DC3↑j
                movsd   xmm1, [rbp+var_8D0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40C6E4
; ---------------------------------------------------------------------------

loc_40C6DF:                             ; CODE XREF: main+8D56↑j
                mov     eax, 0

loc_40C6E4:                             ; CODE XREF: main+8CF5↑j main+8DEE↑j
                add     r12d, eax
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     r14d, [rax]
                mov     eax, [rbp+var_A98]
                sub     eax, 7Bh ; '{'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_508], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_508]
                movsd   [rbp+var_8C8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40C805
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40C805
                mov     eax, 8
                jmp     loc_40C900
; ---------------------------------------------------------------------------

loc_40C805:                             ; CODE XREF: main+8EC6↑j main+8F0A↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40C8FB
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40C8D0
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40C8E9
; ---------------------------------------------------------------------------

loc_40C8D0:                             ; CODE XREF: main+8FD4↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40C8E9:                             ; CODE XREF: main+8FDF↑j
                movsd   xmm1, [rbp+var_8C8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40C900
; ---------------------------------------------------------------------------

loc_40C8FB:                             ; CODE XREF: main+8F72↑j
                mov     eax, 0

loc_40C900:                             ; CODE XREF: main+8F11↑j main+900A↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40C927:                             ; CODE XREF: main+825D↑j main+8BD6↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                shl     eax, 3
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40CDB6
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416458
                movsd   [rbp+var_500], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_500]
                movsd   [rbp+var_8E0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40CA81
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40CA81
                mov     eax, 8
                jmp     loc_40CB7C
; ---------------------------------------------------------------------------

loc_40CA81:                             ; CODE XREF: main+9142↑j main+9186↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40CB77
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40CB4C
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40CB65
; ---------------------------------------------------------------------------

loc_40CB4C:                             ; CODE XREF: main+9250↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40CB65:                             ; CODE XREF: main+925B↑j
                movsd   xmm1, [rbp+var_8E0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40CB7C
; ---------------------------------------------------------------------------

loc_40CB77:                             ; CODE XREF: main+91EE↑j
                mov     eax, 0

loc_40CB7C:                             ; CODE XREF: main+918D↑j main+9286↑j
                add     r12d, eax
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416458
                movsd   [rbp+var_4F8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_4F8]
                movsd   [rbp+var_8D8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40CC94
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40CC94
                mov     eax, 8
                jmp     loc_40CD8F
; ---------------------------------------------------------------------------

loc_40CC94:                             ; CODE XREF: main+9355↑j main+9399↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40CD8A
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40CD5F
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40CD78
; ---------------------------------------------------------------------------

loc_40CD5F:                             ; CODE XREF: main+9463↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40CD78:                             ; CODE XREF: main+946E↑j
                movsd   xmm1, [rbp+var_8D8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40CD8F
; ---------------------------------------------------------------------------

loc_40CD8A:                             ; CODE XREF: main+9401↑j
                mov     eax, 0

loc_40CD8F:                             ; CODE XREF: main+93A0↑j main+9499↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A98]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_548]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40CDB6:                             ; CODE XREF: main+9077↑j
                mov     eax, [rbp+var_A98]
                add     eax, 1
                mov     [rbp+var_A98], eax

loc_40CDC5:                             ; CODE XREF: main+7D72↑j
                mov     eax, [rbp+var_A98]
                test    eax, eax
                setz    al
                test    al, al
                jnz     loc_40B666
                nop

loc_40CDD9:                             ; CODE XREF: main+7D50↑j
                mov     rax, [rbp+var_550]
                mov     byte ptr [rax], 1
                mov     rax, [rbp+var_550]
                add     rax, 4
                mov     eax, [rax]
                mov     eax, eax
                mov     rax, _ZN3obf16FunctionPtrHiderIPFvvELi10ELi6EXadL_Z5abortEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE[rax*8] ; obf::FunctionPtrHider<void (*)(void),10,6,&(abort),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                call    rax ; obf::FunctionPtrHider<void (*)(void),10,6,&(abort),0,1,2,3,4,5,6,7,8,9>::shuffled_arr

loc_40CDFC:                             ; CODE XREF: main+7A8A↑j main+7D03↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_410392
                call    _Z29ive_played_these_games_beforev ; ive_played_these_games_before(void)
                movzx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                movsd   [rbp+var_4F0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_4F0]
                movsd   [rbp+var_890], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40CF5C
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40CF5C
                mov     eax, 8
                jmp     loc_40D057
; ---------------------------------------------------------------------------

loc_40CF5C:                             ; CODE XREF: main+961D↑j main+9661↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40D052
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40D027
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40D040
; ---------------------------------------------------------------------------

loc_40D027:                             ; CODE XREF: main+972B↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40D040:                             ; CODE XREF: main+9736↑j
                movsd   xmm1, [rbp+var_890]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40D057
; ---------------------------------------------------------------------------

loc_40D052:                             ; CODE XREF: main+96C9↑j
                mov     eax, 0

loc_40D057:                             ; CODE XREF: main+9668↑j main+9761↑j
                mov     r12d, eax
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 3
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     ecx, eax
                movzx   eax, cs:_ZL2_1
                movsx   edx, al
                mov     eax, ecx
                sub     eax, edx
                imul    eax, r12d
                test    eax, eax
                jz      short loc_40D0BA
                mov     eax, 1
                jmp     short loc_40D0BF
; ---------------------------------------------------------------------------

loc_40D0BA:                             ; CODE XREF: main+97C2↑j
                mov     eax, 0

loc_40D0BF:                             ; CODE XREF: main+97C9↑j
                test    al, al
                jz      loc_410392
                mov     [rbp+var_A84], 0
                jmp     loc_40E92C
; ---------------------------------------------------------------------------

loc_40D0D6:                             ; CODE XREF: main+B2AD↓j
                mov     [rbp+var_A80], 0
                jmp     loc_40E8FF
; ---------------------------------------------------------------------------

loc_40D0E5:                             ; CODE XREF: main+B030↓j
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    _ZZ4mainENKUlvE5_clEv ; main::{lambda(void)#7}::operator()(void)
                mov     [rbp+var_260], rax
                lea     rax, [rbp+var_260]
                mov     [rbp+var_4E8], rax
                mov     rax, [rbp+var_4E8]
                movzx   eax, byte ptr [rax]
                xor     eax, 1
                test    al, al
                jz      loc_40E8B2
                mov     rax, [rbp+var_4E8]
                add     rax, 4
                mov     [rbp+var_4E0], rax
                mov     [rbp+var_A94], 0
                jmp     loc_40E89E
; ---------------------------------------------------------------------------

loc_40D13F:                             ; CODE XREF: main+AFBC↓j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40D5CB
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416450
                movsd   [rbp+var_4D8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_4D8]
                movsd   [rbp+var_848], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40D296
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40D296
                mov     eax, 8
                jmp     loc_40D391
; ---------------------------------------------------------------------------

loc_40D296:                             ; CODE XREF: main+9957↑j main+999B↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40D38C
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40D361
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40D37A
; ---------------------------------------------------------------------------

loc_40D361:                             ; CODE XREF: main+9A65↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40D37A:                             ; CODE XREF: main+9A70↑j
                movsd   xmm1, [rbp+var_848]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40D391
; ---------------------------------------------------------------------------

loc_40D38C:                             ; CODE XREF: main+9A03↑j
                mov     eax, 0

loc_40D391:                             ; CODE XREF: main+99A2↑j main+9A9B↑j
                add     r12d, eax
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416450
                movsd   [rbp+var_4D0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_4D0]
                movsd   [rbp+var_840], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40D4A9
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40D4A9
                mov     eax, 8
                jmp     loc_40D5A4
; ---------------------------------------------------------------------------

loc_40D4A9:                             ; CODE XREF: main+9B6A↑j main+9BAE↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40D59F
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40D574
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40D58D
; ---------------------------------------------------------------------------

loc_40D574:                             ; CODE XREF: main+9C78↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40D58D:                             ; CODE XREF: main+9C83↑j
                movsd   xmm1, [rbp+var_840]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40D5A4
; ---------------------------------------------------------------------------

loc_40D59F:                             ; CODE XREF: main+9C16↑j
                mov     eax, 0

loc_40D5A4:                             ; CODE XREF: main+9BB5↑j main+9CAE↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40D5CB:                             ; CODE XREF: main+988C↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 3
                sub     eax, edx
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40E400
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, eax
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40DABF
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416458
                movsd   [rbp+var_4C8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_4C8]
                movsd   [rbp+var_858], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40D78A
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40D78A
                mov     eax, 8
                jmp     loc_40D885
; ---------------------------------------------------------------------------

loc_40D78A:                             ; CODE XREF: main+9E4B↑j main+9E8F↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40D880
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40D855
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40D86E
; ---------------------------------------------------------------------------

loc_40D855:                             ; CODE XREF: main+9F59↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40D86E:                             ; CODE XREF: main+9F64↑j
                movsd   xmm1, [rbp+var_858]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40D885
; ---------------------------------------------------------------------------

loc_40D880:                             ; CODE XREF: main+9EF7↑j
                mov     eax, 0

loc_40D885:                             ; CODE XREF: main+9E96↑j main+9F8F↑j
                add     r12d, eax
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416458
                movsd   [rbp+var_4C0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_4C0]
                movsd   [rbp+var_850], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40D99D
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40D99D
                mov     eax, 8
                jmp     loc_40DA98
; ---------------------------------------------------------------------------

loc_40D99D:                             ; CODE XREF: main+A05E↑j main+A0A2↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40DA93
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40DA68
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40DA81
; ---------------------------------------------------------------------------

loc_40DA68:                             ; CODE XREF: main+A16C↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40DA81:                             ; CODE XREF: main+A177↑j
                movsd   xmm1, [rbp+var_850]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40DA98
; ---------------------------------------------------------------------------

loc_40DA93:                             ; CODE XREF: main+A10A↑j
                mov     eax, 0

loc_40DA98:                             ; CODE XREF: main+A0A9↑j main+A1A2↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40DABF:                             ; CODE XREF: main+9D80↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40DF4B
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416460
                movsd   [rbp+var_4B8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_4B8]
                movsd   [rbp+var_868], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40DC16
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40DC16
                mov     eax, 8
                jmp     loc_40DD11
; ---------------------------------------------------------------------------

loc_40DC16:                             ; CODE XREF: main+A2D7↑j main+A31B↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40DD0C
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40DCE1
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40DCFA
; ---------------------------------------------------------------------------

loc_40DCE1:                             ; CODE XREF: main+A3E5↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40DCFA:                             ; CODE XREF: main+A3F0↑j
                movsd   xmm1, [rbp+var_868]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40DD11
; ---------------------------------------------------------------------------

loc_40DD0C:                             ; CODE XREF: main+A383↑j
                mov     eax, 0

loc_40DD11:                             ; CODE XREF: main+A322↑j main+A41B↑j
                add     r12d, eax
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416460
                movsd   [rbp+var_4B0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_4B0]
                movsd   [rbp+var_860], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40DE29
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40DE29
                mov     eax, 8
                jmp     loc_40DF24
; ---------------------------------------------------------------------------

loc_40DE29:                             ; CODE XREF: main+A4EA↑j main+A52E↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40DF1F
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40DEF4
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40DF0D
; ---------------------------------------------------------------------------

loc_40DEF4:                             ; CODE XREF: main+A5F8↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40DF0D:                             ; CODE XREF: main+A603↑j
                movsd   xmm1, [rbp+var_860]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40DF24
; ---------------------------------------------------------------------------

loc_40DF1F:                             ; CODE XREF: main+A596↑j
                mov     eax, 0

loc_40DF24:                             ; CODE XREF: main+A535↑j main+A62E↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40DF4B:                             ; CODE XREF: main+A20C↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40E400
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     r12d, [rax]
                mov     eax, [rbp+var_A94]
                sub     eax, 79h ; 'y'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_4A8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_4A8]
                movsd   [rbp+var_878], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40E0C2
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40E0C2
                mov     eax, 8
                jmp     loc_40E1BD
; ---------------------------------------------------------------------------

loc_40E0C2:                             ; CODE XREF: main+A783↑j main+A7C7↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40E1B8
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40E18D
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40E1A6
; ---------------------------------------------------------------------------

loc_40E18D:                             ; CODE XREF: main+A891↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40E1A6:                             ; CODE XREF: main+A89C↑j
                movsd   xmm1, [rbp+var_878]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40E1BD
; ---------------------------------------------------------------------------

loc_40E1B8:                             ; CODE XREF: main+A82F↑j
                mov     eax, 0

loc_40E1BD:                             ; CODE XREF: main+A7CE↑j main+A8C7↑j
                add     r12d, eax
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     r14d, [rax]
                mov     eax, [rbp+var_A94]
                sub     eax, 79h ; 'y'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_4A0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_4A0]
                movsd   [rbp+var_870], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40E2DE
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40E2DE
                mov     eax, 8
                jmp     loc_40E3D9
; ---------------------------------------------------------------------------

loc_40E2DE:                             ; CODE XREF: main+A99F↑j main+A9E3↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40E3D4
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40E3A9
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40E3C2
; ---------------------------------------------------------------------------

loc_40E3A9:                             ; CODE XREF: main+AAAD↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40E3C2:                             ; CODE XREF: main+AAB8↑j
                movsd   xmm1, [rbp+var_870]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40E3D9
; ---------------------------------------------------------------------------

loc_40E3D4:                             ; CODE XREF: main+AA4B↑j
                mov     eax, 0

loc_40E3D9:                             ; CODE XREF: main+A9EA↑j main+AAE3↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40E400:                             ; CODE XREF: main+9D36↑j main+A6AF↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                shl     eax, 3
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40E88F
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416468
                movsd   [rbp+var_498], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_498]
                movsd   [rbp+var_888], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40E55A
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40E55A
                mov     eax, 8
                jmp     loc_40E655
; ---------------------------------------------------------------------------

loc_40E55A:                             ; CODE XREF: main+AC1B↑j main+AC5F↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40E650
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40E625
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40E63E
; ---------------------------------------------------------------------------

loc_40E625:                             ; CODE XREF: main+AD29↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40E63E:                             ; CODE XREF: main+AD34↑j
                movsd   xmm1, [rbp+var_888]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40E655
; ---------------------------------------------------------------------------

loc_40E650:                             ; CODE XREF: main+ACC7↑j
                mov     eax, 0

loc_40E655:                             ; CODE XREF: main+AC66↑j main+AD5F↑j
                add     r12d, eax
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416468
                movsd   [rbp+var_490], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_490]
                movsd   [rbp+var_880], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40E76D
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40E76D
                mov     eax, 8
                jmp     loc_40E868
; ---------------------------------------------------------------------------

loc_40E76D:                             ; CODE XREF: main+AE2E↑j main+AE72↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40E863
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40E838
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40E851
; ---------------------------------------------------------------------------

loc_40E838:                             ; CODE XREF: main+AF3C↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40E851:                             ; CODE XREF: main+AF47↑j
                movsd   xmm1, [rbp+var_880]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40E868
; ---------------------------------------------------------------------------

loc_40E863:                             ; CODE XREF: main+AEDA↑j
                mov     eax, 0

loc_40E868:                             ; CODE XREF: main+AE79↑j main+AF72↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A94]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_4E0]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40E88F:                             ; CODE XREF: main+AB50↑j
                mov     eax, [rbp+var_A94]
                add     eax, 1
                mov     [rbp+var_A94], eax

loc_40E89E:                             ; CODE XREF: main+984B↑j
                mov     eax, [rbp+var_A94]
                test    eax, eax
                setz    al
                test    al, al
                jnz     loc_40D13F
                nop

loc_40E8B2:                             ; CODE XREF: main+9829↑j
                mov     rax, [rbp+var_4E8]
                mov     byte ptr [rax], 1
                mov     rax, [rbp+var_4E8]
                add     rax, 4
                mov     eax, [rax]
                mov     eax, eax
                mov     rbx, _ZN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE[rax*8] ; obf::FunctionPtrHider<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                mov     eax, [rbp+var_A80]
                movsxd  rdx, eax
                lea     rax, [rbp+var_360]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm ; std::vector<std::string>::operator[](ulong)
                mov     esi, 32h ; '2'
                mov     rdi, rax
                call    rbx ; obf::FunctionPtrHider<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                add     [rbp+var_A80], 1

loc_40E8FF:                             ; CODE XREF: main+97F1↑j
                mov     eax, [rbp+var_A80]
                movsxd  rbx, eax
                lea     rax, [rbp+var_360]
                mov     rdi, rax
                call    _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv ; std::vector<std::string>::size(void)
                cmp     rbx, rax
                setb    al
                test    al, al
                jnz     loc_40D0E5
                add     [rbp+var_A84], 1

loc_40E92C:                             ; CODE XREF: main+97E2↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40E98D
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40E9A6
; ---------------------------------------------------------------------------

loc_40E98D:                             ; CODE XREF: main+B091↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40E9A6:                             ; CODE XREF: main+B09C↑j
                movsd   [rbp+var_488], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_488]
                movsd   [rbp+var_838], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40EA96
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40EA96
                mov     eax, 8
                jmp     loc_40EB91
; ---------------------------------------------------------------------------

loc_40EA96:                             ; CODE XREF: main+B157↑j main+B19B↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40EB8C
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40EB61
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40EB7A
; ---------------------------------------------------------------------------

loc_40EB61:                             ; CODE XREF: main+B265↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40EB7A:                             ; CODE XREF: main+B270↑j
                movsd   xmm1, [rbp+var_838]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40EB91
; ---------------------------------------------------------------------------

loc_40EB8C:                             ; CODE XREF: main+B203↑j
                mov     eax, 0

loc_40EB91:                             ; CODE XREF: main+B1A2↑j main+B29B↑j
                cmp     [rbp+var_A84], eax
                setl    al
                test    al, al
                jnz     loc_40D0D6
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    _ZZ4mainENKUlvE6_clEv ; main::{lambda(void)#8}::operator()(void)
                mov     [rbp+var_260], rax
                lea     rax, [rbp+var_260]
                mov     [rbp+var_480], rax
                mov     rax, [rbp+var_480]
                movzx   eax, byte ptr [rax]
                xor     eax, 1
                test    al, al
                jz      loc_41036F
                mov     rax, [rbp+var_480]
                add     rax, 4
                mov     [rbp+var_478], rax
                mov     [rbp+var_A90], 0
                jmp     loc_41035B
; ---------------------------------------------------------------------------

loc_40EBFC:                             ; CODE XREF: main+CA79↓j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40F088
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416458
                movsd   [rbp+var_470], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_470]
                movsd   [rbp+var_7F0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40ED53
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40ED53
                mov     eax, 8
                jmp     loc_40EE4E
; ---------------------------------------------------------------------------

loc_40ED53:                             ; CODE XREF: main+B414↑j main+B458↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40EE49
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40EE1E
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40EE37
; ---------------------------------------------------------------------------

loc_40EE1E:                             ; CODE XREF: main+B522↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40EE37:                             ; CODE XREF: main+B52D↑j
                movsd   xmm1, [rbp+var_7F0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40EE4E
; ---------------------------------------------------------------------------

loc_40EE49:                             ; CODE XREF: main+B4C0↑j
                mov     eax, 0

loc_40EE4E:                             ; CODE XREF: main+B45F↑j main+B558↑j
                add     r12d, eax
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416458
                movsd   [rbp+var_468], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_468]
                movsd   [rbp+var_7E8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40EF66
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40EF66
                mov     eax, 8
                jmp     loc_40F061
; ---------------------------------------------------------------------------

loc_40EF66:                             ; CODE XREF: main+B627↑j main+B66B↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40F05C
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40F031
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40F04A
; ---------------------------------------------------------------------------

loc_40F031:                             ; CODE XREF: main+B735↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40F04A:                             ; CODE XREF: main+B740↑j
                movsd   xmm1, [rbp+var_7E8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40F061
; ---------------------------------------------------------------------------

loc_40F05C:                             ; CODE XREF: main+B6D3↑j
                mov     eax, 0

loc_40F061:                             ; CODE XREF: main+B672↑j main+B76B↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40F088:                             ; CODE XREF: main+B349↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 3
                sub     eax, edx
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40FEBD
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, eax
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40F57C
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416460
                movsd   [rbp+var_460], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_460]
                movsd   [rbp+var_800], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40F247
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40F247
                mov     eax, 8
                jmp     loc_40F342
; ---------------------------------------------------------------------------

loc_40F247:                             ; CODE XREF: main+B908↑j main+B94C↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40F33D
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40F312
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40F32B
; ---------------------------------------------------------------------------

loc_40F312:                             ; CODE XREF: main+BA16↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40F32B:                             ; CODE XREF: main+BA21↑j
                movsd   xmm1, [rbp+var_800]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40F342
; ---------------------------------------------------------------------------

loc_40F33D:                             ; CODE XREF: main+B9B4↑j
                mov     eax, 0

loc_40F342:                             ; CODE XREF: main+B953↑j main+BA4C↑j
                add     r12d, eax
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416460
                movsd   [rbp+var_458], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_458]
                movsd   [rbp+var_7F8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40F45A
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40F45A
                mov     eax, 8
                jmp     loc_40F555
; ---------------------------------------------------------------------------

loc_40F45A:                             ; CODE XREF: main+BB1B↑j main+BB5F↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40F550
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40F525
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40F53E
; ---------------------------------------------------------------------------

loc_40F525:                             ; CODE XREF: main+BC29↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40F53E:                             ; CODE XREF: main+BC34↑j
                movsd   xmm1, [rbp+var_7F8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40F555
; ---------------------------------------------------------------------------

loc_40F550:                             ; CODE XREF: main+BBC7↑j
                mov     eax, 0

loc_40F555:                             ; CODE XREF: main+BB66↑j main+BC5F↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40F57C:                             ; CODE XREF: main+B83D↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_40FA08
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416468
                movsd   [rbp+var_450], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_450]
                movsd   [rbp+var_810], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40F6D3
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40F6D3
                mov     eax, 8
                jmp     loc_40F7CE
; ---------------------------------------------------------------------------

loc_40F6D3:                             ; CODE XREF: main+BD94↑j main+BDD8↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40F7C9
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40F79E
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40F7B7
; ---------------------------------------------------------------------------

loc_40F79E:                             ; CODE XREF: main+BEA2↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40F7B7:                             ; CODE XREF: main+BEAD↑j
                movsd   xmm1, [rbp+var_810]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40F7CE
; ---------------------------------------------------------------------------

loc_40F7C9:                             ; CODE XREF: main+BE40↑j
                mov     eax, 0

loc_40F7CE:                             ; CODE XREF: main+BDDF↑j main+BED8↑j
                add     r12d, eax
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416468
                movsd   [rbp+var_448], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_448]
                movsd   [rbp+var_808], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40F8E6
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40F8E6
                mov     eax, 8
                jmp     loc_40F9E1
; ---------------------------------------------------------------------------

loc_40F8E6:                             ; CODE XREF: main+BFA7↑j main+BFEB↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40F9DC
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40F9B1
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40F9CA
; ---------------------------------------------------------------------------

loc_40F9B1:                             ; CODE XREF: main+C0B5↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40F9CA:                             ; CODE XREF: main+C0C0↑j
                movsd   xmm1, [rbp+var_808]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40F9E1
; ---------------------------------------------------------------------------

loc_40F9DC:                             ; CODE XREF: main+C053↑j
                mov     eax, 0

loc_40F9E1:                             ; CODE XREF: main+BFF2↑j main+C0EB↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40FA08:                             ; CODE XREF: main+BCC9↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40FEBD
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     r12d, [rax]
                mov     eax, [rbp+var_A90]
                sub     eax, 78h ; 'x'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_440], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_440]
                movsd   [rbp+var_820], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40FB7F
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40FB7F
                mov     eax, 8
                jmp     loc_40FC7A
; ---------------------------------------------------------------------------

loc_40FB7F:                             ; CODE XREF: main+C240↑j main+C284↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40FC75
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40FC4A
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40FC63
; ---------------------------------------------------------------------------

loc_40FC4A:                             ; CODE XREF: main+C34E↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40FC63:                             ; CODE XREF: main+C359↑j
                movsd   xmm1, [rbp+var_820]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40FC7A
; ---------------------------------------------------------------------------

loc_40FC75:                             ; CODE XREF: main+C2EC↑j
                mov     eax, 0

loc_40FC7A:                             ; CODE XREF: main+C28B↑j main+C384↑j
                add     r12d, eax
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     r14d, [rax]
                mov     eax, [rbp+var_A90]
                sub     eax, 78h ; 'x'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_438], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_438]
                movsd   [rbp+var_818], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_40FD9B
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_40FD9B
                mov     eax, 8
                jmp     loc_40FE96
; ---------------------------------------------------------------------------

loc_40FD9B:                             ; CODE XREF: main+C45C↑j main+C4A0↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_40FE91
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_40FE66
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_40FE7F
; ---------------------------------------------------------------------------

loc_40FE66:                             ; CODE XREF: main+C56A↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_40FE7F:                             ; CODE XREF: main+C575↑j
                movsd   xmm1, [rbp+var_818]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_40FE96
; ---------------------------------------------------------------------------

loc_40FE91:                             ; CODE XREF: main+C508↑j
                mov     eax, 0

loc_40FE96:                             ; CODE XREF: main+C4A7↑j main+C5A0↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_40FEBD:                             ; CODE XREF: main+B7F3↑j main+C16C↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                shl     eax, 3
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_41034C
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416470
                movsd   [rbp+var_430], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_430]
                movsd   [rbp+var_830], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_410017
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_410017
                mov     eax, 8
                jmp     loc_410112
; ---------------------------------------------------------------------------

loc_410017:                             ; CODE XREF: main+C6D8↑j main+C71C↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_41010D
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4100E2
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4100FB
; ---------------------------------------------------------------------------

loc_4100E2:                             ; CODE XREF: main+C7E6↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4100FB:                             ; CODE XREF: main+C7F1↑j
                movsd   xmm1, [rbp+var_830]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_410112
; ---------------------------------------------------------------------------

loc_41010D:                             ; CODE XREF: main+C784↑j
                mov     eax, 0

loc_410112:                             ; CODE XREF: main+C723↑j main+C81C↑j
                add     r12d, eax
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416470
                movsd   [rbp+var_428], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_428]
                movsd   [rbp+var_828], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_41022A
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_41022A
                mov     eax, 8
                jmp     loc_410325
; ---------------------------------------------------------------------------

loc_41022A:                             ; CODE XREF: main+C8EB↑j main+C92F↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_410320
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4102F5
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_41030E
; ---------------------------------------------------------------------------

loc_4102F5:                             ; CODE XREF: main+C9F9↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_41030E:                             ; CODE XREF: main+CA04↑j
                movsd   xmm1, [rbp+var_828]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_410325
; ---------------------------------------------------------------------------

loc_410320:                             ; CODE XREF: main+C997↑j
                mov     eax, 0

loc_410325:                             ; CODE XREF: main+C936↑j main+CA2F↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A90]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_478]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_41034C:                             ; CODE XREF: main+C60D↑j
                mov     eax, [rbp+var_A90]
                add     eax, 1
                mov     [rbp+var_A90], eax

loc_41035B:                             ; CODE XREF: main+B308↑j
                mov     eax, [rbp+var_A90]
                test    eax, eax
                setz    al
                test    al, al
                jnz     loc_40EBFC
                nop

loc_41036F:                             ; CODE XREF: main+B2E6↑j
                mov     rax, [rbp+var_480]
                mov     byte ptr [rax], 1
                mov     rax, [rbp+var_480]
                add     rax, 4
                mov     eax, [rax]
                mov     eax, eax
                mov     rax, _ZN3obf16FunctionPtrHiderIPFvvELi10ELi4EXadL_Z5abortEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE[rax*8] ; obf::FunctionPtrHider<void (*)(void),10,4,&(abort),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                call    rax ; obf::FunctionPtrHider<void (*)(void),10,4,&(abort),0,1,2,3,4,5,6,7,8,9>::shuffled_arr

loc_410392:                             ; CODE XREF: main+9566↑j main+97D2↑j
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    _ZZ4mainENKUlvE7_clEv ; main::{lambda(void)#9}::operator()(void)
                mov     [rbp+var_260], rax
                lea     rax, [rbp+var_260]
                mov     [rbp+var_420], rax
                mov     rax, [rbp+var_420]
                movzx   eax, byte ptr [rax]
                xor     eax, 1
                test    al, al
                jz      loc_411B5F
                mov     rax, [rbp+var_420]
                add     rax, 4
                mov     [rbp+var_418], rax
                mov     [rbp+var_A8C], 0
                jmp     loc_411B4B
; ---------------------------------------------------------------------------

loc_4103EC:                             ; CODE XREF: main+E269↓j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_410878
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416458
                movsd   [rbp+var_410], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_410]
                movsd   [rbp+var_7A0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_410543
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_410543
                mov     eax, 8
                jmp     loc_41063E
; ---------------------------------------------------------------------------

loc_410543:                             ; CODE XREF: main+CC04↑j main+CC48↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_410639
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_41060E
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_410627
; ---------------------------------------------------------------------------

loc_41060E:                             ; CODE XREF: main+CD12↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_410627:                             ; CODE XREF: main+CD1D↑j
                movsd   xmm1, [rbp+var_7A0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_41063E
; ---------------------------------------------------------------------------

loc_410639:                             ; CODE XREF: main+CCB0↑j
                mov     eax, 0

loc_41063E:                             ; CODE XREF: main+CC4F↑j main+CD48↑j
                add     r12d, eax
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416458
                movsd   [rbp+var_408], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_408]
                movsd   [rbp+var_798], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_410756
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_410756
                mov     eax, 8
                jmp     loc_410851
; ---------------------------------------------------------------------------

loc_410756:                             ; CODE XREF: main+CE17↑j main+CE5B↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_41084C
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_410821
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_41083A
; ---------------------------------------------------------------------------

loc_410821:                             ; CODE XREF: main+CF25↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_41083A:                             ; CODE XREF: main+CF30↑j
                movsd   xmm1, [rbp+var_798]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_410851
; ---------------------------------------------------------------------------

loc_41084C:                             ; CODE XREF: main+CEC3↑j
                mov     eax, 0

loc_410851:                             ; CODE XREF: main+CE62↑j main+CF5B↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_410878:                             ; CODE XREF: main+CB39↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 3
                sub     eax, edx
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4116AD
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, eax
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_410D6C
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416460
                movsd   [rbp+var_400], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_400]
                movsd   [rbp+var_7B0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_410A37
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_410A37
                mov     eax, 8
                jmp     loc_410B32
; ---------------------------------------------------------------------------

loc_410A37:                             ; CODE XREF: main+D0F8↑j main+D13C↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_410B2D
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_410B02
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_410B1B
; ---------------------------------------------------------------------------

loc_410B02:                             ; CODE XREF: main+D206↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_410B1B:                             ; CODE XREF: main+D211↑j
                movsd   xmm1, [rbp+var_7B0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_410B32
; ---------------------------------------------------------------------------

loc_410B2D:                             ; CODE XREF: main+D1A4↑j
                mov     eax, 0

loc_410B32:                             ; CODE XREF: main+D143↑j main+D23C↑j
                add     r12d, eax
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416460
                movsd   [rbp+var_3F8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_3F8]
                movsd   [rbp+var_7A8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_410C4A
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_410C4A
                mov     eax, 8
                jmp     loc_410D45
; ---------------------------------------------------------------------------

loc_410C4A:                             ; CODE XREF: main+D30B↑j main+D34F↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_410D40
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_410D15
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_410D2E
; ---------------------------------------------------------------------------

loc_410D15:                             ; CODE XREF: main+D419↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_410D2E:                             ; CODE XREF: main+D424↑j
                movsd   xmm1, [rbp+var_7A8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_410D45
; ---------------------------------------------------------------------------

loc_410D40:                             ; CODE XREF: main+D3B7↑j
                mov     eax, 0

loc_410D45:                             ; CODE XREF: main+D356↑j main+D44F↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_410D6C:                             ; CODE XREF: main+D02D↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_4111F8
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416468
                movsd   [rbp+var_3F0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_3F0]
                movsd   [rbp+var_7C0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_410EC3
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_410EC3
                mov     eax, 8
                jmp     loc_410FBE
; ---------------------------------------------------------------------------

loc_410EC3:                             ; CODE XREF: main+D584↑j main+D5C8↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_410FB9
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_410F8E
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_410FA7
; ---------------------------------------------------------------------------

loc_410F8E:                             ; CODE XREF: main+D692↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_410FA7:                             ; CODE XREF: main+D69D↑j
                movsd   xmm1, [rbp+var_7C0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_410FBE
; ---------------------------------------------------------------------------

loc_410FB9:                             ; CODE XREF: main+D630↑j
                mov     eax, 0

loc_410FBE:                             ; CODE XREF: main+D5CF↑j main+D6C8↑j
                add     r12d, eax
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416468
                movsd   [rbp+var_3E8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_3E8]
                movsd   [rbp+var_7B8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_4110D6
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_4110D6
                mov     eax, 8
                jmp     loc_4111D1
; ---------------------------------------------------------------------------

loc_4110D6:                             ; CODE XREF: main+D797↑j main+D7DB↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4111CC
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4111A1
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4111BA
; ---------------------------------------------------------------------------

loc_4111A1:                             ; CODE XREF: main+D8A5↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4111BA:                             ; CODE XREF: main+D8B0↑j
                movsd   xmm1, [rbp+var_7B8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_4111D1
; ---------------------------------------------------------------------------

loc_4111CC:                             ; CODE XREF: main+D843↑j
                mov     eax, 0

loc_4111D1:                             ; CODE XREF: main+D7E2↑j main+D8DB↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_4111F8:                             ; CODE XREF: main+D4B9↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4116AD
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     r12d, [rax]
                mov     eax, [rbp+var_A8C]
                sub     eax, 78h ; 'x'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_3E0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_3E0]
                movsd   [rbp+var_7D0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_41136F
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_41136F
                mov     eax, 8
                jmp     loc_41146A
; ---------------------------------------------------------------------------

loc_41136F:                             ; CODE XREF: main+DA30↑j main+DA74↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_411465
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_41143A
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_411453
; ---------------------------------------------------------------------------

loc_41143A:                             ; CODE XREF: main+DB3E↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_411453:                             ; CODE XREF: main+DB49↑j
                movsd   xmm1, [rbp+var_7D0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_41146A
; ---------------------------------------------------------------------------

loc_411465:                             ; CODE XREF: main+DADC↑j
                mov     eax, 0

loc_41146A:                             ; CODE XREF: main+DA7B↑j main+DB74↑j
                add     r12d, eax
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     r14d, [rax]
                mov     eax, [rbp+var_A8C]
                sub     eax, 78h ; 'x'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_3D8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_3D8]
                movsd   [rbp+var_7C8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_41158B
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_41158B
                mov     eax, 8
                jmp     loc_411686
; ---------------------------------------------------------------------------

loc_41158B:                             ; CODE XREF: main+DC4C↑j main+DC90↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_411681
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_411656
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_41166F
; ---------------------------------------------------------------------------

loc_411656:                             ; CODE XREF: main+DD5A↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_41166F:                             ; CODE XREF: main+DD65↑j
                movsd   xmm1, [rbp+var_7C8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_411686
; ---------------------------------------------------------------------------

loc_411681:                             ; CODE XREF: main+DCF8↑j
                mov     eax, 0

loc_411686:                             ; CODE XREF: main+DC97↑j main+DD90↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_4116AD:                             ; CODE XREF: main+CFE3↑j main+D95C↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                shl     eax, 3
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_411B3C
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416470
                movsd   [rbp+var_3D0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_3D0]
                movsd   [rbp+var_7E0], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_411807
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_411807
                mov     eax, 8
                jmp     loc_411902
; ---------------------------------------------------------------------------

loc_411807:                             ; CODE XREF: main+DEC8↑j main+DF0C↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4118FD
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4118D2
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4118EB
; ---------------------------------------------------------------------------

loc_4118D2:                             ; CODE XREF: main+DFD6↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4118EB:                             ; CODE XREF: main+DFE1↑j
                movsd   xmm1, [rbp+var_7E0]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_411902
; ---------------------------------------------------------------------------

loc_4118FD:                             ; CODE XREF: main+DF74↑j
                mov     eax, 0

loc_411902:                             ; CODE XREF: main+DF13↑j main+E00C↑j
                add     r12d, eax
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416470
                movsd   [rbp+var_3C8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_3C8]
                movsd   [rbp+var_7D8], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_411A1A
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_411A1A
                mov     eax, 8
                jmp     loc_411B15
; ---------------------------------------------------------------------------

loc_411A1A:                             ; CODE XREF: main+E0DB↑j main+E11F↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_411B10
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_411AE5
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_411AFE
; ---------------------------------------------------------------------------

loc_411AE5:                             ; CODE XREF: main+E1E9↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_411AFE:                             ; CODE XREF: main+E1F4↑j
                movsd   xmm1, [rbp+var_7D8]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_411B15
; ---------------------------------------------------------------------------

loc_411B10:                             ; CODE XREF: main+E187↑j
                mov     eax, 0

loc_411B15:                             ; CODE XREF: main+E126↑j main+E21F↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A8C]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_418]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_411B3C:                             ; CODE XREF: main+DDFD↑j
                mov     eax, [rbp+var_A8C]
                add     eax, 1
                mov     [rbp+var_A8C], eax

loc_411B4B:                             ; CODE XREF: main+CAF8↑j
                mov     eax, [rbp+var_A8C]
                test    eax, eax
                setz    al
                test    al, al
                jnz     loc_4103EC
                nop

loc_411B5F:                             ; CODE XREF: main+CAD6↑j
                mov     rax, [rbp+var_420]
                mov     byte ptr [rax], 1
                mov     rax, [rbp+var_420]
                add     rax, 4
                mov     eax, [rax]
                mov     eax, eax
                mov     rdx, _ZN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE[rax*8] ; obf::FunctionPtrHider<void (*)(std::string const&,int),10,0,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                lea     rax, [rbp+var_2C0]
                mov     esi, 64h ; 'd'
                mov     rdi, rax
                call    rdx ; slow_print(std::string const&,int) ; obfusheader_decoy_1(void)
                                        ; obfusheader_decoy_2(void)
                                        ; obfusheader_decoy_3(void)
                                        ; slow_print(std::string const&,int)
                lea     rax, [rbp+var_AB1]
                mov     rdi, rax
                call    _ZZ4mainENKUlvE8_clEv ; main::{lambda(void)#10}::operator()(void)
                mov     [rbp+var_260], rax
                lea     rax, [rbp+var_260]
                mov     [rbp+var_3C0], rax
                mov     rax, [rbp+var_3C0]
                movzx   eax, byte ptr [rax]
                xor     eax, 1
                test    al, al
                jz      loc_41335E
                mov     rax, [rbp+var_3C0]
                add     rax, 4
                mov     [rbp+var_3B8], rax
                mov     [rbp+var_A88], 0
                jmp     loc_41334A
; ---------------------------------------------------------------------------

loc_411BEB:                             ; CODE XREF: main+FA68↓j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_412077
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416460
                movsd   [rbp+var_3B0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_3B0]
                movsd   [rbp+var_750], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_411D42
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_411D42
                mov     eax, 8
                jmp     loc_411E3D
; ---------------------------------------------------------------------------

loc_411D42:                             ; CODE XREF: main+E403↑j main+E447↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_411E38
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_411E0D
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_411E26
; ---------------------------------------------------------------------------

loc_411E0D:                             ; CODE XREF: main+E511↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_411E26:                             ; CODE XREF: main+E51C↑j
                movsd   xmm1, [rbp+var_750]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_411E3D
; ---------------------------------------------------------------------------

loc_411E38:                             ; CODE XREF: main+E4AF↑j
                mov     eax, 0

loc_411E3D:                             ; CODE XREF: main+E44E↑j main+E547↑j
                add     r12d, eax
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416460
                movsd   [rbp+var_3A8], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_3A8]
                movsd   [rbp+var_748], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_411F55
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_411F55
                mov     eax, 8
                jmp     loc_412050
; ---------------------------------------------------------------------------

loc_411F55:                             ; CODE XREF: main+E616↑j main+E65A↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_41204B
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_412020
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_412039
; ---------------------------------------------------------------------------

loc_412020:                             ; CODE XREF: main+E724↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_412039:                             ; CODE XREF: main+E72F↑j
                movsd   xmm1, [rbp+var_748]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_412050
; ---------------------------------------------------------------------------

loc_41204B:                             ; CODE XREF: main+E6C2↑j
                mov     eax, 0

loc_412050:                             ; CODE XREF: main+E661↑j main+E75A↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_412077:                             ; CODE XREF: main+E338↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 3
                sub     eax, edx
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_412EAC
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     eax, eax
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_41256B
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416468
                movsd   [rbp+var_3A0], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_3A0]
                movsd   [rbp+var_760], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_412236
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_412236
                mov     eax, 8
                jmp     loc_412331
; ---------------------------------------------------------------------------

loc_412236:                             ; CODE XREF: main+E8F7↑j main+E93B↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_41232C
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_412301
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_41231A
; ---------------------------------------------------------------------------

loc_412301:                             ; CODE XREF: main+EA05↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_41231A:                             ; CODE XREF: main+EA10↑j
                movsd   xmm1, [rbp+var_760]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_412331
; ---------------------------------------------------------------------------

loc_41232C:                             ; CODE XREF: main+E9A3↑j
                mov     eax, 0

loc_412331:                             ; CODE XREF: main+E942↑j main+EA3B↑j
                add     r12d, eax
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416468
                movsd   [rbp+var_398], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_398]
                movsd   [rbp+var_758], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_412449
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_412449
                mov     eax, 8
                jmp     loc_412544
; ---------------------------------------------------------------------------

loc_412449:                             ; CODE XREF: main+EB0A↑j main+EB4E↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_41253F
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_412514
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_41252D
; ---------------------------------------------------------------------------

loc_412514:                             ; CODE XREF: main+EC18↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_41252D:                             ; CODE XREF: main+EC23↑j
                movsd   xmm1, [rbp+var_758]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_412544
; ---------------------------------------------------------------------------

loc_41253F:                             ; CODE XREF: main+EBB6↑j
                mov     eax, 0

loc_412544:                             ; CODE XREF: main+EB55↑j main+EC4E↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_41256B:                             ; CODE XREF: main+E82C↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_4129F7
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416470
                movsd   [rbp+var_390], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_390]
                movsd   [rbp+var_770], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_4126C2
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_4126C2
                mov     eax, 8
                jmp     loc_4127BD
; ---------------------------------------------------------------------------

loc_4126C2:                             ; CODE XREF: main+ED83↑j main+EDC7↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4127B8
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_41278D
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4127A6
; ---------------------------------------------------------------------------

loc_41278D:                             ; CODE XREF: main+EE91↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4127A6:                             ; CODE XREF: main+EE9C↑j
                movsd   xmm1, [rbp+var_770]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_4127BD
; ---------------------------------------------------------------------------

loc_4127B8:                             ; CODE XREF: main+EE2F↑j
                mov     eax, 0

loc_4127BD:                             ; CODE XREF: main+EDCE↑j main+EEC7↑j
                add     r12d, eax
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416470
                movsd   [rbp+var_388], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_388]
                movsd   [rbp+var_768], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_4128D5
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_4128D5
                mov     eax, 8
                jmp     loc_4129D0
; ---------------------------------------------------------------------------

loc_4128D5:                             ; CODE XREF: main+EF96↑j main+EFDA↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4129CB
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4129A0
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4129B9
; ---------------------------------------------------------------------------

loc_4129A0:                             ; CODE XREF: main+F0A4↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4129B9:                             ; CODE XREF: main+F0AF↑j
                movsd   xmm1, [rbp+var_768]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_4129D0
; ---------------------------------------------------------------------------

loc_4129CB:                             ; CODE XREF: main+F042↑j
                mov     eax, 0

loc_4129D0:                             ; CODE XREF: main+EFE1↑j main+F0DA↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_4129F7:                             ; CODE XREF: main+ECB8↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_412EAC
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     r12d, [rax]
                mov     eax, [rbp+var_A88]
                sub     eax, 77h ; 'w'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_380], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_380]
                movsd   [rbp+var_780], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_412B6E
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_412B6E
                mov     eax, 8
                jmp     loc_412C69
; ---------------------------------------------------------------------------

loc_412B6E:                             ; CODE XREF: main+F22F↑j main+F273↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_412C64
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_412C39
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_412C52
; ---------------------------------------------------------------------------

loc_412C39:                             ; CODE XREF: main+F33D↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_412C52:                             ; CODE XREF: main+F348↑j
                movsd   xmm1, [rbp+var_780]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_412C69
; ---------------------------------------------------------------------------

loc_412C64:                             ; CODE XREF: main+F2DB↑j
                mov     eax, 0

loc_412C69:                             ; CODE XREF: main+F27A↑j main+F373↑j
                add     r12d, eax
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     r14d, [rax]
                mov     eax, [rbp+var_A88]
                sub     eax, 77h ; 'w'
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movsd   [rbp+var_378], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_378]
                movsd   [rbp+var_778], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_412D8A
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_412D8A
                mov     eax, 8
                jmp     loc_412E85
; ---------------------------------------------------------------------------

loc_412D8A:                             ; CODE XREF: main+F44B↑j main+F48F↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_412E80
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_412E55
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_412E6E
; ---------------------------------------------------------------------------

loc_412E55:                             ; CODE XREF: main+F559↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_412E6E:                             ; CODE XREF: main+F564↑j
                movsd   xmm1, [rbp+var_778]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_412E85
; ---------------------------------------------------------------------------

loc_412E80:                             ; CODE XREF: main+F4F7↑j
                mov     eax, 0

loc_412E85:                             ; CODE XREF: main+F496↑j main+F58F↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_412EAC:                             ; CODE XREF: main+E7E2↑j main+F15B↑j
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    eax, edx
                shl     eax, 3
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      loc_41333B
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     r12d, [rax]
                movsd   xmm0, cs:qword_416478
                movsd   [rbp+var_370], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_370]
                movsd   [rbp+var_790], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_413006
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_413006
                mov     eax, 8
                jmp     loc_413101
; ---------------------------------------------------------------------------

loc_413006:                             ; CODE XREF: main+F6C7↑j main+F70B↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_4130FC
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r14d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r14d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4130D1
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4130EA
; ---------------------------------------------------------------------------

loc_4130D1:                             ; CODE XREF: main+F7D5↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4130EA:                             ; CODE XREF: main+F7E0↑j
                movsd   xmm1, [rbp+var_790]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_413101
; ---------------------------------------------------------------------------

loc_4130FC:                             ; CODE XREF: main+F773↑j
                mov     eax, 0

loc_413101:                             ; CODE XREF: main+F712↑j main+F80B↑j
                add     r12d, eax
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     r14d, [rax]
                movsd   xmm0, cs:qword_416478
                movsd   [rbp+var_368], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_368]
                movsd   [rbp+var_788], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_413219
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_413219
                mov     eax, 8
                jmp     loc_413314
; ---------------------------------------------------------------------------

loc_413219:                             ; CODE XREF: main+F8DA↑j main+F91E↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_41330F
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r15d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r15d
                movzx   edx, cs:_ZL2_8
                movsx   edi, dl
                mov     edx, 0
                div     edi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_4132E4
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_4132FD
; ---------------------------------------------------------------------------

loc_4132E4:                             ; CODE XREF: main+F9E8↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_4132FD:                             ; CODE XREF: main+F9F3↑j
                movsd   xmm1, [rbp+var_788]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_413314
; ---------------------------------------------------------------------------

loc_41330F:                             ; CODE XREF: main+F986↑j
                mov     eax, 0

loc_413314:                             ; CODE XREF: main+F925↑j main+FA1E↑j
                and     eax, r14d
                lea     ecx, [rax+rax]
                mov     eax, [rbp+var_A88]
                cdqe
                lea     rdx, ds:0[rax*4]
                mov     rax, [rbp+var_3B8]
                add     rax, rdx
                mov     edx, r12d
                sub     edx, ecx
                mov     [rax], edx

loc_41333B:                             ; CODE XREF: main+F5FC↑j
                mov     eax, [rbp+var_A88]
                add     eax, 1
                mov     [rbp+var_A88], eax

loc_41334A:                             ; CODE XREF: main+E2F7↑j
                mov     eax, [rbp+var_A88]
                test    eax, eax
                setz    al
                test    al, al
                jnz     loc_411BEB
                nop

loc_41335E:                             ; CODE XREF: main+E2D5↑j
                mov     rax, [rbp+var_3C0]
                mov     byte ptr [rax], 1
                mov     rax, [rbp+var_3C0]
                add     rax, 4
                mov     eax, [rax]
                mov     eax, eax
                mov     rdx, _ZN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE[rax*8] ; obf::FunctionPtrHider<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                lea     rax, [rbp+var_2A0]
                mov     esi, 32h ; '2'
                mov     rdi, rax
                call    rdx ; obf::FunctionPtrHider<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                lea     rdx, [rbp+var_2E0]
                lea     rax, [rbp+var_280]
                mov     rsi, rdx
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_ ; std::string::basic_string(std::string const&)
;   } // starts at 40B38F
                lea     rax, [rbp+var_260]
                mov     rdx, [rbp+var_740]
                lea     rcx, [rbp+var_280]
                mov     rsi, rcx
                mov     rdi, rax
;   try {
                call    _Z17lost_in_the_sauceNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm ; lost_in_the_sauce(std::string,ulong)
;   } // starts at 4133C4
                lea     rdx, [rbp+var_260]
                lea     rax, [rbp+var_240]
                mov     rsi, rdx
                mov     rdi, rax
;   try {
                call    __ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE ; std::operator<<<char>(std::ostream &,std::string const&)
;   } // starts at 4133DD
                lea     rax, [rbp+var_260]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                lea     rax, [rbp+var_280]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                mov     [rbp+var_A7C], 0
                mov     eax, [rbp+var_A7C]
                cmp     eax, 60h ; '`'
                ja      short loc_413422
                mov     r13d, 0
                mov     ebx, 0
                jmp     short loc_413427
; ---------------------------------------------------------------------------

loc_413422:                             ; CODE XREF: main+FB24↑j
                mov     ebx, 1

loc_413427:                             ; CODE XREF: main+FB31↑j
                lea     rax, [rbp+var_240]
                mov     rdi, rax
                call    __ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev ; std::ofstream::~ofstream()
                cmp     ebx, 1
                jnz     short loc_413442
                mov     ebx, 1
                jmp     short loc_413447
; ---------------------------------------------------------------------------

loc_413442:                             ; CODE XREF: main+FB4A↑j
                mov     ebx, 0

loc_413447:                             ; CODE XREF: main+FB51↑j
                lea     rax, [rbp+var_2A0]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                cmp     ebx, 1
                jnz     short loc_413462
                mov     ebx, 1
                jmp     short loc_413467
; ---------------------------------------------------------------------------

loc_413462:                             ; CODE XREF: main+FB6A↑j
                mov     ebx, 0

loc_413467:                             ; CODE XREF: main+FB71↑j
                lea     rax, [rbp+var_2C0]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                cmp     ebx, 1
                jnz     short loc_413482
                mov     ebx, 1
                jmp     short loc_413487
; ---------------------------------------------------------------------------

loc_413482:                             ; CODE XREF: main+FB8A↑j
                mov     ebx, 0

loc_413487:                             ; CODE XREF: main+FB91↑j
                lea     rax, [rbp+var_2E0]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                cmp     ebx, 1
                jnz     short loc_4134A2
                mov     ebx, 1
                jmp     short loc_4134A7
; ---------------------------------------------------------------------------

loc_4134A2:                             ; CODE XREF: main+FBAA↑j
                mov     ebx, 0

loc_4134A7:                             ; CODE XREF: main+FBB1↑j
                lea     rax, [rbp+var_360]
                mov     rdi, rax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev ; std::vector<std::string>::~vector()
                cmp     ebx, 1
                jnz     short loc_4134C2
                mov     ebx, 1
                jmp     short loc_4134C7
; ---------------------------------------------------------------------------

loc_4134C2:                             ; CODE XREF: main+FBCA↑j
                mov     ebx, 0

loc_4134C7:                             ; CODE XREF: main+FBD1↑j
                lea     rax, [rbp+var_300]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                cmp     ebx, 1
                jnz     short loc_4134E2
                mov     ebx, 1
                jmp     short loc_4134E7
; ---------------------------------------------------------------------------

loc_4134E2:                             ; CODE XREF: main+FBEA↑j
                mov     ebx, 0

loc_4134E7:                             ; CODE XREF: main+FBF1↑j
                lea     rax, [rbp+var_320]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                cmp     ebx, 1
                jnz     short loc_413501
                mov     r13d, 0

loc_413501:                             ; CODE XREF: main+FC0A↑j
                mov     eax, r13d
                mov     rdx, [rbp+var_38]
                sub     rdx, fs:28h
                jz      loc_41375E
                jmp     loc_413759
; ---------------------------------------------------------------------------
;   cleanup() // owned by 405184
                endbr64
                mov     rbx, rax
                lea     rax, [rbp+var_360]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                mov     rax, rbx
                mov     rdi, rax        ; struct _Unwind_Exception *
                call    __Unwind_Resume
; ---------------------------------------------------------------------------
;   cleanup() // owned by 406961
                endbr64
                mov     rbx, rax
                lea     rax, [rbp+var_360]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                jmp     loc_41373F
; ---------------------------------------------------------------------------
;   cleanup() // owned by 4069C2
                endbr64
                mov     rbx, rax
                lea     rax, [rbp+var_240]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                jmp     short loc_413577
; ---------------------------------------------------------------------------
;   cleanup() // owned by 4069A9
                endbr64
                mov     rbx, rax

loc_413577:                             ; CODE XREF: main+FC7F↑j
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                jmp     loc_413721
; ---------------------------------------------------------------------------
;   cleanup() // owned by 406A23
                endbr64
                mov     rbx, rax
                lea     rax, [rbp+var_240]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                jmp     short loc_4135AA
; ---------------------------------------------------------------------------
;   cleanup() // owned by 406A0A
                endbr64
                mov     rbx, rax

loc_4135AA:                             ; CODE XREF: main+FCB2↑j
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                jmp     loc_413721
; ---------------------------------------------------------------------------
;   cleanup() // owned by 406A84
                endbr64
                mov     rbx, rax
                lea     rax, [rbp+var_240]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                jmp     short loc_4135DD
; ---------------------------------------------------------------------------
;   cleanup() // owned by 406A6B
                endbr64
                mov     rbx, rax

loc_4135DD:                             ; CODE XREF: main+FCE5↑j
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                jmp     loc_413721
; ---------------------------------------------------------------------------
;   cleanup() // owned by 406AE5
                endbr64
                mov     rbx, rax
                lea     rax, [rbp+var_240]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                jmp     short loc_413610
; ---------------------------------------------------------------------------
;   cleanup() // owned by 406ACC
                endbr64
                mov     rbx, rax

loc_413610:                             ; CODE XREF: main+FD18↑j
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                jmp     loc_413721
; ---------------------------------------------------------------------------
;   cleanup() // owned by 406B46
                endbr64
                mov     rbx, rax
                lea     rax, [rbp+var_240]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                jmp     short loc_413643
; ---------------------------------------------------------------------------
;   cleanup() // owned by 406B2D
                endbr64
                mov     rbx, rax

loc_413643:                             ; CODE XREF: main+FD4B↑j
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                jmp     loc_413721
; ---------------------------------------------------------------------------
;   cleanup() // owned by 408332
                endbr64
                mov     rbx, rax
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                jmp     loc_413721
; ---------------------------------------------------------------------------
;   cleanup() // owned by 409B0F
                endbr64
                mov     rbx, rax
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                jmp     loc_413712
; ---------------------------------------------------------------------------
;   cleanup() // owned by 40B2EC
                endbr64
                mov     rbx, rax
                lea     rax, [rbp+var_748]
                mov     rdi, rax
                call    __ZNSaIcED1Ev   ; std::allocator<char>::~allocator()
                jmp     short loc_413703
; ---------------------------------------------------------------------------
;   cleanup() // owned by 4133DD
                endbr64
                mov     rbx, rax
                lea     rax, [rbp+var_260]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                jmp     short loc_4136C4
; ---------------------------------------------------------------------------
;   cleanup() // owned by 4133C4
                endbr64
                mov     rbx, rax

loc_4136C4:                             ; CODE XREF: main+FDCC↑j
                lea     rax, [rbp+var_280]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                jmp     short loc_4136DC
; ---------------------------------------------------------------------------
;   cleanup() // owned by 40B38F
                endbr64
                mov     rbx, rax

loc_4136DC:                             ; CODE XREF: main+FDE4↑j
                lea     rax, [rbp+var_240]
                mov     rdi, rax
                call    __ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev ; std::ofstream::~ofstream()
                jmp     short loc_4136F4
; ---------------------------------------------------------------------------
;   cleanup() // owned by 40B319
                endbr64
                mov     rbx, rax

loc_4136F4:                             ; CODE XREF: main+FDFC↑j
                lea     rax, [rbp+var_2A0]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()

loc_413703:                             ; CODE XREF: main+FDB4↑j
                lea     rax, [rbp+var_2C0]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()

loc_413712:                             ; CODE XREF: main+FD99↑j
                lea     rax, [rbp+var_2E0]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()

loc_413721:                             ; CODE XREF: main+FC97↑j main+FCCA↑j ...
                lea     rax, [rbp+var_360]
                mov     rdi, rax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev ; std::vector<std::string>::~vector()
                lea     rax, [rbp+var_300]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()

loc_41373F:                             ; CODE XREF: main+FC64↑j
                lea     rax, [rbp+var_320]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                mov     rax, rbx
                mov     rdi, rax        ; struct _Unwind_Exception *
                call    __Unwind_Resume
; ---------------------------------------------------------------------------

loc_413759:                             ; CODE XREF: main+FC28↑j
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

loc_41375E:                             ; CODE XREF: main+FC22↑j
                add     rsp, 0A98h
                pop     rbx
                pop     r12
                pop     r13
                pop     r14
                pop     r15
                pop     rbp
                retn
; } // starts at 4038EF
main            endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall __static_initialization_and_destruction_0(int, int)
_Z41__static_initialization_and_destruction_0ii proc near
                                        ; CODE XREF: _GLOBAL__sub_I__Z29ive_played_these_games_beforev+12↓p

var_8           = dword ptr -8
var_4           = dword ptr -4

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_4], edi
                mov     [rbp+var_8], esi
                cmp     [rbp+var_4], 1
                jnz     loc_41390B
                cmp     [rbp+var_8], 0FFFFh
                jnz     loc_41390B
                mov     edi, offset _ZStL8__ioinit ; this
                call    __ZNSt8ios_base4InitC1Ev ; std::ios_base::Init::Init(void)
                mov     edx, offset __dso_handle ; lpdso_handle
                mov     esi, offset _ZStL8__ioinit ; obj
                mov     edi, offset __ZNSt8ios_base4InitD1Ev ; lpfunc
                call    ___cxa_atexit
                mov     eax, offset _ZGVN3obf16FunctionPtrHiderIPFvvELi10ELi6EXadL_Z5abortEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE ; `guard variable for'obf::FunctionPtrHider<void (*)(void),10,6,&(abort),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                movzx   eax, byte ptr [rax]
                test    al, al
                jnz     short loc_4137FB
                mov     eax, offset _ZGVN3obf16FunctionPtrHiderIPFvvELi10ELi6EXadL_Z5abortEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE ; `guard variable for'obf::FunctionPtrHider<void (*)(void),10,6,&(abort),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                mov     byte ptr [rax], 1
                call    _ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi0EEET_v ; obf::select_func<void (*)(void),10,6,&(abort),0>(void)
                mov     cs:_ZN3obf16FunctionPtrHiderIPFvvELi10ELi6EXadL_Z5abortEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE, rax ; obf::FunctionPtrHider<void (*)(void),10,6,&(abort),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                call    _ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi4EEET_v ; obf::select_func<void (*)(void),10,6,&(abort),4>(void)
                mov     cs:qword_41A200, rax
                call    _ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi8EEET_v ; obf::select_func<void (*)(void),10,6,&(abort),8>(void)
                mov     cs:qword_41A220, rax
                call    _ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi9EEET_v ; obf::select_func<void (*)(void),10,6,&(abort),9>(void)
                mov     cs:qword_41A228, rax

loc_4137FB:                             ; CODE XREF: __static_initialization_and_destruction_0(int,int)+51↑j
                mov     eax, offset _ZGVN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE ; `guard variable for'obf::FunctionPtrHider<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                movzx   eax, byte ptr [rax]
                test    al, al
                jnz     short loc_41383F
                mov     eax, offset _ZGVN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE ; `guard variable for'obf::FunctionPtrHider<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                mov     byte ptr [rax], 1
                call    _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi0EEET_v ; obf::select_func<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),0>(void)
                mov     cs:_ZN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE, rax ; obf::FunctionPtrHider<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                call    _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi4EEET_v ; obf::select_func<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),4>(void)
                mov     cs:qword_41A260, rax
                call    _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi6EEET_v ; obf::select_func<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),6>(void)
                mov     cs:qword_41A270, rax
                call    _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi9EEET_v ; obf::select_func<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),9>(void)
                mov     cs:qword_41A288, rax

loc_41383F:                             ; CODE XREF: __static_initialization_and_destruction_0(int,int)+95↑j
                mov     eax, offset _ZGVN3obf16FunctionPtrHiderIPFvvELi10ELi4EXadL_Z5abortEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE ; `guard variable for'obf::FunctionPtrHider<void (*)(void),10,4,&(abort),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                movzx   eax, byte ptr [rax]
                test    al, al
                jnz     short loc_413883
                mov     eax, offset _ZGVN3obf16FunctionPtrHiderIPFvvELi10ELi4EXadL_Z5abortEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE ; `guard variable for'obf::FunctionPtrHider<void (*)(void),10,4,&(abort),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                mov     byte ptr [rax], 1
                call    _ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi0EEET_v ; obf::select_func<void (*)(void),10,4,&(abort),0>(void)
                mov     cs:_ZN3obf16FunctionPtrHiderIPFvvELi10ELi4EXadL_Z5abortEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE, rax ; obf::FunctionPtrHider<void (*)(void),10,4,&(abort),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                call    _ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi6EEET_v ; obf::select_func<void (*)(void),10,4,&(abort),6>(void)
                mov     cs:qword_41A2D0, rax
                call    _ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi8EEET_v ; obf::select_func<void (*)(void),10,4,&(abort),8>(void)
                mov     cs:qword_41A2E0, rax
                call    _ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi9EEET_v ; obf::select_func<void (*)(void),10,4,&(abort),9>(void)
                mov     cs:qword_41A2E8, rax

loc_413883:                             ; CODE XREF: __static_initialization_and_destruction_0(int,int)+D9↑j
                mov     eax, offset _ZGVN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE ; `guard variable for'obf::FunctionPtrHider<void (*)(std::string const&,int),10,0,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                movzx   eax, byte ptr [rax]
                test    al, al
                jnz     short loc_4138C7
                mov     eax, offset _ZGVN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE ; `guard variable for'obf::FunctionPtrHider<void (*)(std::string const&,int),10,0,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                mov     byte ptr [rax], 1
                call    _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi4EEET_v ; obf::select_func<void (*)(std::string const&,int),10,0,&(slow_print(std::string const&,int)),4>(void)
                mov     cs:qword_41A320, rax
                call    _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi6EEET_v ; obf::select_func<void (*)(std::string const&,int),10,0,&(slow_print(std::string const&,int)),6>(void)
                mov     cs:qword_41A330, rax
                call    _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi8EEET_v ; obf::select_func<void (*)(std::string const&,int),10,0,&(slow_print(std::string const&,int)),8>(void)
                mov     cs:qword_41A340, rax
                call    _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi9EEET_v ; obf::select_func<void (*)(std::string const&,int),10,0,&(slow_print(std::string const&,int)),9>(void)
                mov     cs:qword_41A348, rax

loc_4138C7:                             ; CODE XREF: __static_initialization_and_destruction_0(int,int)+11D↑j
                mov     eax, offset _ZGVN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE ; `guard variable for'obf::FunctionPtrHider<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                movzx   eax, byte ptr [rax]
                test    al, al
                jnz     short loc_41390B
                mov     eax, offset _ZGVN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE ; `guard variable for'obf::FunctionPtrHider<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                mov     byte ptr [rax], 1
                call    _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi0EEET_v ; obf::select_func<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),0>(void)
                mov     cs:_ZN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE, rax ; obf::FunctionPtrHider<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr
                call    _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi4EEET_v ; obf::select_func<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),4>(void)
                mov     cs:qword_41A380, rax
                call    _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi8EEET_v ; obf::select_func<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),8>(void)
                mov     cs:qword_41A3A0, rax
                call    _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi9EEET_v ; obf::select_func<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),9>(void)
                mov     cs:qword_41A3A8, rax

loc_41390B:                             ; CODE XREF: __static_initialization_and_destruction_0(int,int)+16↑j
                                        ; __static_initialization_and_destruction_0(int,int)+23↑j ...
                nop
                leave
                retn
; } // starts at 413770
_Z41__static_initialization_and_destruction_0ii endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

_GLOBAL__sub_I__Z29ive_played_these_games_beforev proc near
                                        ; DATA XREF: .init_array:0000000000419DE0↓o
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     esi, 0FFFFh     ; int
                mov     edi, 1          ; int
                call    _Z41__static_initialization_and_destruction_0ii ; __static_initialization_and_destruction_0(int,int)
                pop     rbp
                retn
; } // starts at 41390E
_GLOBAL__sub_I__Z29ive_played_these_games_beforev endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall operator new(unsigned __int64, void *)
                public _ZnwmPv ; weak
_ZnwmPv         proc near               ; CODE XREF: __gnu_cxx::new_allocator<std::string>::construct<std::string,std::string>(std::string *,std::string &&)+34↓p
                                        ; std::_Construct<std::string,std::string>(std::string *,std::string &&)+30↓p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_10]
                pop     rbp
                retn
; } // starts at 413927
_ZnwmPv         endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration<long, std::ratio<1l, 1000000000l>>::count(void)const
                public _ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv ; weak
_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv proc near
                                        ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+91↓p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rax, [rax]
                pop     rbp
                retn
; } // starts at 41393E
_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration<long, std::ratio<1l, 1000000000l>>::duration<long, void>(long const&)
                public _ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_ ; weak
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_ proc near
                                        ; CODE XREF: std::chrono::__duration_cast_impl<std::chrono::duration<long,std::ratio<1l,1000000000l>>,std::ratio<1000000l,1l>,long,false,true>::__cast<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+44↓p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_10]
                mov     rdx, [rax]
                mov     rax, [rbp+var_8]
                mov     [rax], rdx
                nop
                pop     rbp
                retn
; } // starts at 413954
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration_values<long>::zero(void)
                public _ZNSt6chrono15duration_valuesIlE4zeroEv ; weak
_ZNSt6chrono15duration_valuesIlE4zeroEv proc near
                                        ; CODE XREF: std::chrono::duration<long,std::ratio<1l,1000l>>::zero(void)+1B↓p
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     eax, 0
                pop     rbp
                retn
; } // starts at 413975
_ZNSt6chrono15duration_valuesIlE4zeroEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; slow_print(std::string const&, int)
                public _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; weak
_Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi proc near
                                        ; CODE XREF: main+E2A0↑p
                                        ; DATA XREF: obf::select_func<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),0>(void)+6B↓o ...

var_5C          = dword ptr -5Ch
var_58          = qword ptr -58h
var_4D          = byte ptr -4Dh
var_4C          = dword ptr -4Ch
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = byte ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    r12
                push    rbx
                sub     rsp, 50h
                mov     [rbp+var_58], rdi
                mov     [rbp+var_5C], esi
                mov     rax, fs:28h
                mov     [rbp+var_18], rax
                xor     eax, eax
                mov     [rbp+var_4C], 0
                jmp     loc_413A54
; ---------------------------------------------------------------------------

loc_4139B5:                             ; CODE XREF: slow_print(std::string const&,int)+339↓j
                mov     rax, [rbp+var_58]
                mov     [rbp+var_28], rax
                mov     rax, [rbp+var_28]
                mov     rdi, rax
                call    __ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv ; std::string::begin(void)
                mov     [rbp+var_48], rax
                mov     rax, [rbp+var_28]
                mov     rdi, rax
                call    __ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv ; std::string::end(void)
                mov     [rbp+var_40], rax
                jmp     short loc_413A39
; ---------------------------------------------------------------------------

loc_4139DF:                             ; CODE XREF: slow_print(std::string const&,int)+CA↓j
                lea     rax, [rbp+var_48]
                mov     rdi, rax
                call    _ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv ; __gnu_cxx::__normal_iterator<char const*,std::string>::operator*(void)
                movzx   eax, byte ptr [rax]
                mov     [rbp+var_4D], al
                lea     rdx, [rbp+var_5C]
                lea     rax, [rbp+var_38]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IivEERKT_ ; std::chrono::duration<long,std::ratio<1l,1000l>>::duration<int,void>(int const&)
                lea     rax, [rbp+var_38]
                mov     rdi, rax
                call    _ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000EEEEvRKNSt6chrono8durationIT_T0_EE ; std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)
                movsx   eax, [rbp+var_4D]
                mov     esi, eax
                mov     edi, offset _ZSt4cout@GLIBCXX_3_4
                call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c ; std::operator<<<std::char_traits<char>>(std::ostream &,char)
                mov     esi, offset __ZSt5flushIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_ ; std::flush<char,std::char_traits<char>>(std::ostream &)
                mov     rdi, rax
                call    __ZNSolsEPFRSoS_E ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
                lea     rax, [rbp+var_48]
                mov     rdi, rax
                call    _ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv ; __gnu_cxx::__normal_iterator<char const*,std::string>::operator++(void)

loc_413A39:                             ; CODE XREF: slow_print(std::string const&,int)+59↑j
                lea     rdx, [rbp+var_40]
                lea     rax, [rbp+var_48]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZN9__gnu_cxxneIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_ ; __gnu_cxx::operator!=<char const*,std::string>(__gnu_cxx::__normal_iterator<char const*,std::string> const&,__gnu_cxx::__normal_iterator<char const*,std::string> const&)
                test    al, al
                jnz     short loc_4139DF
                add     [rbp+var_4C], 1

loc_413A54:                             ; CODE XREF: slow_print(std::string const&,int)+2C↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_413ABD
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_413AD6
; ---------------------------------------------------------------------------

loc_413ABD:                             ; CODE XREF: slow_print(std::string const&,int)+12C↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_413AD6:                             ; CODE XREF: slow_print(std::string const&,int)+137↑j
                movsd   [rbp+var_20], xmm0
                movzx   eax, cs:_ZL2_7
                movsx   eax, al
                pxor    xmm1, xmm1
                cvtsi2sd xmm1, eax
                movzx   eax, cs:_ZL2_3
                movsx   eax, al
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, eax
                movapd  xmm2, xmm0
                addsd   xmm2, xmm0
                subsd   xmm1, xmm2
                movapd  xmm0, xmm1
                mulsd   xmm0, [rbp+var_20]
                movsd   [rbp+var_30], xmm0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    eax, ebx
                shl     eax, 2
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      short loc_413BBD
                movzx   eax, cs:_ZL2_3
                movsx   ebx, al
                call    _ZL3__6v        ; __6(void)
                movsx   eax, al
                add     eax, ebx
                mov     ebx, eax
                call    _ZL3__3v        ; __3(void)
                movsx   edx, al
                movzx   eax, cs:_ZL2_0
                movsx   eax, al
                imul    edx, eax
                mov     eax, edx
                add     eax, eax
                add     eax, edx
                add     ebx, eax
                call    _ZL3__9v        ; __9(void)
                movsx   eax, al
                cmp     ebx, eax
                setnz   al
                test    al, al
                jz      short loc_413BBD
                mov     eax, 8
                jmp     loc_413CB5
; ---------------------------------------------------------------------------

loc_413BBD:                             ; CODE XREF: slow_print(std::string const&,int)+1E9↑j
                                        ; slow_print(std::string const&,int)+22D↑j
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   ecx, dl
                mov     edx, 0
                div     ecx
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                cmp     edx, eax
                setnz   al
                test    al, al
                jz      loc_413CB0
                movzx   eax, cs:_ZL2_9
                movsx   ebx, al
                call    _ZL3__7v        ; __7(void)
                movsx   eax, al
                add     eax, ebx
                mov     r12d, eax
                call    _ZL3__2v        ; __2(void)
                movsx   ebx, al
                call    _ZL3__0v        ; __0(void)
                movsx   eax, al
                imul    ebx, eax
                mov     edx, ebx
                mov     eax, edx
                shl     eax, 2
                add     eax, edx
                add     eax, eax
                add     eax, r12d
                movzx   edx, cs:_ZL2_8
                movsx   esi, dl
                mov     edx, 0
                div     esi
                mov     edx, eax
                movzx   eax, cs:_ZL2_1
                movsx   eax, al
                sub     edx, eax
                mov     eax, edx
                test    rax, rax
                js      short loc_413C88
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rax
                jmp     short loc_413CA1
; ---------------------------------------------------------------------------

loc_413C88:                             ; CODE XREF: slow_print(std::string const&,int)+2F7↑j
                mov     rdx, rax
                shr     rdx, 1
                and     eax, 1
                or      rdx, rax
                pxor    xmm0, xmm0
                cvtsi2sd xmm0, rdx
                addsd   xmm0, xmm0

loc_413CA1:                             ; CODE XREF: slow_print(std::string const&,int)+302↑j
                movsd   xmm1, [rbp+var_30]
                mulsd   xmm0, xmm1
                cvttsd2si eax, xmm0
                jmp     short loc_413CB5
; ---------------------------------------------------------------------------

loc_413CB0:                             ; CODE XREF: slow_print(std::string const&,int)+295↑j
                mov     eax, 0

loc_413CB5:                             ; CODE XREF: slow_print(std::string const&,int)+234↑j
                                        ; slow_print(std::string const&,int)+32A↑j
                cmp     [rbp+var_4C], eax
                setl    al
                test    al, al
                jnz     loc_4139B5
                nop
                mov     rax, [rbp+var_18]
                sub     rax, fs:28h
                jz      short loc_413CD8
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

loc_413CD8:                             ; CODE XREF: slow_print(std::string const&,int)+34D↑j
                add     rsp, 50h
                pop     rbx
                pop     r12
                pop     rbp
                retn
; } // starts at 413984
_Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::_Vector_base<std::string>::_Vector_impl::~_Vector_impl()
                public _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev ; weak
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev proc near
                                        ; CODE XREF: std::_Vector_base<std::string>::~_Vector_base()+49↓p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev ; std::allocator<std::string>::~allocator()
                nop
                leave
                retn
; } // starts at 413CE2
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::_Vector_base<std::string>::_Vector_base(void)
                public _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev ; weak
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev proc near
                                        ; CODE XREF: std::vector<std::string>::vector(void)+17↓p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev ; std::_Vector_base<std::string>::_Vector_impl::_Vector_impl(void)
                nop
                leave
                retn
; } // starts at 413D02
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall std::vector<std::string>::vector(_QWORD)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev proc near
                                        ; CODE XREF: main+3090↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev ; std::_Vector_base<std::string>::_Vector_base(void)
                nop
                leave
                retn
; } // starts at 413D22
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(void) obf::select_func<void (*)(void), 10, 6, &(abort), 0>(void)
                public _ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi0EEET_v ; weak
_ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi0EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+5B↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _abort
                mov     rax, [rbp+var_60]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_413DCC
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_413DCC:                          ; CODE XREF: obf::select_func<void (*)(void),10,6,&(abort),0>(void)+84↑j
                leave
                retn
; } // starts at 413D41
_ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi0EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(void) obf::select_func<void (*)(void), 10, 6, &(abort), 4>(void)
                public _ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi4EEET_v ; weak
_ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi4EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+67↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _abort
                mov     rax, [rbp+var_40]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_413E59
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_413E59:                          ; CODE XREF: obf::select_func<void (*)(void),10,6,&(abort),4>(void)+84↑j
                leave
                retn
; } // starts at 413DCE
_ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi4EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(void) obf::select_func<void (*)(void), 10, 6, &(abort), 8>(void)
                public _ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi8EEET_v ; weak
_ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi8EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+73↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _abort
                mov     rax, [rbp+var_20]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_413EE6
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_413EE6:                          ; CODE XREF: obf::select_func<void (*)(void),10,6,&(abort),8>(void)+84↑j
                leave
                retn
; } // starts at 413E5B
_ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi8EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(void) obf::select_func<void (*)(void), 10, 6, &(abort), 9>(void)
                public _ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi9EEET_v ; weak
_ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi9EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+7F↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _abort
                mov     rax, [rbp+var_18]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_413F73
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_413F73:                          ; CODE XREF: obf::select_func<void (*)(void),10,6,&(abort),9>(void)+84↑j
                leave
                retn
; } // starts at 413EE8
_ZN3obf11select_funcIPFvvELi10ELi6EXadL_Z5abortEELi9EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(std::string const&, int) obf::select_func<void (*)(std::string const&, int), 10, 8, &(slow_print(std::string const&, int)), 0>(void)
                public _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi0EEET_v ; weak
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi0EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+9F↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                mov     rax, [rbp+var_60]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_414000
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_414000:                          ; CODE XREF: obf::select_func<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),0>(void)+84↑j
                leave
                retn
; } // starts at 413F75
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi0EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(std::string const&, int) obf::select_func<void (*)(std::string const&, int), 10, 8, &(slow_print(std::string const&, int)), 4>(void)
                public _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi4EEET_v ; weak
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi4EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+AB↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                mov     rax, [rbp+var_40]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_41408D
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_41408D:                          ; CODE XREF: obf::select_func<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),4>(void)+84↑j
                leave
                retn
; } // starts at 414002
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi4EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(std::string const&, int) obf::select_func<void (*)(std::string const&, int), 10, 8, &(slow_print(std::string const&, int)), 6>(void)
                public _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi6EEET_v ; weak
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi6EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+B7↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                mov     rax, [rbp+var_30]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_41411A
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_41411A:                          ; CODE XREF: obf::select_func<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),6>(void)+84↑j
                leave
                retn
; } // starts at 41408F
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi6EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(std::string const&, int) obf::select_func<void (*)(std::string const&, int), 10, 8, &(slow_print(std::string const&, int)), 9>(void)
                public _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi9EEET_v ; weak
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi9EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+C3↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                mov     rax, [rbp+var_18]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_4141A7
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_4141A7:                          ; CODE XREF: obf::select_func<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),9>(void)+84↑j
                leave
                retn
; } // starts at 41411C
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEELi9EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(void) obf::select_func<void (*)(void), 10, 4, &(abort), 0>(void)
                public _ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi0EEET_v ; weak
_ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi0EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+E3↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _abort
                mov     rax, [rbp+var_60]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_414234
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_414234:                          ; CODE XREF: obf::select_func<void (*)(void),10,4,&(abort),0>(void)+84↑j
                leave
                retn
; } // starts at 4141A9
_ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi0EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(void) obf::select_func<void (*)(void), 10, 4, &(abort), 6>(void)
                public _ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi6EEET_v ; weak
_ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi6EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+EF↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _abort
                mov     rax, [rbp+var_30]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_4142C1
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_4142C1:                          ; CODE XREF: obf::select_func<void (*)(void),10,4,&(abort),6>(void)+84↑j
                leave
                retn
; } // starts at 414236
_ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi6EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(void) obf::select_func<void (*)(void), 10, 4, &(abort), 8>(void)
                public _ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi8EEET_v ; weak
_ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi8EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+FB↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _abort
                mov     rax, [rbp+var_20]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_41434E
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_41434E:                          ; CODE XREF: obf::select_func<void (*)(void),10,4,&(abort),8>(void)+84↑j
                leave
                retn
; } // starts at 4142C3
_ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi8EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(void) obf::select_func<void (*)(void), 10, 4, &(abort), 9>(void)
                public _ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi9EEET_v ; weak
_ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi9EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+107↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _abort
                mov     rax, [rbp+var_18]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_4143DB
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_4143DB:                          ; CODE XREF: obf::select_func<void (*)(void),10,4,&(abort),9>(void)+84↑j
                leave
                retn
; } // starts at 414350
_ZN3obf11select_funcIPFvvELi10ELi4EXadL_Z5abortEELi9EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(std::string const&, int) obf::select_func<void (*)(std::string const&, int), 10, 0, &(slow_print(std::string const&, int)), 4>(void)
                public _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi4EEET_v ; weak
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi4EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+127↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                mov     rax, [rbp+var_40]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_414468
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_414468:                          ; CODE XREF: obf::select_func<void (*)(std::string const&,int),10,0,&(slow_print(std::string const&,int)),4>(void)+84↑j
                leave
                retn
; } // starts at 4143DD
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi4EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(std::string const&, int) obf::select_func<void (*)(std::string const&, int), 10, 0, &(slow_print(std::string const&, int)), 6>(void)
                public _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi6EEET_v ; weak
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi6EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+133↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                mov     rax, [rbp+var_30]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_4144F5
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_4144F5:                          ; CODE XREF: obf::select_func<void (*)(std::string const&,int),10,0,&(slow_print(std::string const&,int)),6>(void)+84↑j
                leave
                retn
; } // starts at 41446A
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi6EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(std::string const&, int) obf::select_func<void (*)(std::string const&, int), 10, 0, &(slow_print(std::string const&, int)), 8>(void)
                public _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi8EEET_v ; weak
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi8EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+13F↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                mov     rax, [rbp+var_20]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_414582
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_414582:                          ; CODE XREF: obf::select_func<void (*)(std::string const&,int),10,0,&(slow_print(std::string const&,int)),8>(void)+84↑j
                leave
                retn
; } // starts at 4144F7
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi8EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(std::string const&, int) obf::select_func<void (*)(std::string const&, int), 10, 0, &(slow_print(std::string const&, int)), 9>(void)
                public _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi9EEET_v ; weak
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi9EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+14B↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                mov     rax, [rbp+var_18]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_41460F
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_41460F:                          ; CODE XREF: obf::select_func<void (*)(std::string const&,int),10,0,&(slow_print(std::string const&,int)),9>(void)+84↑j
                leave
                retn
; } // starts at 414584
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEELi9EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(std::string const&, int) obf::select_func<void (*)(std::string const&, int), 10, 6, &(slow_print(std::string const&, int)), 0>(void)
                public _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi0EEET_v ; weak
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi0EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+16B↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                mov     rax, [rbp+var_60]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_41469C
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_41469C:                          ; CODE XREF: obf::select_func<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),0>(void)+84↑j
                leave
                retn
; } // starts at 414611
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi0EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(std::string const&, int) obf::select_func<void (*)(std::string const&, int), 10, 6, &(slow_print(std::string const&, int)), 4>(void)
                public _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi4EEET_v ; weak
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi4EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+177↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                mov     rax, [rbp+var_40]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_414729
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_414729:                          ; CODE XREF: obf::select_func<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),4>(void)+84↑j
                leave
                retn
; } // starts at 41469E
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi4EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(std::string const&, int) obf::select_func<void (*)(std::string const&, int), 10, 6, &(slow_print(std::string const&, int)), 8>(void)
                public _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi8EEET_v ; weak
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi8EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+183↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                mov     rax, [rbp+var_20]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_4147B6
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_4147B6:                          ; CODE XREF: obf::select_func<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),8>(void)+84↑j
                leave
                retn
; } // starts at 41472B
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi8EEET_v endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void (*)(std::string const&, int) obf::select_func<void (*)(std::string const&, int), 10, 6, &(slow_print(std::string const&, int)), 9>(void)
                public _ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi9EEET_v ; weak
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi9EEET_v proc near
                                        ; CODE XREF: __static_initialization_and_destruction_0(int,int)+18F↑p

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_60], 3
                mov     [rbp+var_58], offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                mov     [rbp+var_50], offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                mov     [rbp+var_48], offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                mov     [rbp+var_40], 8
                mov     [rbp+var_38], 0
                mov     [rbp+var_30], 9
                mov     [rbp+var_28], offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                mov     [rbp+var_20], 4
                mov     [rbp+var_18], 9
                mov     [rbp+var_10], offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                mov     rax, [rbp+var_18]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_414843
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_414843:                          ; CODE XREF: obf::select_func<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),9>(void)+84↑j
                leave
                retn
; } // starts at 4147B8
_ZN3obf11select_funcIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEELi9EEET_v endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration<long, std::ratio<1l, 1l>>::count(void)const
                public _ZNKSt6chrono8durationIlSt5ratioILl1ELl1EEE5countEv ; weak
_ZNKSt6chrono8durationIlSt5ratioILl1ELl1EEE5countEv proc near
                                        ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+81↓p
                                        ; std::chrono::__duration_cast_impl<std::chrono::duration<long,std::ratio<1l,1000l>>,std::ratio<1000l,1l>,long,false,true>::__cast<long,std::ratio<1l,1l>>(std::chrono::duration<long,std::ratio<1l,1l>> const&)+26↓p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rax, [rax]
                pop     rbp
                retn
; } // starts at 414846
_ZNKSt6chrono8durationIlSt5ratioILl1ELl1EEE5countEv endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration<long, std::ratio<1l, 1l>>::duration<long, void>(long const&)
                public _ZNSt6chrono8durationIlSt5ratioILl1ELl1EEEC2IlvEERKT_ ; weak
_ZNSt6chrono8durationIlSt5ratioILl1ELl1EEEC2IlvEERKT_ proc near
                                        ; CODE XREF: std::chrono::__duration_cast_impl<std::chrono::duration<long,std::ratio<1l,1l>>,std::ratio<1l,1000l>,long,true,false>::__cast<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+61↓p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_10]
                mov     rdx, [rax]
                mov     rax, [rbp+var_8]
                mov     [rax], rdx
                nop
                pop     rbp
                retn
; } // starts at 41485C
_ZNSt6chrono8durationIlSt5ratioILl1ELl1EEEC2IlvEERKT_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; bool __gnu_cxx::operator!=<char const*, std::string>(__gnu_cxx::__normal_iterator<char const*, std::string> const&, __gnu_cxx::__normal_iterator<char const*, std::string> const&)
                public _ZN9__gnu_cxxneIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_ ; weak
_ZN9__gnu_cxxneIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_ proc near
                                        ; CODE XREF: slow_print(std::string const&,int)+C3↑p

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 18h
                mov     [rbp+var_18], rdi
                mov     [rbp+var_20], rsi
                mov     rax, [rbp+var_18]
                mov     rdi, rax
                call    _ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv ; __gnu_cxx::__normal_iterator<char const*,std::string>::base(void)
                mov     rbx, [rax]
                mov     rax, [rbp+var_20]
                mov     rdi, rax
                call    _ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv ; __gnu_cxx::__normal_iterator<char const*,std::string>::base(void)
                mov     rax, [rax]
                cmp     rbx, rax
                setnz   al
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 41487D
_ZN9__gnu_cxxneIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __gnu_cxx::__normal_iterator<char const*, std::string>::operator++(void)
                public _ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv ; weak
_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv proc near
                                        ; CODE XREF: slow_print(std::string const&,int)+B0↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rax, [rax]
                lea     rdx, [rax+1]
                mov     rax, [rbp+var_8]
                mov     [rax], rdx
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 4148BC
_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __gnu_cxx::__normal_iterator<char const*, std::string>::operator*(void)const
                public _ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv ; weak
_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv proc near
                                        ; CODE XREF: slow_print(std::string const&,int)+62↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rax, [rax]
                pop     rbp
                retn
; } // starts at 4148E0
_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration<long, std::ratio<1l, 1000l>>::duration<int, void>(int const&)
                public _ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IivEERKT_ ; weak
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IivEERKT_ proc near
                                        ; CODE XREF: slow_print(std::string const&,int)+7B↑p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_10]
                mov     eax, [rax]
                movsxd  rdx, eax
                mov     rax, [rbp+var_8]
                mov     [rax], rdx
                nop
                pop     rbp
                retn
; } // starts at 4148F6
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IivEERKT_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; bool std::chrono::operator<=<long, std::ratio<1l, 1000l>, long, std::ratio<1l, 1000l>>(std::chrono::duration<long, std::ratio<1l, 1000l>> const&, std::chrono::duration<long, std::ratio<1l, 1000l>> const&)
                public _ZNSt6chronoleIlSt5ratioILl1ELl1000EElS2_EEbRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE ; weak
_ZNSt6chronoleIlSt5ratioILl1ELl1000EElS2_EEbRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE proc near
                                        ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+36↓p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rdx, [rbp+var_8]
                mov     rax, [rbp+var_10]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt6chronoltIlSt5ratioILl1ELl1000EElS2_EEbRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE ; std::chrono::operator<<long,std::ratio<1l,1000l>,long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&,std::chrono::duration<long,std::ratio<1l,1000l>> const&)
                xor     eax, 1
                leave
                retn
; } // starts at 414919
_ZNSt6chronoleIlSt5ratioILl1ELl1000EElS2_EEbRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration<long, std::ratio<1l, 1000l>>::zero(void)
                public _ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEE4zeroEv ; weak
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEE4zeroEv proc near
                                        ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+1F↓p

var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                call    _ZNSt6chrono15duration_valuesIlE4zeroEv ; std::chrono::duration_values<long>::zero(void)
                mov     [rbp+var_18], rax
                lea     rdx, [rbp+var_18]
                lea     rax, [rbp+var_10]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IlvEERKT_ ; std::chrono::duration<long,std::ratio<1l,1000l>>::duration<long,void>(long const&)
                mov     rax, [rbp+var_10]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_414994
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_414994:                          ; CODE XREF: std::chrono::duration<long,std::ratio<1l,1000l>>::zero(void)+48↑j
                leave
                retn
; } // starts at 414945
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEE4zeroEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1l>>>::value, std::chrono::duration<long, std::ratio<1l, 1l>>>::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1l>>, long, std::ratio<1l, 1000l>>(std::chrono::duration<long, std::ratio<1l, 1000l>> const&)
                public _ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1EEEElS2_ILl1ELl1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE ; weak
_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1EEEElS2_ILl1ELl1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE proc near
                                        ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+4A↓p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS5_EES4_RKNS1_IT_T0_EE ; std::chrono::__duration_cast_impl<std::chrono::duration<long,std::ratio<1l,1l>>,std::ratio<1l,1000l>,long,true,false>::__cast<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)
                leave
                retn
; } // starts at 414996
_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1EEEElS2_ILl1ELl1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000000l>>>::value, std::chrono::duration<long, std::ratio<1l, 1000000000l>>>::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000000l>>, long, std::ratio<1l, 1000l>>(std::chrono::duration<long, std::ratio<1l, 1000l>> const&)
                public _ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS2_ILl1ELl1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE ; weak
_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS2_ILl1ELl1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE proc near
                                        ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+71↓p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1000000ELl1EElLb0ELb1EE6__castIlS2_ILl1ELl1000EEEES4_RKNS1_IT_T0_EE ; std::chrono::__duration_cast_impl<std::chrono::duration<long,std::ratio<1l,1000000000l>>,std::ratio<1000000l,1l>,long,false,true>::__cast<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)
                leave
                retn
; } // starts at 4149B4
_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS2_ILl1ELl1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration<long, std::ratio<1l, 1000l>>::count(void)const
                public _ZNKSt6chrono8durationIlSt5ratioILl1ELl1000EEE5countEv ; weak
_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000EEE5countEv proc near
                                        ; CODE XREF: std::chrono::operator-<long,std::ratio<1l,1000l>,long,std::ratio<1l,1l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&,std::chrono::duration<long,std::ratio<1l,1l>> const&)+36↓p
                                        ; std::chrono::operator-<long,std::ratio<1l,1000l>,long,std::ratio<1l,1l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&,std::chrono::duration<long,std::ratio<1l,1l>> const&)+58↓p ...

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rax, [rax]
                pop     rbp
                retn
; } // starts at 4149D2
_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000EEE5countEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::common_type<std::chrono::duration<long, std::ratio<1l, 1000l>>, std::chrono::duration<long, std::ratio<1l, 1l>>>::type std::chrono::operator-<long, std::ratio<1l, 1000l>, long, std::ratio<1l, 1l>>(std::chrono::duration<long, std::ratio<1l, 1000l>> const&, std::chrono::duration<long, std::ratio<1l, 1l>> const&)
                public _ZNSt6chronomiIlSt5ratioILl1ELl1000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_ ; weak
_ZNSt6chronomiIlSt5ratioILl1ELl1000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_ proc near
                                        ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+61↓p

var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_38          = qword ptr -38h
var_30          = byte ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 48h
                mov     [rbp+var_48], rdi
                mov     [rbp+var_50], rsi
                mov     rax, fs:28h
                mov     [rbp+var_18], rax
                xor     eax, eax
                mov     rax, [rbp+var_48]
                mov     rax, [rax]
                mov     [rbp+var_38], rax
                lea     rax, [rbp+var_38]
                mov     rdi, rax
                call    _ZNKSt6chrono8durationIlSt5ratioILl1ELl1000EEE5countEv ; std::chrono::duration<long,std::ratio<1l,1000l>>::count(void)
                mov     rbx, rax
                mov     rdx, [rbp+var_50]
                lea     rax, [rbp+var_30]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IlS1_ILl1ELl1EEvEERKNS0_IT_T0_EE ; std::chrono::duration<long,std::ratio<1l,1000l>>::duration<long,std::ratio<1l,1l>,void>(std::chrono::duration<long,std::ratio<1l,1l>> const&)
                lea     rax, [rbp+var_30]
                mov     rdi, rax
                call    _ZNKSt6chrono8durationIlSt5ratioILl1ELl1000EEE5countEv ; std::chrono::duration<long,std::ratio<1l,1000l>>::count(void)
                mov     rdx, rax
                mov     rax, rbx
                sub     rax, rdx
                mov     [rbp+var_28], rax
                lea     rdx, [rbp+var_28]
                lea     rax, [rbp+var_20]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IlvEERKT_ ; std::chrono::duration<long,std::ratio<1l,1000l>>::duration<long,void>(long const&)
                mov     rax, [rbp+var_20]
                mov     rdx, [rbp+var_18]
                sub     rdx, fs:28h
                jz      short loc_414A7C
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

loc_414A7C:                             ; CODE XREF: std::chrono::operator-<long,std::ratio<1l,1000l>,long,std::ratio<1l,1l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&,std::chrono::duration<long,std::ratio<1l,1l>> const&)+8E↑j
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 4149E7
_ZNSt6chronomiIlSt5ratioILl1ELl1000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void std::this_thread::sleep_for<long, std::ratio<1l, 1000l>>(std::chrono::duration<long, std::ratio<1l, 1000l>> const&)
                public _ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000EEEEvRKNSt6chrono8durationIT_T0_EE ; weak
_ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000EEEEvRKNSt6chrono8durationIT_T0_EE proc near
                                        ; CODE XREF: slow_print(std::string const&,int)+87↑p

var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
requested_time  = timespec ptr -20h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 40h
                mov     [rbp+var_38], rdi
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                call    _ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEE4zeroEv ; std::chrono::duration<long,std::ratio<1l,1000l>>::zero(void)
                mov     [rbp+requested_time.tv_sec], rax
                lea     rdx, [rbp+requested_time]
                mov     rax, [rbp+var_38]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt6chronoleIlSt5ratioILl1ELl1000EElS2_EEbRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE ; std::chrono::operator<=<long,std::ratio<1l,1000l>,long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&,std::chrono::duration<long,std::ratio<1l,1000l>> const&)
                test    al, al
                jnz     loc_414B53
                mov     rax, [rbp+var_38]
                mov     rdi, rax
                call    _ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1EEEElS2_ILl1ELl1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE ; std::chrono::duration_cast<std::chrono::duration<long,std::ratio<1l,1l>>,long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)
                mov     [rbp+var_30], rax
                lea     rdx, [rbp+var_30]
                mov     rax, [rbp+var_38]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt6chronomiIlSt5ratioILl1ELl1000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_ ; std::chrono::operator-<long,std::ratio<1l,1000l>,long,std::ratio<1l,1l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&,std::chrono::duration<long,std::ratio<1l,1l>> const&)
                mov     [rbp+requested_time.tv_sec], rax
                lea     rax, [rbp+requested_time]
                mov     rdi, rax
                call    _ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000000EEEElS2_ILl1ELl1000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE ; std::chrono::duration_cast<std::chrono::duration<long,std::ratio<1l,1000000000l>>,long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)
                mov     [rbp+var_28], rax
                lea     rax, [rbp+var_30]
                mov     rdi, rax
                call    _ZNKSt6chrono8durationIlSt5ratioILl1ELl1EEE5countEv ; std::chrono::duration<long,std::ratio<1l,1l>>::count(void)
                mov     [rbp+requested_time.tv_sec], rax
                lea     rax, [rbp+var_28]
                mov     rdi, rax
                call    _ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv ; std::chrono::duration<long,std::ratio<1l,1000000000l>>::count(void)
                mov     [rbp+requested_time.tv_nsec], rax
                nop

loc_414B1D:                             ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+CD↓j
                lea     rdx, [rbp+requested_time]
                lea     rax, [rbp+requested_time]
                mov     rsi, rdx        ; remaining
                mov     rdi, rax        ; requested_time
                call    _nanosleep
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_414B48
                call    ___errno_location
                mov     eax, [rax]
                cmp     eax, 4
                jnz     short loc_414B48
                mov     eax, 1
                jmp     short loc_414B4D
; ---------------------------------------------------------------------------

loc_414B48:                             ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+B1↑j
                                        ; std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+BD↑j
                mov     eax, 0

loc_414B4D:                             ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+C4↑j
                test    al, al
                jnz     short loc_414B1D
                jmp     short loc_414B54
; ---------------------------------------------------------------------------

loc_414B53:                             ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+3D↑j
                nop

loc_414B54:                             ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+CF↑j
                mov     rax, [rbp+var_8]
                sub     rax, fs:28h
                jz      short locret_414B68
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_414B68:                          ; CODE XREF: std::this_thread::sleep_for<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+DF↑j
                leave
                retn
; } // starts at 414A82
_ZNSt11this_thread9sleep_forIlSt5ratioILl1ELl1000EEEEvRKNSt6chrono8durationIT_T0_EE endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::_Vector_base<std::string>::_Vector_impl::_Vector_impl(void)
                public _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev ; weak
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev proc near
                                        ; CODE XREF: std::_Vector_base<std::string>::_Vector_base(void)+17↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev ; std::allocator<std::string>::allocator(void)
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev ; std::_Vector_base<std::string>::_Vector_impl_data::_Vector_impl_data(void)
                nop
                leave
                retn
; } // starts at 414B6A
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::allocator<std::string>::~allocator()
                public _ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev ; weak
_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev proc near
                                        ; CODE XREF: std::_Vector_base<std::string>::_Vector_impl::~_Vector_impl()+17↑p

var_8           = qword ptr -8

; __unwind {
                endbr64                 ; Alternative name is 'std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>::~allocator()'
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev ; __gnu_cxx::new_allocator<std::string>::~new_allocator()
                nop
                leave
                retn
; } // starts at 414B96
_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::_Vector_base<std::string>::~_Vector_base()
                public _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev ; weak
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev proc near
                                        ; CODE XREF: std::vector<std::string>::~vector()+40↓p

var_8           = qword ptr -8

; __unwind { // ___gxx_personality_v0
                endbr64                 ; Alternative name is 'std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>::~_Vector_base()'
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdx, [rax+10h]
                mov     rax, [rbp+var_8]
                mov     rcx, [rax]
                mov     rax, rdx
                sub     rax, rcx
                sar     rax, 5
                mov     rdx, rax
                mov     rax, [rbp+var_8]
                mov     rcx, [rax]
                mov     rax, [rbp+var_8]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m ; std::_Vector_base<std::string>::_M_deallocate(std::string*,ulong)
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev ; std::_Vector_base<std::string>::_Vector_impl::~_Vector_impl()
                nop
                leave
                retn
; } // starts at 414BB6
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall std::vector<std::string>::~vector(_QWORD)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev proc near
                                        ; CODE XREF: main+FBC2↑p main+FE3C↑p

var_8           = qword ptr -8

; __unwind { // ___gxx_personality_v0
                endbr64                 ; Alternative name is 'std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>>::~vector()'
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv ; std::_Vector_base<std::string>::_M_get_Tp_allocator(void)
                mov     rdx, rax
                mov     rax, [rbp+var_8]
                mov     rcx, [rax+8]
                mov     rax, [rbp+var_8]
                mov     rax, [rax]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E ; std::_Destroy<std::string *,std::string>(std::string *,std::string *,std::allocator<std::string> &)
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev ; std::_Vector_base<std::string>::~_Vector_base()
                nop
                leave
                retn
; } // starts at 414C08
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall std::vector<std::string>::push_back(_QWORD, _QWORD)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ proc near
                                        ; CODE XREF: main+30D3↑p main+3134↑p ...

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_10]
                mov     rdi, rax
                call    _ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ ; std::move<std::string &>(std::string &&&)
                mov     rdx, rax
                mov     rax, [rbp+var_8]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_ ; std::vector<std::string>::emplace_back<std::string>(std::string &&)
                nop
                leave
                retn
; } // starts at 414C50
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall std::vector<std::string>::size(_QWORD)
                public _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv ; weak
_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv proc near
                                        ; CODE XREF: main+B023↑p
                                        ; std::vector<std::string>::_M_check_len(ulong,char const*)+3E↓p ...

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdx, [rax+8]
                mov     rax, [rbp+var_8]
                mov     rcx, [rax]
                mov     rax, rdx
                sub     rax, rcx
                sar     rax, 5
                pop     rbp
                retn
; } // starts at 414C86
_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 __fastcall std::vector<std::string>::operator[](_QWORD, _QWORD)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm proc near
                                        ; CODE XREF: main+AFFA↑p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_8]
                mov     rdx, [rax]
                mov     rax, [rbp+var_10]
                shl     rax, 5
                add     rax, rdx
                pop     rbp
                retn
; } // starts at 414CAE
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::remove_reference<std::string &>::type && std::move<std::string &>(std::string &&&)
                public _ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ ; weak
_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ proc near
                                        ; CODE XREF: std::vector<std::string>::push_back(std::string&&)+1B↑p
                                        ; std::__relocate_object_a<std::string,std::string,std::allocator<std::string>>(std::string *,std::string *,std::allocator<std::string> &)+1F↓p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 414CD2
_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __gnu_cxx::__normal_iterator<char const*, std::string>::base(void)const
                public _ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv ; weak
_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv proc near
                                        ; CODE XREF: __gnu_cxx::operator!=<char const*,std::string>(__gnu_cxx::__normal_iterator<char const*,std::string> const&,__gnu_cxx::__normal_iterator<char const*,std::string> const&)+1C↑p
                                        ; __gnu_cxx::operator!=<char const*,std::string>(__gnu_cxx::__normal_iterator<char const*,std::string> const&,__gnu_cxx::__normal_iterator<char const*,std::string> const&)+2B↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 414CE4
_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; bool std::chrono::operator<<long, std::ratio<1l, 1000l>, long, std::ratio<1l, 1000l>>(std::chrono::duration<long, std::ratio<1l, 1000l>> const&, std::chrono::duration<long, std::ratio<1l, 1000l>> const&)
                public _ZNSt6chronoltIlSt5ratioILl1ELl1000EElS2_EEbRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE ; weak
_ZNSt6chronoltIlSt5ratioILl1ELl1000EElS2_EEbRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE proc near
                                        ; CODE XREF: std::chrono::operator<=<long,std::ratio<1l,1000l>,long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&,std::chrono::duration<long,std::ratio<1l,1000l>> const&)+22↑p

var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 38h
                mov     [rbp+var_38], rdi
                mov     [rbp+var_40], rsi
                mov     rax, fs:28h
                mov     [rbp+var_18], rax
                xor     eax, eax
                mov     rax, [rbp+var_38]
                mov     rax, [rax]
                mov     [rbp+var_28], rax
                lea     rax, [rbp+var_28]
                mov     rdi, rax
                call    _ZNKSt6chrono8durationIlSt5ratioILl1ELl1000EEE5countEv ; std::chrono::duration<long,std::ratio<1l,1000l>>::count(void)
                mov     rbx, rax
                mov     rax, [rbp+var_40]
                mov     rax, [rax]
                mov     [rbp+var_20], rax
                lea     rax, [rbp+var_20]
                mov     rdi, rax
                call    _ZNKSt6chrono8durationIlSt5ratioILl1ELl1000EEE5countEv ; std::chrono::duration<long,std::ratio<1l,1000l>>::count(void)
                cmp     rbx, rax
                setl    al
                mov     rdx, [rbp+var_18]
                sub     rdx, fs:28h
                jz      short loc_414D65
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

loc_414D65:                             ; CODE XREF: std::chrono::operator<<long,std::ratio<1l,1000l>,long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&,std::chrono::duration<long,std::ratio<1l,1000l>> const&)+68↑j
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 414CF6
_ZNSt6chronoltIlSt5ratioILl1ELl1000EElS2_EEbRKNS_8durationIT_T0_EERKNS3_IT1_T2_EE endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration<long, std::ratio<1l, 1000l>>::duration<long, void>(long const&)
                public _ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IlvEERKT_ ; weak
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IlvEERKT_ proc near
                                        ; CODE XREF: std::chrono::duration<long,std::ratio<1l,1000l>>::zero(void)+32↑p
                                        ; std::chrono::operator-<long,std::ratio<1l,1000l>,long,std::ratio<1l,1l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&,std::chrono::duration<long,std::ratio<1l,1l>> const&)+78↑p ...

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64                 ; Alternative name is 'std::chrono::duration<long, std::ratio<1l, 1000l>>::duration<long, void>(long const&)'
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_10]
                mov     rdx, [rax]
                mov     rax, [rbp+var_8]
                mov     [rax], rdx
                nop
                pop     rbp
                retn
; } // starts at 414D6C
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IlvEERKT_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration<long, std::ratio<1l, 1l>> std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l>>, std::ratio<1l, 1000l>, long, true, false>::__cast<long, std::ratio<1l, 1000l>>(std::chrono::duration<long, std::ratio<1l, 1000l>> const&)
                public _ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS5_EES4_RKNS1_IT_T0_EE ; weak
_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS5_EES4_RKNS1_IT_T0_EE proc near
                                        ; CODE XREF: std::chrono::duration_cast<std::chrono::duration<long,std::ratio<1l,1l>>,long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+17↑p

var_28          = qword ptr -28h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     [rbp+var_28], rdi
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     rax, [rbp+var_28]
                mov     rdi, rax
                call    _ZNKSt6chrono8durationIlSt5ratioILl1ELl1000EEE5countEv ; std::chrono::duration<long,std::ratio<1l,1000l>>::count(void)
                mov     rcx, rax
                mov     rdx, 20C49BA5E353F7CFh
                mov     rax, rcx
                imul    rdx
                mov     rax, rdx
                sar     rax, 7
                sar     rcx, 3Fh
                mov     rdx, rcx
                sub     rax, rdx
                mov     [rbp+var_18], rax
                lea     rdx, [rbp+var_18]
                lea     rax, [rbp+var_10]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt6chrono8durationIlSt5ratioILl1ELl1EEEC2IlvEERKT_ ; std::chrono::duration<long,std::ratio<1l,1l>>::duration<long,void>(long const&)
                mov     rax, [rbp+var_10]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_414E0B
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_414E0B:                          ; CODE XREF: std::chrono::__duration_cast_impl<std::chrono::duration<long,std::ratio<1l,1l>>,std::ratio<1l,1000l>,long,true,false>::__cast<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+77↑j
                leave
                retn
; } // starts at 414D8D
_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS5_EES4_RKNS1_IT_T0_EE endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration<long, std::ratio<1l, 1000000000l>> std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l>>, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l>>(std::chrono::duration<long, std::ratio<1l, 1000l>> const&)
                public _ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1000000ELl1EElLb0ELb1EE6__castIlS2_ILl1ELl1000EEEES4_RKNS1_IT_T0_EE ; weak
_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1000000ELl1EElLb0ELb1EE6__castIlS2_ILl1ELl1000EEEES4_RKNS1_IT_T0_EE proc near
                                        ; CODE XREF: std::chrono::duration_cast<std::chrono::duration<long,std::ratio<1l,1000000000l>>,long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+17↑p

var_28          = qword ptr -28h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     [rbp+var_28], rdi
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     rax, [rbp+var_28]
                mov     rdi, rax
                call    _ZNKSt6chrono8durationIlSt5ratioILl1ELl1000EEE5countEv ; std::chrono::duration<long,std::ratio<1l,1000l>>::count(void)
                imul    rax, 0F4240h
                mov     [rbp+var_18], rax
                lea     rdx, [rbp+var_18]
                lea     rax, [rbp+var_10]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_ ; std::chrono::duration<long,std::ratio<1l,1000000000l>>::duration<long,void>(long const&)
                mov     rax, [rbp+var_10]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_414E6E
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_414E6E:                          ; CODE XREF: std::chrono::__duration_cast_impl<std::chrono::duration<long,std::ratio<1l,1000000000l>>,std::ratio<1000000l,1l>,long,false,true>::__cast<long,std::ratio<1l,1000l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&)+5A↑j
                leave
                retn
; } // starts at 414E0D
_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000000EEEES2_ILl1000000ELl1EElLb0ELb1EE6__castIlS2_ILl1ELl1000EEEES4_RKNS1_IT_T0_EE endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration<long, std::ratio<1l, 1000l>>::duration<long, std::ratio<1l, 1l>, void>(std::chrono::duration<long, std::ratio<1l, 1l>> const&)
                public _ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IlS1_ILl1ELl1EEvEERKNS0_IT_T0_EE ; weak
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IlS1_ILl1ELl1EEvEERKNS0_IT_T0_EE proc near
                                        ; CODE XREF: std::chrono::operator-<long,std::ratio<1l,1000l>,long,std::ratio<1l,1l>>(std::chrono::duration<long,std::ratio<1l,1000l>> const&,std::chrono::duration<long,std::ratio<1l,1l>> const&)+4C↑p

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64                 ; Alternative name is 'std::chrono::duration<long, std::ratio<1l, 1000l>>::duration<long, std::ratio<1l, 1l>, void>(std::chrono::duration<long, std::ratio<1l, 1l>> const&)'
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_18], rdi
                mov     [rbp+var_20], rsi
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     rax, [rbp+var_20]
                mov     rdi, rax
                call    _ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000EEEElS2_ILl1ELl1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE ; std::chrono::duration_cast<std::chrono::duration<long,std::ratio<1l,1000l>>,long,std::ratio<1l,1l>>(std::chrono::duration<long,std::ratio<1l,1l>> const&)
                mov     [rbp+var_10], rax
                lea     rax, [rbp+var_10]
                mov     rdi, rax
                call    _ZNKSt6chrono8durationIlSt5ratioILl1ELl1000EEE5countEv ; std::chrono::duration<long,std::ratio<1l,1000l>>::count(void)
                mov     rdx, [rbp+var_18]
                mov     [rdx], rax
                nop
                mov     rax, [rbp+var_8]
                sub     rax, fs:28h
                jz      short locret_414ECB
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_414ECB:                          ; CODE XREF: std::chrono::duration<long,std::ratio<1l,1000l>>::duration<long,std::ratio<1l,1l>,void>(std::chrono::duration<long,std::ratio<1l,1l>> const&)+54↑j
                leave
                retn
; } // starts at 414E70
_ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IlS1_ILl1ELl1EEvEERKNS0_IT_T0_EE endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::allocator<std::string>::allocator(void)
                public _ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev ; weak
_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev proc near
                                        ; CODE XREF: std::_Vector_base<std::string>::_Vector_impl::_Vector_impl(void)+17↑p

var_8           = qword ptr -8

; __unwind {
                endbr64                 ; Alternative name is 'std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>::allocator(void)'
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev ; __gnu_cxx::new_allocator<std::string>::new_allocator(void)
                nop
                leave
                retn
; } // starts at 414ECE
_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::_Vector_base<std::string>::_Vector_impl_data::_Vector_impl_data(void)
                public _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev ; weak
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev proc near
                                        ; CODE XREF: std::_Vector_base<std::string>::_Vector_impl::_Vector_impl(void)+23↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     qword ptr [rax], 0
                mov     rax, [rbp+var_8]
                mov     qword ptr [rax+8], 0
                mov     rax, [rbp+var_8]
                mov     qword ptr [rax+10h], 0
                nop
                pop     rbp
                retn
; } // starts at 414EEE
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __gnu_cxx::new_allocator<std::string>::~new_allocator()
                public _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev ; weak
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev proc near
                                        ; CODE XREF: std::allocator<std::string>::~allocator()+17↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                nop
                pop     rbp
                retn
; } // starts at 414F20
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::_Vector_base<std::string>::_M_deallocate(std::string*, unsigned long)
                public _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m ; weak
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m proc near
                                        ; CODE XREF: std::_Vector_base<std::string>::~_Vector_base()+3D↑p
                                        ; std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+20C↓p ...

var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     [rbp+var_18], rdx
                cmp     [rbp+var_10], 0
                jz      short loc_414F66
                mov     rax, [rbp+var_8]
                mov     rdx, [rbp+var_18]
                mov     rcx, [rbp+var_10]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m ; std::allocator_traits<std::allocator<std::string>>::deallocate(std::allocator<std::string>&,std::string*,ulong)

loc_414F66:                             ; CODE XREF: std::_Vector_base<std::string>::_M_deallocate(std::string*,ulong)+1D↑j
                nop
                leave
                retn
; } // starts at 414F30
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::_Vector_base<std::string>::_M_get_Tp_allocator(void)
                public _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv ; weak
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv proc near
                                        ; CODE XREF: std::vector<std::string>::~vector()+17↑p
                                        ; std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+E7↓p ...

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 414F6A
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void std::_Destroy<std::string *, std::string>(std::string *, std::string *, std::allocator<std::string> &)
                public _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E ; weak
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E proc near
                                        ; CODE XREF: std::vector<std::string>::~vector()+34↑p
                                        ; std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+1E9↓p ...

var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     [rbp+var_18], rdx
                mov     rdx, [rbp+var_10]
                mov     rax, [rbp+var_8]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ ; std::_Destroy<std::string *>(std::string *,std::string *)
                nop
                leave
                retn
; } // starts at 414F7C
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void std::vector<std::string>::emplace_back<std::string>(std::string &&)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_ ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_ proc near
                                        ; CODE XREF: std::vector<std::string>::push_back(std::string&&)+2D↑p

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 18h
                mov     [rbp+var_18], rdi
                mov     [rbp+var_20], rsi
                mov     rax, [rbp+var_18]
                mov     rdx, [rax+8]
                mov     rax, [rbp+var_18]
                mov     rax, [rax+10h]
                cmp     rdx, rax
                jz      short loc_415010
                mov     rax, [rbp+var_20]
                mov     rdi, rax
                call    _ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE ; std::forward<std::string>(std::remove_reference<std::string>::type &)
                mov     rdx, rax
                mov     rax, [rbp+var_18]
                mov     rcx, [rax+8]
                mov     rax, [rbp+var_18]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_ ; std::allocator_traits<std::allocator<std::string>>::construct<std::string,std::string>(std::allocator<std::string>&,std::string *,std::string &&)
                mov     rax, [rbp+var_18]
                mov     rax, [rax+8]
                lea     rdx, [rax+20h]
                mov     rax, [rbp+var_18]
                mov     [rax+8], rdx
                jmp     short loc_415040
; ---------------------------------------------------------------------------

loc_415010:                             ; CODE XREF: std::vector<std::string>::emplace_back<std::string>(std::string &&)+28↑j
                mov     rax, [rbp+var_20]
                mov     rdi, rax
                call    _ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE ; std::forward<std::string>(std::remove_reference<std::string>::type &)
                mov     rbx, rax
                mov     rax, [rbp+var_18]
                mov     rdi, rax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv ; std::vector<std::string>::end(void)
                mov     rcx, rax
                mov     rax, [rbp+var_18]
                mov     rdx, rbx
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ ; std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)

loc_415040:                             ; CODE XREF: std::vector<std::string>::emplace_back<std::string>(std::string &&)+64↑j
                nop
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 414FAA
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l>>>::value, std::chrono::duration<long, std::ratio<1l, 1000l>>>::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l>>, long, std::ratio<1l, 1l>>(std::chrono::duration<long, std::ratio<1l, 1l>> const&)
                public _ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000EEEElS2_ILl1ELl1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE ; weak
_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000EEEElS2_ILl1ELl1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE proc near
                                        ; CODE XREF: std::chrono::duration<long,std::ratio<1l,1000l>>::duration<long,std::ratio<1l,1l>,void>(std::chrono::duration<long,std::ratio<1l,1l>> const&)+2A↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000EEEES2_ILl1000ELl1EElLb0ELb1EE6__castIlS2_ILl1ELl1EEEES4_RKNS1_IT_T0_EE ; std::chrono::__duration_cast_impl<std::chrono::duration<long,std::ratio<1l,1000l>>,std::ratio<1000l,1l>,long,false,true>::__cast<long,std::ratio<1l,1l>>(std::chrono::duration<long,std::ratio<1l,1l>> const&)
                leave
                retn
; } // starts at 415047
_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000EEEElS2_ILl1ELl1EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __gnu_cxx::new_allocator<std::string>::new_allocator(void)
                public _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev ; weak
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev proc near
                                        ; CODE XREF: std::allocator<std::string>::allocator(void)+17↑p

var_8           = qword ptr -8

; __unwind {
                endbr64                 ; Alternative name is '__gnu_cxx::new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>>::new_allocator(void)'
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                nop
                pop     rbp
                retn
; } // starts at 415066
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::allocator_traits<std::allocator<std::string>>::deallocate(std::allocator<std::string>&, std::string*, unsigned long)
                public _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m ; weak
_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m proc near
                                        ; CODE XREF: std::_Vector_base<std::string>::_M_deallocate(std::string*,ulong)+31↑p

var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     [rbp+var_18], rdx
                mov     rdx, [rbp+var_18]
                mov     rcx, [rbp+var_10]
                mov     rax, [rbp+var_8]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m ; __gnu_cxx::new_allocator<std::string>::deallocate(std::string*,ulong)
                nop
                leave
                retn
; } // starts at 415075
_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void std::_Destroy<std::string *>(std::string *, std::string *)
                public _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ ; weak
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ proc near
                                        ; CODE XREF: std::_Destroy<std::string *,std::string>(std::string *,std::string *,std::allocator<std::string> &)+26↑p
                                        ; std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::string *>,std::string *>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *)+91↓p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rdx, [rbp+var_10]
                mov     rax, [rbp+var_8]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ ; std::_Destroy_aux<false>::__destroy<std::string *>(std::string *,std::string *)
                nop
                leave
                retn
; } // starts at 4150A7
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::string && std::forward<std::string>(std::remove_reference<std::string>::type &)
                public _ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE ; weak
_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE proc near
                                        ; CODE XREF: std::vector<std::string>::emplace_back<std::string>(std::string &&)+31↑p
                                        ; std::vector<std::string>::emplace_back<std::string>(std::string &&)+6D↑p ...

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 4150D1
_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void std::allocator_traits<std::allocator<std::string>>::construct<std::string, std::string>(std::allocator<std::string>&, std::string *, std::string &&)
                public _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_ ; weak
_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_ proc near
                                        ; CODE XREF: std::vector<std::string>::emplace_back<std::string>(std::string &&)+4B↑p
                                        ; std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+CA↓p ...

var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     [rbp+var_18], rdx
                mov     rax, [rbp+var_18]
                mov     rdi, rax
                call    _ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE ; std::forward<std::string>(std::remove_reference<std::string>::type &)
                mov     rdx, rax
                mov     rcx, [rbp+var_10]
                mov     rax, [rbp+var_8]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_ ; __gnu_cxx::new_allocator<std::string>::construct<std::string,std::string>(std::string *,std::string &&)
                nop
                leave
                retn
; } // starts at 4150E3
_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::vector<std::string>::end(void)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv proc near
                                        ; CODE XREF: std::vector<std::string>::emplace_back<std::string>(std::string &&)+7C↑p

var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_18], rdi
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     rax, [rbp+var_18]
                lea     rdx, [rax+8]
                lea     rax, [rbp+var_10]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_ ; __gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>>::__normal_iterator(std::string * const&)
                mov     rax, [rbp+var_10]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_41516E
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_41516E:                          ; CODE XREF: std::vector<std::string>::end(void)+47↑j
                leave
                retn
; } // starts at 415120
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::vector<std::string>::_S_use_relocate(void)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_S_use_relocateEv ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_S_use_relocateEv proc near
                                        ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+D7↓p
                                        ; std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&):loc_415376↓p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_S_nothrow_relocateESt17integral_constantIbLb1EE ; std::vector<std::string>::_S_nothrow_relocate(std::integral_constant<bool,true>)
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_4151A4
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_4151A4:                          ; CODE XREF: std::vector<std::string>::_S_use_relocate(void)+2D↑j
                leave
                retn
; } // starts at 415170
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_S_use_relocateEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::vector<std::string>::_S_nothrow_relocate(std::integral_constant<bool, true>)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_S_nothrow_relocateESt17integral_constantIbLb1EE ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_S_nothrow_relocateESt17integral_constantIbLb1EE proc near
                                        ; CODE XREF: std::vector<std::string>::_S_use_relocate(void)+1B↑p
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     eax, 1
                pop     rbp
                retn
; } // starts at 4151A6
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_S_nothrow_relocateESt17integral_constantIbLb1EE endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string>>, std::string &&)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ proc near
                                        ; CODE XREF: std::vector<std::string>::emplace_back<std::string>(std::string &&)+91↑p

var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind { // ___gxx_personality_v0
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 68h
                mov     [rbp+var_58], rdi
                mov     [rbp+var_60], rsi
                mov     [rbp+var_68], rdx
                mov     rax, fs:28h
                mov     [rbp+var_18], rax
                xor     eax, eax
                mov     rax, [rbp+var_58]
                mov     edx, offset aVectorMRealloc ; "vector::_M_realloc_insert"
                mov     esi, 1
                mov     rdi, rax
                call    _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc ; std::vector<std::string>::_M_check_len(ulong,char const*)
                mov     [rbp+var_40], rax
                mov     rax, [rbp+var_58]
                mov     rax, [rax]
                mov     [rbp+var_38], rax
                mov     rax, [rbp+var_58]
                mov     rax, [rax+8]
                mov     [rbp+var_30], rax
                mov     rax, [rbp+var_58]
                mov     rdi, rax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv ; std::vector<std::string>::begin(void)
                mov     [rbp+var_50], rax
                lea     rdx, [rbp+var_50]
                lea     rax, [rbp+var_60]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_ ; __gnu_cxx::operator-<std::string *,std::vector<std::string>>(__gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>> const&,__gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>> const&)
                mov     [rbp+var_28], rax
                mov     rax, [rbp+var_58]
                mov     rdx, [rbp+var_40]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm ; std::_Vector_base<std::string>::_M_allocate(ulong)
                mov     [rbp+var_20], rax
                mov     rax, [rbp+var_20]
                mov     [rbp+var_48], rax
                mov     rax, [rbp+var_68]
                mov     rdi, rax
                call    _ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE ; std::forward<std::string>(std::remove_reference<std::string>::type &)
                mov     rdx, rax
                mov     rax, [rbp+var_28]
                shl     rax, 5
                mov     rcx, rax
                mov     rax, [rbp+var_20]
                add     rcx, rax
                mov     rax, [rbp+var_58]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_ ; std::allocator_traits<std::allocator<std::string>>::construct<std::string,std::string>(std::allocator<std::string>&,std::string *,std::string &&)
                mov     [rbp+var_48], 0
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_S_use_relocateEv ; std::vector<std::string>::_S_use_relocate(void)
                test    al, al
                jz      short loc_415307
                mov     rax, [rbp+var_58]
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv ; std::_Vector_base<std::string>::_M_get_Tp_allocator(void)
                mov     rbx, rax
                lea     rax, [rbp+var_60]
                mov     rdi, rax
                call    _ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv ; __gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>>::base(void)
                mov     rsi, [rax]
                mov     rdx, [rbp+var_20]
                mov     rax, [rbp+var_38]
                mov     rcx, rbx
                mov     rdi, rax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_ ; std::vector<std::string>::_S_relocate(std::string*,std::string*,std::string*,std::allocator<std::string>&)
                mov     [rbp+var_48], rax
                add     [rbp+var_48], 20h ; ' '
                mov     rax, [rbp+var_58]
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv ; std::_Vector_base<std::string>::_M_get_Tp_allocator(void)
                mov     rbx, rax
                lea     rax, [rbp+var_60]
                mov     rdi, rax
                call    _ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv ; __gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>>::base(void)
                mov     rax, [rax]
                mov     rdx, [rbp+var_48]
                mov     rsi, [rbp+var_30]
                mov     rcx, rbx
                mov     rdi, rax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_ ; std::vector<std::string>::_S_relocate(std::string*,std::string*,std::string*,std::allocator<std::string>&)
                mov     [rbp+var_48], rax
                jmp     short loc_415376
; ---------------------------------------------------------------------------

loc_415307:                             ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+DE↑j
                mov     rax, [rbp+var_58]
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv ; std::_Vector_base<std::string>::_M_get_Tp_allocator(void)
                mov     rbx, rax
                lea     rax, [rbp+var_60]
                mov     rdi, rax
                call    _ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv ; __gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>>::base(void)
                mov     rsi, [rax]
                mov     rdx, [rbp+var_20]
                mov     rax, [rbp+var_38]
                mov     rcx, rbx
                mov     rdi, rax
;   try {
                call    _ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ ; std::__uninitialized_move_if_noexcept_a<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)
                mov     [rbp+var_48], rax
                add     [rbp+var_48], 20h ; ' '
                mov     rax, [rbp+var_58]
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv ; std::_Vector_base<std::string>::_M_get_Tp_allocator(void)
                mov     rbx, rax
                lea     rax, [rbp+var_60]
                mov     rdi, rax
                call    _ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv ; __gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>>::base(void)
                mov     rax, [rax]
                mov     rdx, [rbp+var_48]
                mov     rsi, [rbp+var_30]
                mov     rcx, rbx
                mov     rdi, rax
                call    _ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ ; std::__uninitialized_move_if_noexcept_a<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)
;   } // starts at 415333
                mov     [rbp+var_48], rax

loc_415376:                             ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+14F↑j
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_S_use_relocateEv ; std::vector<std::string>::_S_use_relocate(void)
                xor     eax, 1
                test    al, al
                jz      short loc_4153A4
                mov     rax, [rbp+var_58]
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv ; std::_Vector_base<std::string>::_M_get_Tp_allocator(void)
                mov     rdx, rax
                mov     rcx, [rbp+var_30]
                mov     rax, [rbp+var_38]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E ; std::_Destroy<std::string *,std::string>(std::string *,std::string *,std::allocator<std::string> &)

loc_4153A4:                             ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+1CA↑j
                mov     rax, [rbp+var_58]
                mov     rdx, [rbp+var_58]
                mov     rdx, [rdx+10h]
                sub     rdx, [rbp+var_38]
                sar     rdx, 5
                mov     rcx, [rbp+var_38]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m ; std::_Vector_base<std::string>::_M_deallocate(std::string*,ulong)
                mov     rax, [rbp+var_58]
                mov     rdx, [rbp+var_20]
                mov     [rax], rdx
                mov     rax, [rbp+var_58]
                mov     rdx, [rbp+var_48]
                mov     [rax+8], rdx
                mov     rax, [rbp+var_40]
                shl     rax, 5
                mov     rdx, rax
                mov     rax, [rbp+var_20]
                add     rdx, rax
                mov     rax, [rbp+var_58]
                mov     [rax+10h], rdx
                nop
                mov     rax, [rbp+var_18]
                sub     rax, fs:28h
                jz      loc_4154A1
                jmp     loc_41549C
; ---------------------------------------------------------------------------
;   catch(...) // owned by 415333
                endbr64
                mov     rdi, rax        ; void *
                call    ___cxa_begin_catch
                cmp     [rbp+var_48], 0
                jnz     short loc_415447
                mov     rax, [rbp+var_28]
                shl     rax, 5
                mov     rdx, rax
                mov     rax, [rbp+var_20]
                add     rdx, rax
                mov     rax, [rbp+var_58]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_ ; std::allocator_traits<std::allocator<std::string>>::destroy<std::string>(std::allocator<std::string>&,std::string *)
                jmp     short loc_415469
; ---------------------------------------------------------------------------

loc_415447:                             ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+26C↑j
                mov     rax, [rbp+var_58]
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv ; std::_Vector_base<std::string>::_M_get_Tp_allocator(void)
                mov     rdx, rax
                mov     rcx, [rbp+var_48]
                mov     rax, [rbp+var_20]
                mov     rsi, rcx
                mov     rdi, rax
;   try {
                call    _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E ; std::_Destroy<std::string *,std::string>(std::string *,std::string *,std::allocator<std::string> &)

loc_415469:                             ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+28F↑j
                mov     rax, [rbp+var_58]
                mov     rdx, [rbp+var_40]
                mov     rcx, [rbp+var_20]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m ; std::_Vector_base<std::string>::_M_deallocate(std::string*,ulong)
                call    ___cxa_rethrow
;   } // starts at 415464
; ---------------------------------------------------------------------------
;   cleanup() // owned by 415464
                endbr64
                mov     rbx, rax
                call    ___cxa_end_catch
                mov     rax, rbx
                mov     rdi, rax        ; struct _Unwind_Exception *
                call    __Unwind_Resume
; ---------------------------------------------------------------------------

loc_41549C:                             ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+256↑j
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

loc_4154A1:                             ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+250↑j
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 4151B6
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::chrono::duration<long, std::ratio<1l, 1000l>> std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l>>, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l>>(std::chrono::duration<long, std::ratio<1l, 1l>> const&)
                public _ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000EEEES2_ILl1000ELl1EElLb0ELb1EE6__castIlS2_ILl1ELl1EEEES4_RKNS1_IT_T0_EE ; weak
_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000EEEES2_ILl1000ELl1EElLb0ELb1EE6__castIlS2_ILl1ELl1EEEES4_RKNS1_IT_T0_EE proc near
                                        ; CODE XREF: std::chrono::duration_cast<std::chrono::duration<long,std::ratio<1l,1000l>>,long,std::ratio<1l,1l>>(std::chrono::duration<long,std::ratio<1l,1l>> const&)+17↑p

var_28          = qword ptr -28h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     [rbp+var_28], rdi
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     rax, [rbp+var_28]
                mov     rdi, rax
                call    _ZNKSt6chrono8durationIlSt5ratioILl1ELl1EEE5countEv ; std::chrono::duration<long,std::ratio<1l,1l>>::count(void)
                imul    rax, 3E8h
                mov     [rbp+var_18], rax
                lea     rdx, [rbp+var_18]
                lea     rax, [rbp+var_10]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt6chrono8durationIlSt5ratioILl1ELl1000EEEC2IlvEERKT_ ; std::chrono::duration<long,std::ratio<1l,1000l>>::duration<long,void>(long const&)
                mov     rax, [rbp+var_10]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_415508
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_415508:                          ; CODE XREF: std::chrono::__duration_cast_impl<std::chrono::duration<long,std::ratio<1l,1000l>>,std::ratio<1000l,1l>,long,false,true>::__cast<long,std::ratio<1l,1l>>(std::chrono::duration<long,std::ratio<1l,1l>> const&)+5A↑j
                leave
                retn
; } // starts at 4154A7
_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000EEEES2_ILl1000ELl1EElLb0ELb1EE6__castIlS2_ILl1ELl1EEEES4_RKNS1_IT_T0_EE endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __gnu_cxx::new_allocator<std::string>::deallocate(std::string*, unsigned long)
                public _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m ; weak
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m proc near
                                        ; CODE XREF: std::allocator_traits<std::allocator<std::string>>::deallocate(std::allocator<std::string>&,std::string*,ulong)+2A↑p

var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     [rbp+var_18], rdx
                mov     rax, [rbp+var_18]
                shl     rax, 5
                mov     rdx, rax
                mov     rax, [rbp+var_10]
                mov     rsi, rdx        ; unsigned __int64
                mov     rdi, rax        ; void *
                call    __ZdlPvm        ; operator delete(void *,ulong)
                nop
                leave
                retn
; } // starts at 41550A
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void std::_Destroy_aux<false>::__destroy<std::string *>(std::string *, std::string *)
                public _ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ ; weak
_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ proc near
                                        ; CODE XREF: std::_Destroy<std::string *>(std::string *,std::string *)+22↑p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                jmp     short loc_41556E
; ---------------------------------------------------------------------------

loc_415555:                             ; CODE XREF: std::_Destroy_aux<false>::__destroy<std::string *>(std::string *,std::string *)+37↓j
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ ; std::__addressof<std::string>(std::string&)
                mov     rdi, rax
                call    _ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ ; std::_Destroy<std::string>(std::string *)
                add     [rbp+var_8], 20h ; ' '

loc_41556E:                             ; CODE XREF: std::_Destroy_aux<false>::__destroy<std::string *>(std::string *,std::string *)+14↑j
                mov     rax, [rbp+var_8]
                cmp     rax, [rbp+var_10]
                jnz     short loc_415555
                nop
                nop
                leave
                retn
; } // starts at 41553F
_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __gnu_cxx::new_allocator<std::string>::construct<std::string, std::string>(std::string *, std::string &&)
                public _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_ ; weak
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_ proc near
                                        ; CODE XREF: std::allocator_traits<std::allocator<std::string>>::construct<std::string,std::string>(std::allocator<std::string>&,std::string *,std::string &&)+35↑p

var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 28h
                mov     [rbp+var_18], rdi
                mov     [rbp+var_20], rsi
                mov     [rbp+var_28], rdx
                mov     rax, [rbp+var_28]
                mov     rdi, rax
                call    _ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE ; std::forward<std::string>(std::remove_reference<std::string>::type &)
                mov     rbx, rax
                mov     rax, [rbp+var_20]
                mov     rsi, rax        ; void *
                mov     edi, 20h ; ' '  ; unsigned __int64
                call    _ZnwmPv         ; operator new(ulong,void *)
                mov     rsi, rbx
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_ ; std::string::basic_string(std::string&&)
                nop
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 41557C
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_ endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __gnu_cxx::__normal_iterator<std::string *, std::vector<std::string>>::__normal_iterator(std::string * const&)
                public _ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_ ; weak
_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_ proc near
                                        ; CODE XREF: std::vector<std::string>::end(void)+31↑p
                                        ; std::vector<std::string>::begin(void)+2D↓p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_10]
                mov     rdx, [rax]
                mov     rax, [rbp+var_8]
                mov     [rax], rdx
                nop
                pop     rbp
                retn
; } // starts at 4155C8
_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_ endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::vector<std::string>::_M_check_len(unsigned long, char const*)const
                public _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc ; weak
_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc proc near
                                        ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+39↑p

var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 48h
                mov     [rbp+var_38], rdi
                mov     [rbp+var_40], rsi
                mov     [rbp+var_48], rdx
                mov     rax, fs:28h
                mov     [rbp+var_18], rax
                xor     eax, eax
                mov     rax, [rbp+var_38]
                mov     rdi, rax
                call    _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv ; std::vector<std::string>::max_size(void)
                mov     rbx, rax
                mov     rax, [rbp+var_38]
                mov     rdi, rax
                call    _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv ; std::vector<std::string>::size(void)
                sub     rbx, rax
                mov     rdx, rbx
                mov     rax, [rbp+var_40]
                cmp     rdx, rax
                setb    al
                test    al, al
                jz      short loc_41564D
                mov     rax, [rbp+var_48]
                mov     rdi, rax        ; char *
                call    __ZSt20__throw_length_errorPKc ; std::__throw_length_error(char const*)
; ---------------------------------------------------------------------------

loc_41564D:                             ; CODE XREF: std::vector<std::string>::_M_check_len(ulong,char const*)+55↑j
                mov     rax, [rbp+var_38]
                mov     rdi, rax
                call    _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv ; std::vector<std::string>::size(void)
                mov     rbx, rax
                mov     rax, [rbp+var_38]
                mov     rdi, rax
                call    _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv ; std::vector<std::string>::size(void)
                mov     [rbp+var_28], rax
                lea     rdx, [rbp+var_40]
                lea     rax, [rbp+var_28]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZSt3maxImERKT_S2_S2_ ; std::max<ulong>(ulong const&,ulong const&)
                mov     rax, [rax]
                add     rax, rbx
                mov     [rbp+var_20], rax
                mov     rax, [rbp+var_38]
                mov     rdi, rax
                call    _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv ; std::vector<std::string>::size(void)
                cmp     [rbp+var_20], rax
                jb      short loc_4156AD
                mov     rax, [rbp+var_38]
                mov     rdi, rax
                call    _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv ; std::vector<std::string>::max_size(void)
                cmp     [rbp+var_20], rax
                jbe     short loc_4156BB

loc_4156AD:                             ; CODE XREF: std::vector<std::string>::_M_check_len(ulong,char const*)+AF↑j
                mov     rax, [rbp+var_38]
                mov     rdi, rax
                call    _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv ; std::vector<std::string>::max_size(void)
                jmp     short loc_4156BF
; ---------------------------------------------------------------------------

loc_4156BB:                             ; CODE XREF: std::vector<std::string>::_M_check_len(ulong,char const*)+C1↑j
                mov     rax, [rbp+var_20]

loc_4156BF:                             ; CODE XREF: std::vector<std::string>::_M_check_len(ulong,char const*)+CF↑j
                mov     rdx, [rbp+var_18]
                sub     rdx, fs:28h
                jz      short loc_4156D3
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

loc_4156D3:                             ; CODE XREF: std::vector<std::string>::_M_check_len(ulong,char const*)+E2↑j
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 4155EA
_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::vector<std::string>::begin(void)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv proc near
                                        ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+60↑p

var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_18], rdi
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     rdx, [rbp+var_18]
                lea     rax, [rbp+var_10]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_ ; __gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>>::__normal_iterator(std::string * const&)
                mov     rax, [rbp+var_10]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_415724
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_415724:                          ; CODE XREF: std::vector<std::string>::begin(void)+43↑j
                leave
                retn
; } // starts at 4156DA
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __gnu_cxx::__normal_iterator<std::string *, std::vector<std::string>>::difference_type __gnu_cxx::operator-<std::string *, std::vector<std::string>>(__gnu_cxx::__normal_iterator<std::string *, std::vector<std::string>> const&, __gnu_cxx::__normal_iterator<std::string *, std::vector<std::string>> const&)
                public _ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_ ; weak
_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_ proc near
                                        ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+77↑p

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 18h
                mov     [rbp+var_18], rdi
                mov     [rbp+var_20], rsi
                mov     rax, [rbp+var_18]
                mov     rdi, rax
                call    _ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv ; __gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>>::base(void)
                mov     rbx, [rax]
                mov     rax, [rbp+var_20]
                mov     rdi, rax
                call    _ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv ; __gnu_cxx::__normal_iterator<std::string *,std::vector<std::string>>::base(void)
                mov     rdx, [rax]
                mov     rax, rbx
                sub     rax, rdx
                sar     rax, 5
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 415726
_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_ endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::_Vector_base<std::string>::_M_allocate(unsigned long)
                public _ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm ; weak
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm proc near
                                        ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+8E↑p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                cmp     [rbp+var_10], 0
                jz      short loc_41579A
                mov     rax, [rbp+var_8]
                mov     rdx, [rbp+var_10]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m ; std::allocator_traits<std::allocator<std::string>>::allocate(std::allocator<std::string>&,ulong)
                jmp     short locret_41579F
; ---------------------------------------------------------------------------

loc_41579A:                             ; CODE XREF: std::_Vector_base<std::string>::_M_allocate(ulong)+19↑j
                mov     eax, 0

locret_41579F:                          ; CODE XREF: std::_Vector_base<std::string>::_M_allocate(ulong)+2E↑j
                leave
                retn
; } // starts at 41576A
_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::vector<std::string>::_S_relocate(std::string*, std::string*, std::string*, std::allocator<std::string>&)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_ ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_ proc near
                                        ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+10C↑p
                                        ; std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+146↑p

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     [rbp+var_18], rdx
                mov     [rbp+var_20], rcx
                mov     rcx, [rbp+var_20]
                mov     rdx, [rbp+var_18]
                mov     rsi, [rbp+var_10]
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_S_do_relocateEPS5_S8_S8_RS6_St17integral_constantIbLb1EE ; std::vector<std::string>::_S_do_relocate(std::string*,std::string*,std::string*,std::allocator<std::string>&,std::integral_constant<bool,true>)
                leave
                retn
; } // starts at 4157A1
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_ endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __gnu_cxx::__normal_iterator<std::string *, std::vector<std::string>>::base(void)const
                public _ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv ; weak
_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv proc near
                                        ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+F6↑p
                                        ; std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+130↑p ...

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 4157D8
_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::string * std::__uninitialized_move_if_noexcept_a<std::string *, std::string *, std::allocator<std::string>>(std::string *, std::string *, std::string *, std::allocator<std::string> &)
                public _ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ ; weak
_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ proc near
                                        ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+17D↑p
                                        ; std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+1B7↑p

var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 28h
                mov     [rbp+var_18], rdi
                mov     [rbp+var_20], rsi
                mov     [rbp+var_28], rdx
                mov     [rbp+var_30], rcx
                mov     rax, [rbp+var_20]
                mov     rdi, rax
                call    _ZSt32__make_move_if_noexcept_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIPS5_EET0_PT_ ; std::__make_move_if_noexcept_iterator<std::string,std::move_iterator<std::string*>>(std::string *)
                mov     rbx, rax
                mov     rax, [rbp+var_18]
                mov     rdi, rax
                call    _ZSt32__make_move_if_noexcept_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIPS5_EET0_PT_ ; std::__make_move_if_noexcept_iterator<std::string,std::move_iterator<std::string*>>(std::string *)
                mov     rdi, rax
                mov     rdx, [rbp+var_30]
                mov     rax, [rbp+var_28]
                mov     rcx, rdx
                mov     rdx, rax
                mov     rsi, rbx
                call    _ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E ; std::__uninitialized_copy_a<std::move_iterator<std::string *>,std::string *,std::string>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *,std::allocator<std::string> &)
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 4157EA
_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void std::allocator_traits<std::allocator<std::string>>::destroy<std::string>(std::allocator<std::string>&, std::string *)
                public _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_ ; weak
_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_ proc near
                                        ; CODE XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+28A↑p
                                        ; std::__relocate_object_a<std::string,std::string,std::allocator<std::string>>(std::string *,std::string *,std::allocator<std::string> &)+53↓p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rdx, [rbp+var_10]
                mov     rax, [rbp+var_8]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_ ; __gnu_cxx::new_allocator<std::string>::destroy<std::string>(std::string *)
                nop
                leave
                retn
; } // starts at 415841
_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::string * std::__addressof<std::string>(std::string&)
                public _ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ ; weak
_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ proc near
                                        ; CODE XREF: std::_Destroy_aux<false>::__destroy<std::string *>(std::string *,std::string *)+1D↑p
                                        ; std::__relocate_a_1<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)+2E↓p ...

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 41586B
_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void std::_Destroy<std::string>(std::string *)
                public _ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ ; weak
_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ proc near
                                        ; CODE XREF: std::_Destroy_aux<false>::__destroy<std::string *>(std::string *,std::string *)+25↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                nop
                leave
                retn
; } // starts at 41587D
_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::vector<std::string>::max_size(void)const
                public _ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv ; weak
_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv proc near
                                        ; CODE XREF: std::vector<std::string>::_M_check_len(ulong,char const*)+2F↑p
                                        ; std::vector<std::string>::_M_check_len(ulong,char const*)+B8↑p ...

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv ; std::_Vector_base<std::string>::_M_get_Tp_allocator(void)
                mov     rdi, rax
                call    _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_ ; std::vector<std::string>::_S_max_size(std::allocator<std::string> const&)
                leave
                retn
; } // starts at 41589C
_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
                public _ZSt3maxImERKT_S2_S2_ ; weak
_ZSt3maxImERKT_S2_S2_ proc near         ; CODE XREF: std::vector<std::string>::_M_check_len(ulong,char const*)+90↑p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_8]
                mov     rdx, [rax]
                mov     rax, [rbp+var_10]
                mov     rax, [rax]
                cmp     rdx, rax
                jnb     short loc_4158EB
                mov     rax, [rbp+var_10]
                jmp     short loc_4158EF
; ---------------------------------------------------------------------------

loc_4158EB:                             ; CODE XREF: std::max<ulong>(ulong const&,ulong const&)+21↑j
                mov     rax, [rbp+var_8]

loc_4158EF:                             ; CODE XREF: std::max<ulong>(ulong const&,ulong const&)+27↑j
                pop     rbp
                retn
; } // starts at 4158C2
_ZSt3maxImERKT_S2_S2_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::allocator_traits<std::allocator<std::string>>::allocate(std::allocator<std::string>&, unsigned long)
                public _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m ; weak
_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m proc near
                                        ; CODE XREF: std::_Vector_base<std::string>::_M_allocate(ulong)+29↑p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rcx, [rbp+var_10]
                mov     rax, [rbp+var_8]
                mov     edx, 0
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv ; __gnu_cxx::new_allocator<std::string>::allocate(ulong,void const*)
                leave
                retn
; } // starts at 4158F1
_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::vector<std::string>::_S_do_relocate(std::string*, std::string*, std::string*, std::allocator<std::string>&, std::integral_constant<bool, true>)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_S_do_relocateEPS5_S8_S8_RS6_St17integral_constantIbLb1EE ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_S_do_relocateEPS5_S8_S8_RS6_St17integral_constantIbLb1EE proc near
                                        ; CODE XREF: std::vector<std::string>::_S_relocate(std::string*,std::string*,std::string*,std::allocator<std::string>&)+2F↑p

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     [rbp+var_18], rdx
                mov     [rbp+var_20], rcx
                mov     rcx, [rbp+var_20]
                mov     rdx, [rbp+var_18]
                mov     rsi, [rbp+var_10]
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ ; std::__relocate_a<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)
                leave
                retn
; } // starts at 41591F
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_S_do_relocateEPS5_S8_S8_RS6_St17integral_constantIbLb1EE endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::move_iterator<std::string*> std::__make_move_if_noexcept_iterator<std::string, std::move_iterator<std::string*>>(std::string *)
                public _ZSt32__make_move_if_noexcept_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIPS5_EET0_PT_ ; weak
_ZSt32__make_move_if_noexcept_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIPS5_EET0_PT_ proc near
                                        ; CODE XREF: std::__uninitialized_move_if_noexcept_a<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)+24↑p
                                        ; std::__uninitialized_move_if_noexcept_a<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)+33↑p

var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_18], rdi
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     rdx, [rbp+var_18]
                lea     rax, [rbp+var_10]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_ ; std::move_iterator<std::string *>::move_iterator(std::string *)
                mov     rax, [rbp+var_10]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_41599F
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_41599F:                          ; CODE XREF: std::__make_move_if_noexcept_iterator<std::string,std::move_iterator<std::string*>>(std::string *)+43↑j
                leave
                retn
; } // starts at 415955
_ZSt32__make_move_if_noexcept_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIPS5_EET0_PT_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::string * std::__uninitialized_copy_a<std::move_iterator<std::string *>, std::string *, std::string>(std::move_iterator<std::string *>, std::move_iterator<std::string *>, std::string *, std::allocator<std::string> &)
                public _ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E ; weak
_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E proc near
                                        ; CODE XREF: std::__uninitialized_move_if_noexcept_a<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)+4C↑p

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     [rbp+var_18], rdx
                mov     [rbp+var_20], rcx
                mov     rdx, [rbp+var_18]
                mov     rcx, [rbp+var_10]
                mov     rax, [rbp+var_8]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_ ; std::uninitialized_copy<std::move_iterator<std::string *>,std::string *>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *)
                leave
                retn
; } // starts at 4159A1
_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void __gnu_cxx::new_allocator<std::string>::destroy<std::string>(std::string *)
                public _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_ ; weak
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_ proc near
                                        ; CODE XREF: std::allocator_traits<std::allocator<std::string>>::destroy<std::string>(std::allocator<std::string>&,std::string *)+22↑p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_10]
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev ; std::string::~string()
                nop
                leave
                retn
; } // starts at 4159D6
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::vector<std::string>::_S_max_size(std::allocator<std::string> const&)
                public _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_ ; weak
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_ proc near
                                        ; CODE XREF: std::vector<std::string>::max_size(void)+1F↑p

var_28          = qword ptr -28h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     [rbp+var_28], rdi
                mov     rax, fs:28h
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     rax, 3FFFFFFFFFFFFFFh
                mov     [rbp+var_18], rax
                mov     rax, [rbp+var_28]
                mov     rdi, rax
                call    _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_ ; std::allocator_traits<std::allocator<std::string>>::max_size(std::allocator<std::string> const&)
                mov     [rbp+var_10], rax
                lea     rdx, [rbp+var_10]
                lea     rax, [rbp+var_18]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZSt3minImERKT_S2_S2_ ; std::min<ulong>(ulong const&,ulong const&)
                mov     rax, [rax]
                mov     rdx, [rbp+var_8]
                sub     rdx, fs:28h
                jz      short locret_415A60
                call    ___stack_chk_fail
; ---------------------------------------------------------------------------

locret_415A60:                          ; CODE XREF: std::vector<std::string>::_S_max_size(std::allocator<std::string> const&)+60↑j
                leave
                retn
; } // starts at 4159F9
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::_Vector_base<std::string>::_M_get_Tp_allocator(void)const
                public _ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv ; weak
_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv proc near
                                        ; CODE XREF: std::vector<std::string>::max_size(void)+17↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 415A62
_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __gnu_cxx::new_allocator<std::string>::_M_max_size(void)const
                public _ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE11_M_max_sizeEv ; weak
_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE11_M_max_sizeEv proc near
                                        ; CODE XREF: __gnu_cxx::new_allocator<std::string>::allocate(ulong,void const*)+1F↓p
                                        ; __gnu_cxx::new_allocator<std::string>::max_size(void)+17↓p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, 3FFFFFFFFFFFFFFh
                pop     rbp
                retn
; } // starts at 415A74
_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE11_M_max_sizeEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __gnu_cxx::new_allocator<std::string>::allocate(unsigned long, void const*)
                public _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv ; weak
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv proc near
                                        ; CODE XREF: std::allocator_traits<std::allocator<std::string>>::allocate(std::allocator<std::string>&,ulong)+27↑p

var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     [rbp+var_18], rdx
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE11_M_max_sizeEv ; __gnu_cxx::new_allocator<std::string>::_M_max_size(void)
                cmp     [rbp+var_10], rax
                setnbe  al
                movzx   eax, al
                test    rax, rax
                setnz   al
                test    al, al
                jz      short loc_415ADE
                mov     rax, 7FFFFFFFFFFFFFFh
                cmp     [rbp+var_10], rax
                jbe     short loc_415AD9
                call    __ZSt28__throw_bad_array_new_lengthv ; std::__throw_bad_array_new_length(void)

loc_415AD9:                             ; CODE XREF: __gnu_cxx::new_allocator<std::string>::allocate(ulong,void const*)+46↑j
                call    __ZSt17__throw_bad_allocv ; std::__throw_bad_alloc(void)
; ---------------------------------------------------------------------------

loc_415ADE:                             ; CODE XREF: __gnu_cxx::new_allocator<std::string>::allocate(ulong,void const*)+36↑j
                mov     rax, [rbp+var_10]
                shl     rax, 5
                mov     rdi, rax        ; unsigned __int64
                call    __Znwm          ; operator new(ulong)
                leave
                retn
; } // starts at 415A8C
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::string * std::__relocate_a<std::string *, std::string *, std::allocator<std::string>>(std::string *, std::string *, std::string *, std::allocator<std::string> &)
                public _ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ ; weak
_ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ proc near
                                        ; CODE XREF: std::vector<std::string>::_S_do_relocate(std::string*,std::string*,std::string*,std::allocator<std::string>&,std::integral_constant<bool,true>)+2F↑p

var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    r12
                push    rbx
                sub     rsp, 20h
                mov     [rbp+var_18], rdi
                mov     [rbp+var_20], rsi
                mov     [rbp+var_28], rdx
                mov     [rbp+var_30], rcx
                mov     rax, [rbp+var_28]
                mov     rdi, rax
                call    _ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_ ; std::__niter_base<std::string *>(std::string *)
                mov     r12, rax
                mov     rax, [rbp+var_20]
                mov     rdi, rax
                call    _ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_ ; std::__niter_base<std::string *>(std::string *)
                mov     rbx, rax
                mov     rax, [rbp+var_18]
                mov     rdi, rax
                call    _ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_ ; std::__niter_base<std::string *>(std::string *)
                mov     rdi, rax
                mov     rax, [rbp+var_30]
                mov     rcx, rax
                mov     rdx, r12
                mov     rsi, rbx
                call    _ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ ; std::__relocate_a_1<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)
                add     rsp, 20h
                pop     rbx
                pop     r12
                pop     rbp
                retn
; } // starts at 415AF0
_ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::move_iterator<std::string *>::move_iterator(std::string *)
                public _ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_ ; weak
_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_ proc near
                                        ; CODE XREF: std::__make_move_if_noexcept_iterator<std::string,std::move_iterator<std::string*>>(std::string *)+2D↑p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64                 ; Alternative name is 'std::move_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> *>::move_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> *)'
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                lea     rax, [rbp+var_10]
                mov     rdi, rax
                call    _ZSt4moveIRPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS9_ ; std::move<std::string *&>(std::string *&&&)
                mov     rdx, [rax]
                mov     rax, [rbp+var_8]
                mov     [rax], rdx
                nop
                leave
                retn
; } // starts at 415B58
_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::string * std::uninitialized_copy<std::move_iterator<std::string *>, std::string *>(std::move_iterator<std::string *>, std::move_iterator<std::string *>, std::string *)
                public _ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_ ; weak
_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_ proc near
                                        ; CODE XREF: std::__uninitialized_copy_a<std::move_iterator<std::string *>,std::string *,std::string>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *,std::allocator<std::string> &)+2E↑p

var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_1           = byte ptr -1

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 30h
                mov     [rbp+var_18], rdi
                mov     [rbp+var_20], rsi
                mov     [rbp+var_28], rdx
                mov     [rbp+var_1], 1
                mov     rdx, [rbp+var_28]
                mov     rcx, [rbp+var_20]
                mov     rax, [rbp+var_18]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_ ; std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::string *>,std::string *>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *)
                leave
                retn
; } // starts at 415B85
_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::allocator_traits<std::allocator<std::string>>::max_size(std::allocator<std::string> const&)
                public _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_ ; weak
_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_ proc near
                                        ; CODE XREF: std::vector<std::string>::_S_max_size(std::allocator<std::string> const&)+34↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv ; __gnu_cxx::new_allocator<std::string>::max_size(void)
                leave
                retn
; } // starts at 415BBA
_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
                public _ZSt3minImERKT_S2_S2_ ; weak
_ZSt3minImERKT_S2_S2_ proc near         ; CODE XREF: std::vector<std::string>::_S_max_size(std::allocator<std::string> const&)+4B↑p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rax, [rbp+var_10]
                mov     rdx, [rax]
                mov     rax, [rbp+var_8]
                mov     rax, [rax]
                cmp     rdx, rax
                jnb     short loc_415C01
                mov     rax, [rbp+var_10]
                jmp     short loc_415C05
; ---------------------------------------------------------------------------

loc_415C01:                             ; CODE XREF: std::min<ulong>(ulong const&,ulong const&)+21↑j
                mov     rax, [rbp+var_8]

loc_415C05:                             ; CODE XREF: std::min<ulong>(ulong const&,ulong const&)+27↑j
                pop     rbp
                retn
; } // starts at 415BD8
_ZSt3minImERKT_S2_S2_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::string * std::__niter_base<std::string *>(std::string *)
                public _ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_ ; weak
_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_ proc near
                                        ; CODE XREF: std::__relocate_a<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)+26↑p
                                        ; std::__relocate_a<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)+35↑p ...

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 415C07
_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::string * std::__relocate_a_1<std::string *, std::string *, std::allocator<std::string>>(std::string *, std::string *, std::string *, std::allocator<std::string> &)
                public _ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ ; weak
_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ proc near
                                        ; CODE XREF: std::__relocate_a<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)+59↑p

var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 38h
                mov     [rbp+var_28], rdi
                mov     [rbp+var_30], rsi
                mov     [rbp+var_38], rdx
                mov     [rbp+var_40], rcx
                mov     rax, [rbp+var_38]
                mov     [rbp+var_18], rax
                jmp     short loc_415C7A
; ---------------------------------------------------------------------------

loc_415C40:                             ; CODE XREF: std::__relocate_a_1<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)+69↓j
                mov     rax, [rbp+var_28]
                mov     rdi, rax
                call    _ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ ; std::__addressof<std::string>(std::string&)
                mov     rbx, rax
                mov     rax, [rbp+var_18]
                mov     rdi, rax
                call    _ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ ; std::__addressof<std::string>(std::string&)
                mov     rcx, rax
                mov     rax, [rbp+var_40]
                mov     rdx, rax
                mov     rsi, rbx
                mov     rdi, rcx
                call    _ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_ ; std::__relocate_object_a<std::string,std::string,std::allocator<std::string>>(std::string *,std::string *,std::allocator<std::string> &)
                add     [rbp+var_28], 20h ; ' '
                add     [rbp+var_18], 20h ; ' '

loc_415C7A:                             ; CODE XREF: std::__relocate_a_1<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)+25↑j
                mov     rax, [rbp+var_28]
                cmp     rax, [rbp+var_30]
                jnz     short loc_415C40
                mov     rax, [rbp+var_18]
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 415C19
_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::remove_reference<std::string *&>::type && std::move<std::string *&>(std::string *&&&)
                public _ZSt4moveIRPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS9_ ; weak
_ZSt4moveIRPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS9_ proc near
                                        ; CODE XREF: std::move_iterator<std::string *>::move_iterator(std::string *)+1B↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 415C8E
_ZSt4moveIRPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS9_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::string * std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::string *>, std::string *>(std::move_iterator<std::string *>, std::move_iterator<std::string *>, std::string *)
                public _ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_ ; weak
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_ proc near
                                        ; CODE XREF: std::uninitialized_copy<std::move_iterator<std::string *>,std::string *>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *)+2E↑p

var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind { // ___gxx_personality_v0
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 38h
                mov     [rbp+var_28], rdi
                mov     [rbp+var_30], rsi
                mov     [rbp+var_38], rdx
                mov     rax, [rbp+var_38]
                mov     [rbp+var_18], rax
                jmp     short loc_415CFA
; ---------------------------------------------------------------------------

loc_415CC3:                             ; CODE XREF: std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::string *>,std::string *>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *)+6F↓j
                lea     rax, [rbp+var_28]
                mov     rdi, rax
                call    _ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv ; std::move_iterator<std::string *>::operator*(void)
                mov     rbx, rax
                mov     rax, [rbp+var_18]
                mov     rdi, rax
                call    _ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ ; std::__addressof<std::string>(std::string&)
                mov     rsi, rbx
                mov     rdi, rax
                call    _ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_ ; std::_Construct<std::string,std::string>(std::string *,std::string &&)
                lea     rax, [rbp+var_28]
                mov     rdi, rax
                call    _ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv ; std::move_iterator<std::string *>::operator++(void)
                add     [rbp+var_18], 20h ; ' '

loc_415CFA:                             ; CODE XREF: std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::string *>,std::string *>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *)+21↑j
                lea     rdx, [rbp+var_30]
                lea     rax, [rbp+var_28]
                mov     rsi, rdx
                mov     rdi, rax
;   try {
                call    _ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ ; std::operator!=<std::string *>(std::move_iterator<std::string *> const&,std::move_iterator<std::string *> const&)
;   } // starts at 415D08
                test    al, al
                jnz     short loc_415CC3
                mov     rax, [rbp+var_18]
                jmp     short loc_415D52
; ---------------------------------------------------------------------------
;   catch(...) // owned by 415D08
                endbr64
                mov     rdi, rax        ; void *
                call    ___cxa_begin_catch
                mov     rdx, [rbp+var_18]
                mov     rax, [rbp+var_38]
                mov     rsi, rdx
                mov     rdi, rax
;   try {
                call    _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ ; std::_Destroy<std::string *>(std::string *,std::string *)
                call    ___cxa_rethrow
;   } // starts at 415D31
; ---------------------------------------------------------------------------
;   cleanup() // owned by 415D31
                endbr64
                mov     rbx, rax
                call    ___cxa_end_catch
                mov     rax, rbx
                mov     rdi, rax        ; struct _Unwind_Exception *
                call    __Unwind_Resume
; ---------------------------------------------------------------------------

loc_415D52:                             ; CODE XREF: std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::string *>,std::string *>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *)+75↑j
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 415CA0
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __gnu_cxx::new_allocator<std::string>::max_size(void)const
                public _ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv ; weak
_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv proc near
                                        ; CODE XREF: std::allocator_traits<std::allocator<std::string>>::max_size(std::allocator<std::string> const&)+17↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rdi, rax
                call    _ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE11_M_max_sizeEv ; __gnu_cxx::new_allocator<std::string>::_M_max_size(void)
                leave
                retn
; } // starts at 415D58
_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void std::__relocate_object_a<std::string, std::string, std::allocator<std::string>>(std::string *, std::string *, std::allocator<std::string> &)
                public _ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_ ; weak
_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_ proc near
                                        ; CODE XREF: std::__relocate_a_1<std::string *,std::string *,std::allocator<std::string>>(std::string *,std::string *,std::string *,std::allocator<std::string> &)+52↑p

var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     [rbp+var_18], rdx
                mov     rax, [rbp+var_10]
                mov     rdi, rax
                call    _ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ ; std::move<std::string &>(std::string &&&)
                mov     rdx, rax
                mov     rcx, [rbp+var_8]
                mov     rax, [rbp+var_18]
                mov     rsi, rcx
                mov     rdi, rax
                call    _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_ ; std::allocator_traits<std::allocator<std::string>>::construct<std::string,std::string>(std::allocator<std::string>&,std::string *,std::string &&)
                mov     rax, [rbp+var_10]
                mov     rdi, rax
                call    _ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ ; std::__addressof<std::string>(std::string&)
                mov     rdx, rax
                mov     rax, [rbp+var_18]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_ ; std::allocator_traits<std::allocator<std::string>>::destroy<std::string>(std::allocator<std::string>&,std::string *)
                nop
                leave
                retn
; } // starts at 415D76
_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; bool std::operator!=<std::string *>(std::move_iterator<std::string *> const&, std::move_iterator<std::string *> const&)
                public _ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ ; weak
_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ proc near
                                        ; CODE XREF: std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::string *>,std::string *>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *)+68↑p

var_10          = qword ptr -10h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                sub     rsp, 10h
                mov     [rbp+var_8], rdi
                mov     [rbp+var_10], rsi
                mov     rdx, [rbp+var_10]
                mov     rax, [rbp+var_8]
                mov     rsi, rdx
                mov     rdi, rax
                call    _ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ ; std::operator==<std::string *>(std::move_iterator<std::string *> const&,std::move_iterator<std::string *> const&)
                xor     eax, 1
                leave
                retn
; } // starts at 415DD1
_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ endp

; ---------------------------------------------------------------------------
                align 2

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::move_iterator<std::string *>::operator++(void)
                public _ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv ; weak
_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv proc near
                                        ; CODE XREF: std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::string *>,std::string *>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *)+50↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rax, [rax]
                lea     rdx, [rax+20h]
                mov     rax, [rbp+var_8]
                mov     [rax], rdx
                mov     rax, [rbp+var_8]
                pop     rbp
                retn
; } // starts at 415DFE
_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::move_iterator<std::string *>::operator*(void)const
                public _ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv ; weak
_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv proc near
                                        ; CODE XREF: std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::string *>,std::string *>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *)+2A↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rax, [rax]
                pop     rbp
                retn
; } // starts at 415E22
_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; void std::_Construct<std::string, std::string>(std::string *, std::string &&)
                public _ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_ ; weak
_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_ proc near
                                        ; CODE XREF: std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::string *>,std::string *>(std::move_iterator<std::string *>,std::move_iterator<std::string *>,std::string *)+44↑p

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 18h
                mov     [rbp+var_18], rdi
                mov     [rbp+var_20], rsi
                mov     rax, [rbp+var_20]
                mov     rdi, rax
                call    _ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE ; std::forward<std::string>(std::remove_reference<std::string>::type &)
                mov     rbx, rax
                mov     rax, [rbp+var_18]
                mov     rsi, rax        ; void *
                mov     edi, 20h ; ' '  ; unsigned __int64
                call    _ZnwmPv         ; operator new(ulong,void *)
                mov     rsi, rbx
                mov     rdi, rax
                call    __ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_ ; std::string::basic_string(std::string&&)
                nop
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 415E37
_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; bool std::operator==<std::string *>(std::move_iterator<std::string *> const&, std::move_iterator<std::string *> const&)
                public _ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ ; weak
_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ proc near
                                        ; CODE XREF: std::operator!=<std::string *>(std::move_iterator<std::string *> const&,std::move_iterator<std::string *> const&)+22↑p

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                push    rbx
                sub     rsp, 18h
                mov     [rbp+var_18], rdi
                mov     [rbp+var_20], rsi
                mov     rax, [rbp+var_18]
                mov     rdi, rax
                call    _ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv ; std::move_iterator<std::string *>::base(void)
                mov     rbx, rax
                mov     rax, [rbp+var_20]
                mov     rdi, rax
                call    _ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv ; std::move_iterator<std::string *>::base(void)
                cmp     rbx, rax
                setz    al
                mov     rbx, [rbp+var_8]
                leave
                retn
; } // starts at 415E7E
_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; std::move_iterator<std::string *>::base(void)const
                public _ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv ; weak
_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv proc near
                                        ; CODE XREF: std::operator==<std::string *>(std::move_iterator<std::string *> const&,std::move_iterator<std::string *> const&)+1C↑p
                                        ; std::operator==<std::string *>(std::move_iterator<std::string *> const&,std::move_iterator<std::string *> const&)+2B↑p

var_8           = qword ptr -8

; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                mov     [rbp+var_8], rdi
                mov     rax, [rbp+var_8]
                mov     rax, [rax]
                pop     rbp
                retn
; } // starts at 415EBA
_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv endp

_text           ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
LOAD            segment mempage public 'CODE' use64
                assume cs:LOAD
                ;org 415ECFh
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                align 10h
LOAD            ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
_fini           segment dword public 'CODE' use64
                assume cs:_fini
                ;org 415ED0h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================


                public _term_proc
_term_proc      proc near
                endbr64                 ; _fini
                sub     rsp, 8
                add     rsp, 8
                retn
_term_proc      endp

_fini           ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read
_rodata         segment align_32 public 'CONST' use64
                assume cs:_rodata
                ;org 416000h
                public _IO_stdin_used
_IO_stdin_used  db    1                 ; DATA XREF: LOAD:0000000000400130↑o
                db    0
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; std::piecewise_construct
_ZStL19piecewise_construct db    0
; std::allocator_arg
_ZStL13allocator_arg db    0
; std::ignore
_ZStL6ignore    db    0
                db    0
; CTime
_ZL5CTime       db  31h ; 1
                db    1
                db    0
                db    0
aNeverGonnaGive db 'Never gonna give you up',0Ah
                                        ; DATA XREF: obfusheader_decoy_main(void)+1B↑o
                db 'Never gonna let you down',0Ah
                db 'Never gonna run around and desert you',0Ah
                db 'Never gonna make you cry',0Ah
                db 'Never gonna say goodbye',0Ah
                db 'Never gonna tell a lie and hurt you',0
aProcSelfStatus db '/proc/self/status',0
                                        ; DATA XREF: ive_played_these_games_before(void)+31↑o
aTracerpid      db 'TracerPid:',0       ; DATA XREF: ive_played_these_games_before(void)+3DF↑o
                align 8
; main::{lambda(void)#1}::operator() const(void)::result
_ZZZ4mainENKUlvE_clEvE6result db    0
                db 0AEh
                db 0E6h
                db 0E6h
                db 0F2h
                db 0AAh
                db 0E8h
                db 0F2h
                db 0E4h
                db 0E5h
                db  8Ah
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; main::{lambda(void)#2}::operator() const(void)::result
_ZZZ4mainENKUlvE0_clEvE6result db    0
                db 0F5h
                db 0EAh
                db 0EAh
                db 0F7h
                db 0A5h
                db 0E5h
                db 0EFh
                db 0E9h
                db 0E5h
                db 0E6h
                db 0EEh
                db 0E2h
                db 0EAh
                db 0EBh
                db 0AFh
                db 0E7h
                db 0FEh
                db 0FCh
                db 0B4h
                db 0E0h
                db 0B5h
                db 0E1h
                db 0F8h
                db 0EAh
                db 0F2h
                db 0B4h
                db 0BBh
                db 0E8h
                db 0E8h
                db 0F8h
                db 0F9h
                db 0AAh
                db 0A1h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; main::{lambda(void)#3}::operator() const(void)::result
_ZZZ4mainENKUlvE1_clEvE6result db    0
                db 0B8h
                db 0D2h
                db  81h
                db 0C6h
                db 0D2h
                db 0C1h
                db 0F3h
                db 0FDh
                db  8Bh
                db 0BAh
                db  9Bh
                db 0FFh
                db 0BDh
                db 0BBh
                db 0FCh
                db 0CEh
                db  89h
                db 0A2h
                db 0AAh
                db 0CAh
                db 0E6h
                db 0E5h
                db 0A8h
                db 0FFh
                db 0C0h
                db 0EAh
                db 0A7h
                db 0ACh
                db 0AEh
                db 0F1h
                db  94h
                db 0CDh
                db 0B6h
                db 0A3h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; main::{lambda(void)#4}::operator() const(void)::result
_ZZZ4mainENKUlvE2_clEvE6result db    0
                db 0EBh
                db 0A3h
                db 0E3h
                db 0EAh
                db 0F2h
                db 0A7h
                db 0EEh
                db 0E6h
                db 0F8h
                db 0E8h
                db 0E9h
                db 0E9h
                db 0AEh
                db 0FBh
                db 0FFh
                db 0B1h
                db 0FFh
                db 0F2h
                db 0FFh
                db 0F0h
                db 0B6h
                db 0F6h
                db 0B8h
                db 0F1h
                db 0FBh
                db 0E9h
                db 0F8h
                db 0BDh
                db 0ECh
                db 0FAh
                db 0D6h
                db  81h
                db 0C1h
                db 0CBh
                db 0C5h
                db 0C9h
                db 0CAh
                db  89h
                db  88h
                db 0CBh
                db 0DFh
                db 0DFh
                db  8Ch
                db 0DEh
                db 0C7h
                db 0C1h
                db 0D3h
                db 0D4h
                db  92h
                db 0DAh
                db  94h
                db 0C2h
                db 0D7h
                db 0D9h
                db 0CCh
                db  99h
                db 0CEh
                db 0D4h
                db  9Ch
                db 0DFh
                db 0DBh
                db  9Fh
                db 0AEh
                db 0A8h
                db 0A1h
                db 0A6h
                db 0E8h
                db 0E5h
                db 0AFh
                db 0E0h
                db 0A4h
                db 0A5h
                db 0EAh
                db 0A1h
                db 0B9h
                db 0BEh
                db 0BAh
                db 0EFh
                db 0B8h
                db 0B8h
                db 0B6h
                db 0B6h
                db 0F4h
                db 0A1h
                db 0BEh
                db 0B2h
                db 0F8h
                db 0BFh
                db 0B6h
                db 0BAh
                db 0BBh
                db 0FDh
                db 0ADh
                db 0B0h
                db  8Dh
                db  84h
                db  95h
                db  8Bh
                db  81h
                db  97h
                db  83h
                db 0EDh
                db 0E8h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; main::{lambda(void)#5}::operator() const(void)::result
_ZZZ4mainENKUlvE3_clEvE6result db    0
                db 0EBh
                db 0E5h
                db 0F5h
                db 0F6h
                db 0FEh
                db 0A8h
                db 0E1h
                db 0FFh
                db 0E5h
                db 0F8h
                db 0E4h
                db 0E0h
                db 0E8h
                db 0B1h
                db  9Bh
                db  92h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; main::{lambda(void)#6}::operator() const(void)::result
_ZZZ4mainENKUlvE4_clEvE6result db    0
                db    0
                db    0
                db    0
                db  83h
                db 0FFh
                db 0FFh
                db 0FFh
; main::{lambda(void)#7}::operator() const(void)::result
_ZZZ4mainENKUlvE5_clEvE6result db    0
                db    0
                db    0
                db    0
                db  8Fh
                db 0FFh
                db 0FFh
                db 0FFh
; main::{lambda(void)#8}::operator() const(void)::result
_ZZZ4mainENKUlvE6_clEvE6result db    0
                db    0
                db    0
                db    0
                db  8Ch
                db 0FFh
                db 0FFh
                db 0FFh
; main::{lambda(void)#9}::operator() const(void)::result
_ZZZ4mainENKUlvE7_clEvE6result db    0
                db    0
                db    0
                db    0
                db  88h
                db 0FFh
                db 0FFh
                db 0FFh
; main::{lambda(void)#10}::operator() const(void)::result
_ZZZ4mainENKUlvE8_clEvE6result db    0
                db    0
                db    0
                db    0
                db  8Fh
                db 0FFh
                db 0FFh
                db 0FFh
aNeverGonnaGive_0 db 'never gonna give you up',0 ; DATA XREF: main+32↑o
aNeverGonnaLetY db 'never gonna let you down',0 ; DATA XREF: main+3D↑o
                align 8
aHereSSomeSageA db 'here',27h,'s some sage advice from my residential crackheads, jus'
                                        ; DATA XREF: main+30B2↑o
                db 't for you: ',0Ah,0
aTheManWhoRelie db 'the man who relies on a lighter to start a fire on a rainy day wi'
                                        ; DATA XREF: main+3113↑o
                db 'll always be the one who fails',0Ah,0
                align 8
aHeWhoDependsOn db 'he who depends on a tool to fix, will never find a way to succeed'
                                        ; DATA XREF: main+3174↑o
                db 0Ah,0
                align 20h
aHeWhoWritesOnS db 'he who writes on stone instead of paper will always be bricked',0Ah
                                        ; DATA XREF: main+31D5↑o
                db 0
aUsingAToolIsSi db 'using a tool is simply not believing in your own abilities',0Ah,0
                                        ; DATA XREF: main+3236↑o
aVectorMRealloc db 'vector::_M_realloc_insert',0
                                        ; DATA XREF: std::vector<std::string>::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*,std::vector<std::string>>,std::string &&)+2C↑o
                align 8
qword_416418    dq 3FF0000000000000h    ; DATA XREF: ive_played_these_games_before(void)+3F1↑r
qword_416420    dq 0C05F800000000000h   ; DATA XREF: main+193↑r main+3A3↑r ...
qword_416428    dq 0C05F400000000000h   ; DATA XREF: main+67A↑r main+88A↑r ...
qword_416430    dq 0C05F000000000000h   ; DATA XREF: main+AF9↑r main+D09↑r ...
qword_416438    dq 0C05EC00000000000h   ; DATA XREF: main+1420↑r main+1630↑r ...
qword_416440    dq 0C05E800000000000h   ; DATA XREF: main+45CE↑r main+47DE↑r ...
qword_416448    dq 0C05E400000000000h   ; DATA XREF: main+7588↑r main+7798↑r ...
qword_416450    dq 0C05E000000000000h   ; DATA XREF: main+8756↑r main+8969↑r ...
qword_416458    dq 0C05DC00000000000h   ; DATA XREF: main+909A↑r main+92AD↑r ...
qword_416460    dq 0C05D800000000000h   ; DATA XREF: main+A22F↑r main+A442↑r ...
qword_416468    dq 0C05D400000000000h   ; DATA XREF: main+AB73↑r main+AD86↑r ...
qword_416470    dq 0C05D000000000000h   ; DATA XREF: main+C630↑r main+C843↑r ...
qword_416478    dq 0C05CC00000000000h   ; DATA XREF: main+F61F↑r main+F832↑r
_rodata         ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read
_eh_frame_hdr   segment dword public 'CONST' use64
                assume cs:_eh_frame_hdr
                ;org 416480h
__GNU_EH_FRAME_HDR db    1              ; DATA XREF: LOAD:00000000004002B8↑o
                db  1Bh
                db    3
                db  3Bh ; ;
                db 0F4h
                db    4
                db    0
                db    0
                db  9Dh
                db    0
                db    0
                db    0
                db 0A0h
                db 0BBh
                db 0FEh
                db 0FFh
                db  38h ; 8
                db    5
                db    0
                db    0
                db  70h ; p
                db 0BEh
                db 0FEh
                db 0FFh
                db  60h ; `
                db    5
                db    0
                db    0
                db  30h ; 0
                db 0C1h
                db 0FEh
                db 0FFh
                db  10h
                db    5
                db    0
                db    0
                db  60h ; `
                db 0C1h
                db 0FEh
                db 0FFh
                db  24h ; $
                db    5
                db    0
                db    0
                db  16h
                db 0C2h
                db 0FEh
                db 0FFh
                db 0F8h
                db    5
                db    0
                db    0
                db  25h ; %
                db 0C2h
                db 0FEh
                db 0FFh
                db  18h
                db    6
                db    0
                db    0
                db  34h ; 4
                db 0C2h
                db 0FEh
                db 0FFh
                db  38h ; 8
                db    6
                db    0
                db    0
                db  43h ; C
                db 0C2h
                db 0FEh
                db 0FFh
                db  58h ; X
                db    6
                db    0
                db    0
                db  52h ; R
                db 0C2h
                db 0FEh
                db 0FFh
                db  78h ; x
                db    6
                db    0
                db    0
                db  61h ; a
                db 0C2h
                db 0FEh
                db 0FFh
                db  98h
                db    6
                db    0
                db    0
                db  70h ; p
                db 0C2h
                db 0FEh
                db 0FFh
                db 0B8h
                db    6
                db    0
                db    0
                db  7Fh ; 
                db 0C2h
                db 0FEh
                db 0FFh
                db 0D8h
                db    6
                db    0
                db    0
                db  8Eh
                db 0C2h
                db 0FEh
                db 0FFh
                db 0F8h
                db    6
                db    0
                db    0
                db  9Dh
                db 0C2h
                db 0FEh
                db 0FFh
                db  18h
                db    7
                db    0
                db    0
                db 0ACh
                db 0C2h
                db 0FEh
                db 0FFh
                db  38h ; 8
                db    7
                db    0
                db    0
                db 0BBh
                db 0C2h
                db 0FEh
                db 0FFh
                db  58h ; X
                db    7
                db    0
                db    0
                db  35h ; 5
                db 0C3h
                db 0FEh
                db 0FFh
                db  78h ; x
                db    7
                db    0
                db    0
                db  45h ; E
                db 0C3h
                db 0FEh
                db 0FFh
                db  98h
                db    7
                db    0
                db    0
                db  55h ; U
                db 0C3h
                db 0FEh
                db 0FFh
                db 0B8h
                db    7
                db    0
                db    0
                db  65h ; e
                db 0C3h
                db 0FEh
                db 0FFh
                db 0D8h
                db    7
                db    0
                db    0
                db  75h ; u
                db 0C3h
                db 0FEh
                db 0FFh
                db 0F8h
                db    7
                db    0
                db    0
                db  85h
                db 0C3h
                db 0FEh
                db 0FFh
                db  18h
                db    8
                db    0
                db    0
                db  95h
                db 0C3h
                db 0FEh
                db 0FFh
                db  38h ; 8
                db    8
                db    0
                db    0
                db 0A5h
                db 0C3h
                db 0FEh
                db 0FFh
                db  58h ; X
                db    8
                db    0
                db    0
                db 0B5h
                db 0C3h
                db 0FEh
                db 0FFh
                db  78h ; x
                db    8
                db    0
                db    0
                db 0C5h
                db 0C3h
                db 0FEh
                db 0FFh
                db  98h
                db    8
                db    0
                db    0
                db 0D5h
                db 0C3h
                db 0FEh
                db 0FFh
                db 0FCh
                db    8
                db    0
                db    0
                db  92h
                db 0CCh
                db 0FEh
                db 0FFh
                db  28h ; (
                db    9
                db    0
                db    0
                db  2Eh ; .
                db 0CDh
                db 0FEh
                db 0FFh
                db  68h ; h
                db    9
                db    0
                db    0
                db 0ACh
                db 0CDh
                db 0FEh
                db 0FFh
                db  88h
                db    9
                db    0
                db    0
                db 0CEh
                db 0CEh
                db 0FEh
                db 0FFh
                db    8
                db  0Ah
                db    0
                db    0
                db 0F8h
                db 0CFh
                db 0FEh
                db 0FFh
                db  28h ; (
                db  0Ah
                db    0
                db    0
                db  4Ah ; J
                db 0D3h
                db 0FEh
                db 0FFh
                db  48h ; H
                db  0Ah
                db    0
                db    0
                db 0E4h
                db 0D3h
                db 0FEh
                db 0FFh
                db 0E8h
                db  0Ah
                db    0
                db    0
                db    0
                db 0D4h
                db 0FEh
                db 0FFh
                db  88h
                db  0Bh
                db    0
                db    0
                db  1Ch
                db 0D4h
                db 0FEh
                db 0FFh
                db  28h ; (
                db  0Ch
                db    0
                db    0
                db  38h ; 8
                db 0D4h
                db 0FEh
                db 0FFh
                db 0C8h
                db  0Ch
                db    0
                db    0
                db  54h ; T
                db 0D4h
                db 0FEh
                db 0FFh
                db  68h ; h
                db  0Dh
                db    0
                db    0
                db  6Fh ; o
                db 0D4h
                db 0FEh
                db 0FFh
                db  88h
                db  0Dh
                db    0
                db    0
                db 0F0h
                db 0D2h
                db 0FFh
                db 0FFh
                db 0CCh
                db  18h
                db    0
                db    0
                db  8Eh
                db 0D4h
                db 0FFh
                db 0FFh
                db 0ECh
                db  18h
                db    0
                db    0
                db 0A7h
                db 0D4h
                db 0FFh
                db 0FFh
                db  78h ; x
                db    5
                db    0
                db    0
                db 0BEh
                db 0D4h
                db 0FFh
                db 0FFh
                db  98h
                db    5
                db    0
                db    0
                db 0D4h
                db 0D4h
                db 0FFh
                db 0FFh
                db 0B8h
                db    5
                db    0
                db    0
                db 0F5h
                db 0D4h
                db 0FFh
                db 0FFh
                db 0D8h
                db    5
                db    0
                db    0
                db    4
                db 0D5h
                db 0FFh
                db 0FFh
                db 0B8h
                db    8
                db    0
                db    0
                db  62h ; b
                db 0D8h
                db 0FFh
                db 0FFh
                db 0A8h
                db    9
                db    0
                db    0
                db  82h
                db 0D8h
                db 0FFh
                db 0FFh
                db 0C8h
                db    9
                db    0
                db    0
                db 0A2h
                db 0D8h
                db 0FFh
                db 0FFh
                db 0E8h
                db    9
                db    0
                db    0
                db 0C1h
                db 0D8h
                db 0FFh
                db 0FFh
                db  68h ; h
                db  0Ah
                db    0
                db    0
                db  4Eh ; N
                db 0D9h
                db 0FFh
                db 0FFh
                db  88h
                db  0Ah
                db    0
                db    0
                db 0DBh
                db 0D9h
                db 0FFh
                db 0FFh
                db 0A8h
                db  0Ah
                db    0
                db    0
                db  68h ; h
                db 0DAh
                db 0FFh
                db 0FFh
                db 0C8h
                db  0Ah
                db    0
                db    0
                db 0F5h
                db 0DAh
                db 0FFh
                db 0FFh
                db    8
                db  0Bh
                db    0
                db    0
                db  82h
                db 0DBh
                db 0FFh
                db 0FFh
                db  28h ; (
                db  0Bh
                db    0
                db    0
                db  0Fh
                db 0DCh
                db 0FFh
                db 0FFh
                db  48h ; H
                db  0Bh
                db    0
                db    0
                db  9Ch
                db 0DCh
                db 0FFh
                db 0FFh
                db  68h ; h
                db  0Bh
                db    0
                db    0
                db  29h ; )
                db 0DDh
                db 0FFh
                db 0FFh
                db 0A8h
                db  0Bh
                db    0
                db    0
                db 0B6h
                db 0DDh
                db 0FFh
                db 0FFh
                db 0C8h
                db  0Bh
                db    0
                db    0
                db  43h ; C
                db 0DEh
                db 0FFh
                db 0FFh
                db 0E8h
                db  0Bh
                db    0
                db    0
                db 0D0h
                db 0DEh
                db 0FFh
                db 0FFh
                db    8
                db  0Ch
                db    0
                db    0
                db  5Dh ; ]
                db 0DFh
                db 0FFh
                db 0FFh
                db  48h ; H
                db  0Ch
                db    0
                db    0
                db 0EAh
                db 0DFh
                db 0FFh
                db 0FFh
                db  68h ; h
                db  0Ch
                db    0
                db    0
                db  77h ; w
                db 0E0h
                db 0FFh
                db 0FFh
                db  88h
                db  0Ch
                db    0
                db    0
                db    4
                db 0E1h
                db 0FFh
                db 0FFh
                db 0A8h
                db  0Ch
                db    0
                db    0
                db  91h
                db 0E1h
                db 0FFh
                db 0FFh
                db 0E8h
                db  0Ch
                db    0
                db    0
                db  1Eh
                db 0E2h
                db 0FFh
                db 0FFh
                db    8
                db  0Dh
                db    0
                db    0
                db 0ABh
                db 0E2h
                db 0FFh
                db 0FFh
                db  28h ; (
                db  0Dh
                db    0
                db    0
                db  38h ; 8
                db 0E3h
                db 0FFh
                db 0FFh
                db  48h ; H
                db  0Dh
                db    0
                db    0
                db 0C6h
                db 0E3h
                db 0FFh
                db 0FFh
                db 0B8h
                db  0Dh
                db    0
                db    0
                db 0DCh
                db 0E3h
                db 0FFh
                db 0FFh
                db 0D8h
                db  0Dh
                db    0
                db    0
                db 0FDh
                db 0E3h
                db 0FFh
                db 0FFh
                db 0F8h
                db  0Dh
                db    0
                db    0
                db  3Ch ; <
                db 0E4h
                db 0FFh
                db 0FFh
                db  18h
                db  0Eh
                db    0
                db    0
                db  60h ; `
                db 0E4h
                db 0FFh
                db 0FFh
                db  38h ; 8
                db  0Eh
                db    0
                db    0
                db  76h ; v
                db 0E4h
                db 0FFh
                db 0FFh
                db  58h ; X
                db  0Eh
                db    0
                db    0
                db  99h
                db 0E4h
                db 0FFh
                db 0FFh
                db  78h ; x
                db  0Eh
                db    0
                db    0
                db 0C5h
                db 0E4h
                db 0FFh
                db 0FFh
                db  98h
                db  0Eh
                db    0
                db    0
                db  16h
                db 0E5h
                db 0FFh
                db 0FFh
                db 0B8h
                db  0Eh
                db    0
                db    0
                db  34h ; 4
                db 0E5h
                db 0FFh
                db 0FFh
                db 0D8h
                db  0Eh
                db    0
                db    0
                db  52h ; R
                db 0E5h
                db 0FFh
                db 0FFh
                db 0F8h
                db  0Eh
                db    0
                db    0
                db  67h ; g
                db 0E5h
                db 0FFh
                db 0FFh
                db  18h
                db  0Fh
                db    0
                db    0
                db    2
                db 0E6h
                db 0FFh
                db 0FFh
                db  3Ch ; <
                db  0Fh
                db    0
                db    0
                db 0EAh
                db 0E6h
                db 0FFh
                db 0FFh
                db  5Ch ; \
                db  0Fh
                db    0
                db    0
                db  16h
                db 0E7h
                db 0FFh
                db 0FFh
                db  7Ch ; |
                db  0Fh
                db    0
                db    0
                db  36h ; 6
                db 0E7h
                db 0FFh
                db 0FFh
                db  9Ch
                db  0Fh
                db    0
                db    0
                db  88h
                db 0E7h
                db 0FFh
                db 0FFh
                db 0C0h
                db  0Fh
                db    0
                db    0
                db 0D0h
                db 0E7h
                db 0FFh
                db 0FFh
                db 0E4h
                db  0Fh
                db    0
                db    0
                db    6
                db 0E8h
                db 0FFh
                db 0FFh
                db    4
                db  10h
                db    0
                db    0
                db  2Eh ; .
                db 0E8h
                db 0FFh
                db 0FFh
                db  24h ; $
                db  10h
                db    0
                db    0
                db  52h ; R
                db 0E8h
                db 0FFh
                db 0FFh
                db  44h ; D
                db  10h
                db    0
                db    0
                db  64h ; d
                db 0E8h
                db 0FFh
                db 0FFh
                db  64h ; d
                db  10h
                db    0
                db    0
                db  76h ; v
                db 0E8h
                db 0FFh
                db 0FFh
                db  84h
                db  10h
                db    0
                db    0
                db 0ECh
                db 0E8h
                db 0FFh
                db 0FFh
                db 0A8h
                db  10h
                db    0
                db    0
                db  0Dh
                db 0E9h
                db 0FFh
                db 0FFh
                db 0C8h
                db  10h
                db    0
                db    0
                db  8Dh
                db 0E9h
                db 0FFh
                db 0FFh
                db 0E8h
                db  10h
                db    0
                db    0
                db 0F0h
                db 0E9h
                db 0FFh
                db 0FFh
                db    8
                db  11h
                db    0
                db    0
                db  4Eh ; N
                db 0EAh
                db 0FFh
                db 0FFh
                db  28h ; (
                db  11h
                db    0
                db    0
                db  6Eh ; n
                db 0EAh
                db 0FFh
                db 0FFh
                db  48h ; H
                db  11h
                db    0
                db    0
                db 0A0h
                db 0EAh
                db 0FFh
                db 0FFh
                db  68h ; h
                db  11h
                db    0
                db    0
                db 0B0h
                db 0EAh
                db 0FFh
                db 0FFh
                db  88h
                db  11h
                db    0
                db    0
                db 0EAh
                db 0EAh
                db 0FFh
                db 0FFh
                db 0A8h
                db  11h
                db    0
                db    0
                db 0FCh
                db 0EAh
                db 0FFh
                db 0FFh
                db 0C8h
                db  11h
                db    0
                db    0
                db  2Ah ; *
                db 0EBh
                db 0FFh
                db 0FFh
                db 0E8h
                db  11h
                db    0
                db    0
                db 0C7h
                db 0EBh
                db 0FFh
                db 0FFh
                db  0Ch
                db  12h
                db    0
                db    0
                db 0E6h
                db 0EBh
                db 0FFh
                db 0FFh
                db  2Ch ; ,
                db  12h
                db    0
                db    0
                db 0F5h
                db 0EBh
                db 0FFh
                db 0FFh
                db  4Ch ; L
                db  12h
                db    0
                db    0
                db  27h ; '
                db 0ECh
                db 0FFh
                db 0FFh
                db  6Ch ; l
                db  12h
                db    0
                db    0
                db  51h ; Q
                db 0ECh
                db 0FFh
                db 0FFh
                db  8Ch
                db  12h
                db    0
                db    0
                db  63h ; c
                db 0ECh
                db 0FFh
                db 0FFh
                db 0ACh
                db  12h
                db    0
                db    0
                db 0A0h
                db 0ECh
                db 0FFh
                db 0FFh
                db 0CCh
                db  12h
                db    0
                db    0
                db 0F0h
                db 0ECh
                db 0FFh
                db 0FFh
                db 0ECh
                db  12h
                db    0
                db    0
                db  26h ; &
                db 0EDh
                db 0FFh
                db 0FFh
                db  0Ch
                db  13h
                db    0
                db    0
                db  36h ; 6
                db 0EDh
                db 0FFh
                db 0FFh
                db  2Ch ; ,
                db  13h
                db    0
                db    0
                db  27h ; '
                db 0F0h
                db 0FFh
                db 0FFh
                db  54h ; T
                db  13h
                db    0
                db    0
                db  8Ah
                db 0F0h
                db 0FFh
                db 0FFh
                db  74h ; t
                db  13h
                db    0
                db    0
                db 0BFh
                db 0F0h
                db 0FFh
                db 0FFh
                db  94h
                db  13h
                db    0
                db    0
                db 0FCh
                db 0F0h
                db 0FFh
                db 0FFh
                db 0B4h
                db  13h
                db    0
                db    0
                db  48h ; H
                db 0F1h
                db 0FFh
                db 0FFh
                db 0D4h
                db  13h
                db    0
                db    0
                db  6Ah ; j
                db 0F1h
                db 0FFh
                db 0FFh
                db 0F4h
                db  13h
                db    0
                db    0
                db  5Ah ; Z
                db 0F2h
                db 0FFh
                db 0FFh
                db  18h
                db  14h
                db    0
                db    0
                db 0A6h
                db 0F2h
                db 0FFh
                db 0FFh
                db  38h ; 8
                db  14h
                db    0
                db    0
                db 0EAh
                db 0F2h
                db 0FFh
                db 0FFh
                db  58h ; X
                db  14h
                db    0
                db    0
                db  21h ; !
                db 0F3h
                db 0FFh
                db 0FFh
                db  78h ; x
                db  14h
                db    0
                db    0
                db  58h ; X
                db 0F3h
                db 0FFh
                db 0FFh
                db  98h
                db  14h
                db    0
                db    0
                db  6Ah ; j
                db 0F3h
                db 0FFh
                db 0FFh
                db 0B8h
                db  14h
                db    0
                db    0
                db 0C1h
                db 0F3h
                db 0FFh
                db 0FFh
                db 0DCh
                db  14h
                db    0
                db    0
                db 0EBh
                db 0F3h
                db 0FFh
                db 0FFh
                db 0FCh
                db  14h
                db    0
                db    0
                db 0FDh
                db 0F3h
                db 0FFh
                db 0FFh
                db  1Ch
                db  15h
                db    0
                db    0
                db  1Ch
                db 0F4h
                db 0FFh
                db 0FFh
                db  3Ch ; <
                db  15h
                db    0
                db    0
                db  42h ; B
                db 0F4h
                db 0FFh
                db 0FFh
                db  5Ch ; \
                db  15h
                db    0
                db    0
                db  71h ; q
                db 0F4h
                db 0FFh
                db 0FFh
                db  7Ch ; |
                db  15h
                db    0
                db    0
                db  9Fh
                db 0F4h
                db 0FFh
                db 0FFh
                db  9Ch
                db  15h
                db    0
                db    0
                db 0D5h
                db 0F4h
                db 0FFh
                db 0FFh
                db 0BCh
                db  15h
                db    0
                db    0
                db  21h ; !
                db 0F5h
                db 0FFh
                db 0FFh
                db 0DCh
                db  15h
                db    0
                db    0
                db  56h ; V
                db 0F5h
                db 0FFh
                db 0FFh
                db 0FCh
                db  15h
                db    0
                db    0
                db  79h ; y
                db 0F5h
                db 0FFh
                db 0FFh
                db  1Ch
                db  16h
                db    0
                db    0
                db 0E2h
                db 0F5h
                db 0FFh
                db 0FFh
                db  3Ch ; <
                db  16h
                db    0
                db    0
                db 0F4h
                db 0F5h
                db 0FFh
                db 0FFh
                db  5Ch ; \
                db  16h
                db    0
                db    0
                db  0Ch
                db 0F6h
                db 0FFh
                db 0FFh
                db  7Ch ; |
                db  16h
                db    0
                db    0
                db  70h ; p
                db 0F6h
                db 0FFh
                db 0FFh
                db  9Ch
                db  16h
                db    0
                db    0
                db 0D8h
                db 0F6h
                db 0FFh
                db 0FFh
                db 0C0h
                db  16h
                db    0
                db    0
                db    5
                db 0F7h
                db 0FFh
                db 0FFh
                db 0E0h
                db  16h
                db    0
                db    0
                db  3Ah ; :
                db 0F7h
                db 0FFh
                db 0FFh
                db    0
                db  17h
                db    0
                db    0
                db  58h ; X
                db 0F7h
                db 0FFh
                db 0FFh
                db  20h
                db  17h
                db    0
                db    0
                db  87h
                db 0F7h
                db 0FFh
                db 0FFh
                db  40h ; @
                db  17h
                db    0
                db    0
                db  99h
                db 0F7h
                db 0FFh
                db 0FFh
                db  60h ; `
                db  17h
                db    0
                db    0
                db  0Eh
                db 0F8h
                db 0FFh
                db 0FFh
                db  84h
                db  17h
                db    0
                db    0
                db  20h
                db 0F8h
                db 0FFh
                db 0FFh
                db 0A4h
                db  17h
                db    0
                db    0
                db 0D8h
                db 0F8h
                db 0FFh
                db 0FFh
                db 0CCh
                db  17h
                db    0
                db    0
                db 0F6h
                db 0F8h
                db 0FFh
                db 0FFh
                db 0ECh
                db  17h
                db    0
                db    0
                db  51h ; Q
                db 0F9h
                db 0FFh
                db 0FFh
                db  0Ch
                db  18h
                db    0
                db    0
                db  7Eh ; ~
                db 0F9h
                db 0FFh
                db 0FFh
                db  2Ch ; ,
                db  18h
                db    0
                db    0
                db 0A2h
                db 0F9h
                db 0FFh
                db 0FFh
                db  4Ch ; L
                db  18h
                db    0
                db    0
                db 0B7h
                db 0F9h
                db 0FFh
                db 0FFh
                db  6Ch ; l
                db  18h
                db    0
                db    0
                db 0FEh
                db 0F9h
                db 0FFh
                db 0FFh
                db  8Ch
                db  18h
                db    0
                db    0
                db  3Ah ; :
                db 0FAh
                db 0FFh
                db 0FFh
                db 0ACh
                db  18h
                db    0
                db    0
                db 0E9h
                db  9Dh
                db    6
                db    0
                db  48h ; H
                db    9
                db    0
                db    0
_eh_frame_hdr   ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read
LOAD            segment mempage public 'DATA' use64
                assume cs:LOAD
                ;org 416974h
                align 8
LOAD            ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read
_eh_frame       segment qword public 'CONST' use64
                assume cs:_eh_frame
                ;org 416978h
                db  14h
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db  7Ah ; z
                db  52h ; R
                db    0
                db    1
                db  78h ; x
                db  10h
                db    1
                db  1Bh
                db  0Ch
                db    7
                db    8
                db  90h
                db    1
                db    0
                db    0
                db  10h
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  18h
                db 0BCh
                db 0FEh
                db 0FFh
                db  26h ; &
                db    0
                db    0
                db    0
                db    0
                db  44h ; D
                db    7
                db  10h
                db  10h
                db    0
                db    0
                db    0
                db  30h ; 0
                db    0
                db    0
                db    0
                db  34h ; 4
                db 0BCh
                db 0FEh
                db 0FFh
                db    5
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  24h ; $
                db    0
                db    0
                db    0
                db  44h ; D
                db    0
                db    0
                db    0
                db  60h ; `
                db 0B6h
                db 0FEh
                db 0FFh
                db 0D0h
                db    2
                db    0
                db    0
                db    0
                db  0Eh
                db  10h
                db  46h ; F
                db  0Eh
                db  18h
                db  4Ah ; J
                db  0Fh
                db  0Bh
                db  77h ; w
                db    8
                db  80h
                db    0
                db  3Fh ; ?
                db  1Ah
                db  3Ah ; :
                db  2Ah ; *
                db  33h ; 3
                db  24h ; $
                db  22h ; "
                db    0
                db    0
                db    0
                db    0
                db  14h
                db    0
                db    0
                db    0
                db  6Ch ; l
                db    0
                db    0
                db    0
                db    8
                db 0B9h
                db 0FEh
                db 0FFh
                db 0C0h
                db    2
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  84h
                db    0
                db    0
                db    0
                db  27h ; '
                db 0CFh
                db 0FFh
                db 0FFh
                db  16h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  4Dh ; M
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0A4h
                db    0
                db    0
                db    0
                db  1Eh
                db 0CFh
                db 0FFh
                db 0FFh
                db  15h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  4Ch ; L
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0C4h
                db    0
                db    0
                db    0
                db  14h
                db 0CFh
                db 0FFh
                db 0FFh
                db  21h ; !
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  58h ; X
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0E4h
                db    0
                db    0
                db    0
                db  15h
                db 0CFh
                db 0FFh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db    4
                db    1
                db    0
                db    0
                db  16h
                db 0BCh
                db 0FEh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  24h ; $
                db    1
                db    0
                db    0
                db    5
                db 0BCh
                db 0FEh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  44h ; D
                db    1
                db    0
                db    0
                db 0F4h
                db 0BBh
                db 0FEh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  64h ; d
                db    1
                db    0
                db    0
                db 0E3h
                db 0BBh
                db 0FEh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  84h
                db    1
                db    0
                db    0
                db 0D2h
                db 0BBh
                db 0FEh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0A4h
                db    1
                db    0
                db    0
                db 0C1h
                db 0BBh
                db 0FEh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0C4h
                db    1
                db    0
                db    0
                db 0B0h
                db 0BBh
                db 0FEh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0E4h
                db    1
                db    0
                db    0
                db  9Fh
                db 0BBh
                db 0FEh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db    4
                db    2
                db    0
                db    0
                db  8Eh
                db 0BBh
                db 0FEh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  24h ; $
                db    2
                db    0
                db    0
                db  7Dh ; }
                db 0BBh
                db 0FEh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  44h ; D
                db    2
                db    0
                db    0
                db  6Ch ; l
                db 0BBh
                db 0FEh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  64h ; d
                db    2
                db    0
                db    0
                db  5Bh ; [
                db 0BBh
                db 0FEh
                db 0FFh
                db  7Ah ; z
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  71h ; q
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  84h
                db    2
                db    0
                db    0
                db 0B5h
                db 0BBh
                db 0FEh
                db 0FFh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  47h ; G
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0A4h
                db    2
                db    0
                db    0
                db 0A5h
                db 0BBh
                db 0FEh
                db 0FFh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  47h ; G
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0C4h
                db    2
                db    0
                db    0
                db  95h
                db 0BBh
                db 0FEh
                db 0FFh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  47h ; G
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0E4h
                db    2
                db    0
                db    0
                db  85h
                db 0BBh
                db 0FEh
                db 0FFh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  47h ; G
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db    4
                db    3
                db    0
                db    0
                db  75h ; u
                db 0BBh
                db 0FEh
                db 0FFh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  47h ; G
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  24h ; $
                db    3
                db    0
                db    0
                db  65h ; e
                db 0BBh
                db 0FEh
                db 0FFh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  47h ; G
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  44h ; D
                db    3
                db    0
                db    0
                db  55h ; U
                db 0BBh
                db 0FEh
                db 0FFh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  47h ; G
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  64h ; d
                db    3
                db    0
                db    0
                db  45h ; E
                db 0BBh
                db 0FEh
                db 0FFh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  47h ; G
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  84h
                db    3
                db    0
                db    0
                db  35h ; 5
                db 0BBh
                db 0FEh
                db 0FFh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  47h ; G
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0A4h
                db    3
                db    0
                db    0
                db  25h ; %
                db 0BBh
                db 0FEh
                db 0FFh
                db  10h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  47h ; G
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db 0C4h
                db    3
                db    0
                db    0
                db  44h ; D
                db 0CCh
                db 0FFh
                db 0FFh
                db  5Dh ; ]
                db    3
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  47h ; G
                db  8Ch
                db    3
                db  83h
                db    4
                db    3
                db  4Dh ; M
                db    3
                db  0Ch
                db    7
                db    8
                db  1Ch
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    1
                db  7Ah ; z
                db  50h ; P
                db  4Ch ; L
                db  52h ; R
                db    0
                db    1
                db  78h ; x
                db  10h
                db    7
                db    3
                db  10h
                db  25h ; %
                db  40h ; @
                db    0
                db    3
                db  1Bh
                db  0Ch
                db    7
                db    8
                db  90h
                db    1
                db    0
                db    0
                db  28h ; (
                db    0
                db    0
                db    0
                db  24h ; $
                db    0
                db    0
                db    0
                db 0D1h
                db 0BAh
                db 0FEh
                db 0FFh
                db 0BDh
                db    8
                db    0
                db    0
                db    4
                db  90h
                db  7Dh ; }
                db  41h ; A
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  4Eh ; N
                db  8Eh
                db    3
                db  8Dh
                db    4
                db  8Ch
                db    5
                db  83h
                db    6
                db    3
                db 0A6h
                db    8
                db  0Ch
                db    7
                db    8
                db  1Ch
                db    0
                db    0
                db    0
                db  34h ; 4
                db    4
                db    0
                db    0
                db  62h ; b
                db 0C3h
                db 0FEh
                db 0FFh
                db  9Bh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  92h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  54h ; T
                db    4
                db    0
                db    0
                db  99h
                db  94h
                db    6
                db    0
                db  0Ch
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  43h ; C
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  74h ; t
                db    4
                db    0
                db    0
                db 0BEh
                db 0C3h
                db 0FEh
                db 0FFh
                db  7Eh ; ~
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  79h ; y
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  94h
                db    4
                db    0
                db    0
                db  1Ch
                db 0C4h
                db 0FEh
                db 0FFh
                db  21h ; !
                db    1
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    3
                db  1Ch
                db    1
                db  0Ch
                db    7
                db    8
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0B4h
                db    4
                db    0
                db    0
                db 0B2h
                db 0CEh
                db 0FFh
                db 0FFh
                db  1Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  56h ; V
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0D4h
                db    4
                db    0
                db    0
                db 0B2h
                db 0CEh
                db 0FFh
                db 0FFh
                db  1Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  56h ; V
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0F4h
                db    4
                db    0
                db    0
                db 0B2h
                db 0CEh
                db 0FFh
                db 0FFh
                db  1Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  56h ; V
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  14h
                db    5
                db    0
                db    0
                db 0BEh
                db 0C4h
                db 0FEh
                db 0FFh
                db  29h ; )
                db    1
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    3
                db  24h ; $
                db    1
                db  0Ch
                db    7
                db    8
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  34h ; 4
                db    5
                db    0
                db    0
                db 0C8h
                db 0C5h
                db 0FEh
                db 0FFh
                db  51h ; Q
                db    3
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    3
                db  4Ch ; L
                db    3
                db  0Ch
                db    7
                db    8
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  54h ; T
                db    5
                db    0
                db    0
                db 0FAh
                db 0C8h
                db 0FEh
                db 0FFh
                db  99h
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  94h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  74h ; t
                db    5
                db    0
                db    0
                db  51h ; Q
                db 0CEh
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  94h
                db    5
                db    0
                db    0
                db 0BEh
                db 0CEh
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0B4h
                db    5
                db    0
                db    0
                db  2Bh ; +
                db 0CFh
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0D4h
                db    5
                db    0
                db    0
                db  98h
                db 0CFh
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0F4h
                db    5
                db    0
                db    0
                db 0F4h
                db 0C8h
                db 0FEh
                db 0FFh
                db  1Bh
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  56h ; V
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  14h
                db    6
                db    0
                db    0
                db 0E5h
                db 0CFh
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  34h ; 4
                db    6
                db    0
                db    0
                db  52h ; R
                db 0D0h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  54h ; T
                db    6
                db    0
                db    0
                db 0BFh
                db 0D0h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  74h ; t
                db    6
                db    0
                db    0
                db  2Ch ; ,
                db 0D1h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  94h
                db    6
                db    0
                db    0
                db  70h ; p
                db 0C8h
                db 0FEh
                db 0FFh
                db  1Bh
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  56h ; V
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0B4h
                db    6
                db    0
                db    0
                db  79h ; y
                db 0D1h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0D4h
                db    6
                db    0
                db    0
                db 0E6h
                db 0D1h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0F4h
                db    6
                db    0
                db    0
                db  53h ; S
                db 0D2h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  14h
                db    7
                db    0
                db    0
                db 0C0h
                db 0D2h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  34h ; 4
                db    7
                db    0
                db    0
                db 0ECh
                db 0C7h
                db 0FEh
                db 0FFh
                db  1Bh
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  56h ; V
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  54h ; T
                db    7
                db    0
                db    0
                db  0Dh
                db 0D3h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  74h ; t
                db    7
                db    0
                db    0
                db  7Ah ; z
                db 0D3h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  94h
                db    7
                db    0
                db    0
                db 0E7h
                db 0D3h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0B4h
                db    7
                db    0
                db    0
                db  54h ; T
                db 0D4h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0D4h
                db    7
                db    0
                db    0
                db  68h ; h
                db 0C7h
                db 0FEh
                db 0FFh
                db  1Bh
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  56h ; V
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0F4h
                db    7
                db    0
                db    0
                db 0A1h
                db 0D4h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  14h
                db    8
                db    0
                db    0
                db  0Eh
                db 0D5h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  34h ; 4
                db    8
                db    0
                db    0
                db  7Bh ; {
                db 0D5h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  54h ; T
                db    8
                db    0
                db    0
                db 0E8h
                db 0D5h
                db 0FFh
                db 0FFh
                db  8Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  84h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  74h ; t
                db    8
                db    0
                db    0
                db 0E4h
                db 0C6h
                db 0FEh
                db 0FFh
                db  1Bh
                db    0
                db    0
                db    0
                db    0
                db  41h ; A
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  56h ; V
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  2Ch ; ,
                db    0
                db    0
                db    0
                db 0B0h
                db    4
                db    0
                db    0
                db 0DFh
                db 0C6h
                db 0FEh
                db 0FFh
                db  81h
                db 0FEh
                db    0
                db    0
                db    4
                db 0C0h
                db  7Dh ; }
                db  41h ; A
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  50h ; P
                db  8Fh
                db    3
                db  8Eh
                db    4
                db  8Dh
                db    5
                db  8Ch
                db    6
                db  83h
                db    7
                db    3
                db  68h ; h
                db 0FEh
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0C4h
                db    8
                db    0
                db    0
                db    6
                db 0D6h
                db 0FFh
                db 0FFh
                db  15h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  4Ch ; L
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0E4h
                db    8
                db    0
                db    0
                db 0FCh
                db 0D5h
                db 0FFh
                db 0FFh
                db  21h ; !
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  58h ; X
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db    4
                db    9
                db    0
                db    0
                db 0FDh
                db 0D5h
                db 0FFh
                db 0FFh
                db  3Fh ; ?
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db  71h ; q
                db  0Ch
                db    7
                db    8
                db  1Ch
                db    0
                db    0
                db    0
                db  24h ; $
                db    9
                db    0
                db    0
                db  1Ch
                db 0D6h
                db 0FFh
                db 0FFh
                db  24h ; $
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  5Bh ; [
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  44h ; D
                db    9
                db    0
                db    0
                db  20h
                db 0D6h
                db 0FFh
                db 0FFh
                db  15h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  4Ch ; L
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  64h ; d
                db    9
                db    0
                db    0
                db  16h
                db 0D6h
                db 0FFh
                db 0FFh
                db  23h ; #
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  5Ah ; Z
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  84h
                db    9
                db    0
                db    0
                db  19h
                db 0D6h
                db 0FFh
                db 0FFh
                db  2Ch ; ,
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  63h ; c
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0A4h
                db    9
                db    0
                db    0
                db  25h ; %
                db 0D6h
                db 0FFh
                db 0FFh
                db  51h ; Q
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  48h ; H
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0C4h
                db    9
                db    0
                db    0
                db  56h ; V
                db 0D6h
                db 0FFh
                db 0FFh
                db  1Eh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  55h ; U
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0E4h
                db    9
                db    0
                db    0
                db  54h ; T
                db 0D6h
                db 0FFh
                db 0FFh
                db  1Eh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  55h ; U
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db    4
                db  0Ah
                db    0
                db    0
                db  52h ; R
                db 0D6h
                db 0FFh
                db 0FFh
                db  15h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  4Ch ; L
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db  24h ; $
                db  0Ah
                db    0
                db    0
                db  47h ; G
                db 0D6h
                db 0FFh
                db 0FFh
                db  9Bh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db    2
                db  8Dh
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  48h ; H
                db  0Ah
                db    0
                db    0
                db 0BEh
                db 0D6h
                db 0FFh
                db 0FFh
                db 0E8h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db 0DFh
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  68h ; h
                db  0Ah
                db    0
                db    0
                db  86h
                db 0D7h
                db 0FFh
                db 0FFh
                db  2Bh ; +
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  62h ; b
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  88h
                db  0Ah
                db    0
                db    0
                db  92h
                db 0D7h
                db 0FFh
                db 0FFh
                db  1Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  56h ; V
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db 0C4h
                db    6
                db    0
                db    0
                db  92h
                db 0D7h
                db 0FFh
                db 0FFh
                db  51h ; Q
                db    0
                db    0
                db    0
                db    4
                db  5Eh ; ^
                db  7Eh ; ~
                db  41h ; A
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  48h ; H
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db 0E8h
                db    6
                db    0
                db    0
                db 0C0h
                db 0D7h
                db 0FFh
                db 0FFh
                db  48h ; H
                db    0
                db    0
                db    0
                db    4
                db  62h ; b
                db  7Eh ; ~
                db  41h ; A
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  7Fh ; 
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0F0h
                db  0Ah
                db    0
                db    0
                db 0E4h
                db 0D7h
                db 0FFh
                db 0FFh
                db  35h ; 5
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  6Ch ; l
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  10h
                db  0Bh
                db    0
                db    0
                db 0FAh
                db 0D7h
                db 0FFh
                db 0FFh
                db  27h ; '
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  5Eh ; ^
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  30h ; 0
                db  0Bh
                db    0
                db    0
                db    2
                db 0D8h
                db 0FFh
                db 0FFh
                db  24h ; $
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  5Bh ; [
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  50h ; P
                db  0Bh
                db    0
                db    0
                db    6
                db 0D8h
                db 0FFh
                db 0FFh
                db  12h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  49h ; I
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  70h ; p
                db  0Bh
                db    0
                db    0
                db 0F8h
                db 0D7h
                db 0FFh
                db 0FFh
                db  12h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  49h ; I
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db  90h
                db  0Bh
                db    0
                db    0
                db 0EAh
                db 0D7h
                db 0FFh
                db 0FFh
                db  75h ; u
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db    2
                db  67h ; g
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0B4h
                db  0Bh
                db    0
                db    0
                db  3Ch ; <
                db 0D8h
                db 0FFh
                db 0FFh
                db  21h ; !
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  58h ; X
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0D4h
                db  0Bh
                db    0
                db    0
                db  3Dh ; =
                db 0D8h
                db 0FFh
                db 0FFh
                db  80h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  77h ; w
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0F4h
                db  0Bh
                db    0
                db    0
                db  9Dh
                db 0D8h
                db 0FFh
                db 0FFh
                db  63h ; c
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  5Ah ; Z
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  14h
                db  0Ch
                db    0
                db    0
                db 0E0h
                db 0D8h
                db 0FFh
                db 0FFh
                db  5Dh ; ]
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  54h ; T
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  34h ; 4
                db  0Ch
                db    0
                db    0
                db  1Eh
                db 0D9h
                db 0FFh
                db 0FFh
                db  1Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  56h ; V
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  54h ; T
                db  0Ch
                db    0
                db    0
                db  1Eh
                db 0D9h
                db 0FFh
                db 0FFh
                db  32h ; 2
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  69h ; i
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  74h ; t
                db  0Ch
                db    0
                db    0
                db  30h ; 0
                db 0D9h
                db 0FFh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  94h
                db  0Ch
                db    0
                db    0
                db  20h
                db 0D9h
                db 0FFh
                db 0FFh
                db  39h ; 9
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  70h ; p
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0B4h
                db  0Ch
                db    0
                db    0
                db  3Ah ; :
                db 0D9h
                db 0FFh
                db 0FFh
                db  12h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  49h ; I
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0D4h
                db  0Ch
                db    0
                db    0
                db  2Ch ; ,
                db 0D9h
                db 0FFh
                db 0FFh
                db  2Eh ; .
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  65h ; e
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db 0F4h
                db  0Ch
                db    0
                db    0
                db  3Ah ; :
                db 0D9h
                db 0FFh
                db 0FFh
                db  9Dh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db    2
                db  8Fh
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  18h
                db  0Dh
                db    0
                db    0
                db 0B3h
                db 0D9h
                db 0FFh
                db 0FFh
                db  1Eh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  55h ; U
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  38h ; 8
                db  0Dh
                db    0
                db    0
                db 0B2h
                db 0D9h
                db 0FFh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  58h ; X
                db  0Dh
                db    0
                db    0
                db 0A1h
                db 0D9h
                db 0FFh
                db 0FFh
                db  32h ; 2
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  69h ; i
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  78h ; x
                db  0Dh
                db    0
                db    0
                db 0B3h
                db 0D9h
                db 0FFh
                db 0FFh
                db  2Ah ; *
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  61h ; a
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  98h
                db  0Dh
                db    0
                db    0
                db 0BDh
                db 0D9h
                db 0FFh
                db 0FFh
                db  12h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  49h ; I
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0B8h
                db  0Dh
                db    0
                db    0
                db 0AFh
                db 0D9h
                db 0FFh
                db 0FFh
                db  3Dh ; =
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  74h ; t
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0D8h
                db  0Dh
                db    0
                db    0
                db 0CCh
                db 0D9h
                db 0FFh
                db 0FFh
                db  50h ; P
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  47h ; G
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0F8h
                db  0Dh
                db    0
                db    0
                db 0FCh
                db 0D9h
                db 0FFh
                db 0FFh
                db  36h ; 6
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  6Dh ; m
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  18h
                db  0Eh
                db    0
                db    0
                db  12h
                db 0DAh
                db 0FFh
                db 0FFh
                db  0Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  46h ; F
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  24h ; $
                db    0
                db    0
                db    0
                db  54h ; T
                db  0Ah
                db    0
                db    0
                db    2
                db 0DAh
                db 0FFh
                db 0FFh
                db 0F1h
                db    2
                db    0
                db    0
                db    4
                db  68h ; h
                db  7Eh ; ~
                db  41h ; A
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db    3
                db 0E3h
                db    2
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  60h ; `
                db  0Eh
                db    0
                db    0
                db 0CBh
                db 0DCh
                db 0FFh
                db 0FFh
                db  63h ; c
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  5Ah ; Z
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  80h
                db  0Eh
                db    0
                db    0
                db  0Eh
                db 0DDh
                db 0FFh
                db 0FFh
                db  35h ; 5
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  6Ch ; l
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0A0h
                db  0Eh
                db    0
                db    0
                db  23h ; #
                db 0DDh
                db 0FFh
                db 0FFh
                db  3Dh ; =
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  74h ; t
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0C0h
                db  0Eh
                db    0
                db    0
                db  40h ; @
                db 0DDh
                db 0FFh
                db 0FFh
                db  4Bh ; K
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db  7Dh ; }
                db  0Ch
                db    7
                db    8
                db  1Ch
                db    0
                db    0
                db    0
                db 0E0h
                db  0Eh
                db    0
                db    0
                db  6Ch ; l
                db 0DDh
                db 0FFh
                db 0FFh
                db  21h ; !
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  58h ; X
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db    0
                db  0Fh
                db    0
                db    0
                db  6Eh ; n
                db 0DDh
                db 0FFh
                db 0FFh
                db 0EFh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db    2
                db 0E1h
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  24h ; $
                db  0Fh
                db    0
                db    0
                db  3Ah ; :
                db 0DEh
                db 0FFh
                db 0FFh
                db  4Ch ; L
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  43h ; C
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  44h ; D
                db  0Fh
                db    0
                db    0
                db  66h ; f
                db 0DEh
                db 0FFh
                db 0FFh
                db  43h ; C
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db  75h ; u
                db  0Ch
                db    7
                db    8
                db  1Ch
                db    0
                db    0
                db    0
                db  64h ; d
                db  0Fh
                db    0
                db    0
                db  8Ah
                db 0DEh
                db 0FFh
                db 0FFh
                db  37h ; 7
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  6Eh ; n
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  84h
                db  0Fh
                db    0
                db    0
                db 0A1h
                db 0DEh
                db 0FFh
                db 0FFh
                db  36h ; 6
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  6Dh ; m
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0A4h
                db  0Fh
                db    0
                db    0
                db 0B8h
                db 0DEh
                db 0FFh
                db 0FFh
                db  12h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  49h ; I
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db 0C4h
                db  0Fh
                db    0
                db    0
                db 0AAh
                db 0DEh
                db 0FFh
                db 0FFh
                db  57h ; W
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db    2
                db  49h ; I
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0E8h
                db  0Fh
                db    0
                db    0
                db 0DDh
                db 0DEh
                db 0FFh
                db 0FFh
                db  2Ah ; *
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  61h ; a
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db    8
                db  10h
                db    0
                db    0
                db 0E7h
                db 0DEh
                db 0FFh
                db 0FFh
                db  12h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  49h ; I
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  28h ; (
                db  10h
                db    0
                db    0
                db 0D9h
                db 0DEh
                db 0FFh
                db 0FFh
                db  1Fh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  56h ; V
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  48h ; H
                db  10h
                db    0
                db    0
                db 0D8h
                db 0DEh
                db 0FFh
                db 0FFh
                db  26h ; &
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  5Dh ; ]
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  68h ; h
                db  10h
                db    0
                db    0
                db 0DEh
                db 0DEh
                db 0FFh
                db 0FFh
                db  2Fh ; /
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  66h ; f
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  88h
                db  10h
                db    0
                db    0
                db 0EDh
                db 0DEh
                db 0FFh
                db 0FFh
                db  2Eh ; .
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  65h ; e
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0A8h
                db  10h
                db    0
                db    0
                db 0FBh
                db 0DEh
                db 0FFh
                db 0FFh
                db  36h ; 6
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  6Dh ; m
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0C8h
                db  10h
                db    0
                db    0
                db  11h
                db 0DFh
                db 0FFh
                db 0FFh
                db  4Ch ; L
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  43h ; C
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0E8h
                db  10h
                db    0
                db    0
                db  3Dh ; =
                db 0DFh
                db 0FFh
                db 0FFh
                db  35h ; 5
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  6Ch ; l
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db    8
                db  11h
                db    0
                db    0
                db  52h ; R
                db 0DFh
                db 0FFh
                db 0FFh
                db  23h ; #
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  5Ah ; Z
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  28h ; (
                db  11h
                db    0
                db    0
                db  55h ; U
                db 0DFh
                db 0FFh
                db 0FFh
                db  69h ; i
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  60h ; `
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  48h ; H
                db  11h
                db    0
                db    0
                db  9Eh
                db 0DFh
                db 0FFh
                db 0FFh
                db  12h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  49h ; I
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  68h ; h
                db  11h
                db    0
                db    0
                db  90h
                db 0DFh
                db 0FFh
                db 0FFh
                db  18h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  4Fh ; O
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  88h
                db  11h
                db    0
                db    0
                db  88h
                db 0DFh
                db 0FFh
                db 0FFh
                db  64h ; d
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  5Bh ; [
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db 0A8h
                db  11h
                db    0
                db    0
                db 0CCh
                db 0DFh
                db 0FFh
                db 0FFh
                db  67h ; g
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  47h ; G
                db  8Ch
                db    3
                db  83h
                db    4
                db    2
                db  57h ; W
                db  0Ch
                db    7
                db    8
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0CCh
                db  11h
                db    0
                db    0
                db  10h
                db 0E0h
                db 0FFh
                db 0FFh
                db  2Dh ; -
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  64h ; d
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0ECh
                db  11h
                db    0
                db    0
                db  1Dh
                db 0E0h
                db 0FFh
                db 0FFh
                db  35h ; 5
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  6Ch ; l
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  0Ch
                db  12h
                db    0
                db    0
                db  32h ; 2
                db 0E0h
                db 0FFh
                db 0FFh
                db  1Eh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  55h ; U
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  2Ch ; ,
                db  12h
                db    0
                db    0
                db  30h ; 0
                db 0E0h
                db 0FFh
                db 0FFh
                db  2Fh ; /
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  66h ; f
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  4Ch ; L
                db  12h
                db    0
                db    0
                db  3Fh ; ?
                db 0E0h
                db 0FFh
                db 0FFh
                db  12h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  49h ; I
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  20h
                db    0
                db    0
                db    0
                db  6Ch ; l
                db  12h
                db    0
                db    0
                db  31h ; 1
                db 0E0h
                db 0FFh
                db 0FFh
                db  75h ; u
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db    2
                db  67h ; g
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  90h
                db  12h
                db    0
                db    0
                db  82h
                db 0E0h
                db 0FFh
                db 0FFh
                db  12h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  49h ; I
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  24h ; $
                db    0
                db    0
                db    0
                db 0CCh
                db  0Eh
                db    0
                db    0
                db  74h ; t
                db 0E0h
                db 0FFh
                db 0FFh
                db 0B8h
                db    0
                db    0
                db    0
                db    4
                db  90h
                db  7Eh ; ~
                db  41h ; A
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db    2
                db 0AAh
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0D8h
                db  12h
                db    0
                db    0
                db    4
                db 0E1h
                db 0FFh
                db 0FFh
                db  1Eh
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  55h ; U
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0F8h
                db  12h
                db    0
                db    0
                db    2
                db 0E1h
                db 0FFh
                db 0FFh
                db  5Bh ; [
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    2
                db  52h ; R
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  18h
                db  13h
                db    0
                db    0
                db  3Dh ; =
                db 0E1h
                db 0FFh
                db 0FFh
                db  2Ch ; ,
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  63h ; c
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  38h ; 8
                db  13h
                db    0
                db    0
                db  4Ah ; J
                db 0E1h
                db 0FFh
                db 0FFh
                db  24h ; $
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  5Bh ; [
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  58h ; X
                db  13h
                db    0
                db    0
                db  4Eh ; N
                db 0E1h
                db 0FFh
                db 0FFh
                db  15h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  4Ch ; L
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db  78h ; x
                db  13h
                db    0
                db    0
                db  43h ; C
                db 0E1h
                db 0FFh
                db 0FFh
                db  47h ; G
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db  79h ; y
                db  0Ch
                db    7
                db    8
                db  1Ch
                db    0
                db    0
                db    0
                db  98h
                db  13h
                db    0
                db    0
                db  6Ah ; j
                db 0E1h
                db 0FFh
                db 0FFh
                db  3Ch ; <
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  45h ; E
                db  83h
                db    3
                db  6Eh ; n
                db  0Ch
                db    7
                db    8
                db  1Ch
                db    0
                db    0
                db    0
                db 0B8h
                db  13h
                db    0
                db    0
                db  86h
                db 0E1h
                db 0FFh
                db 0FFh
                db  15h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  4Ch ; L
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0D8h
                db  13h
                db    0
                db    0
                db  1Ch
                db 0BAh
                db 0FFh
                db 0FFh
                db  9Eh
                db    1
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db    3
                db  95h
                db    1
                db  0Ch
                db    7
                db    8
                db    0
                db  1Ch
                db    0
                db    0
                db    0
                db 0F8h
                db  13h
                db    0
                db    0
                db  9Ah
                db 0BBh
                db 0FFh
                db 0FFh
                db  19h
                db    0
                db    0
                db    0
                db    0
                db  45h ; E
                db  0Eh
                db  10h
                db  86h
                db    2
                db  43h ; C
                db  0Dh
                db    6
                db  50h ; P
                db  0Ch
                db    7
                db    8
                db    0
                db    0
                db    0
__FRAME_END__   db    0
                db    0
                db    0
                db    0
_eh_frame       ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read
_gcc_except_table segment dword public 'CONST' use64
                assume cs:_gcc_except_table
                ;org 417D90h
                db 0FFh
                db    3
                db  2Dh ; -
                db    1
                db  23h ; #
                db  39h ; 9
                db    5
                db 0BCh
                db  10h
                db    1
                db 0B2h
                db    1
                db    5
                db  9Bh
                db  10h
                db    3
                db 0E7h
                db    7
                db 0A5h
                db    5
                db  80h
                db  10h
                db    3
                db 0AFh
                db  0Dh
                db  1Ah
                db 0D6h
                db  0Fh
                db    3
                db 0CEh
                db  0Eh
                db  1Ah
                db  80h
                db  10h
                db    3
                db 0C9h
                db  10h
                db    5
                db    0
                db    0
                db    1
                db    0
                db    0
                db  7Dh ; }
                db 0F0h
                db  9Dh
                db  41h ; A
                db    0
                db 0FFh
                db 0FFh
                db    1
                db  99h
                db    1
                db  79h ; y
                db    2
                db    0
                db    0
                db  95h
                db  31h ; 1
                db    5
                db 0ADh
                db 0F8h
                db    3
                db    0
                db 0F2h
                db  60h ; `
                db    5
                db 0CEh
                db 0F8h
                db    3
                db    0
                db 0BAh
                db  61h ; a
                db    5
                db  81h
                db 0F9h
                db    3
                db    0
                db 0D3h
                db  61h ; a
                db    5
                db 0E9h
                db 0F8h
                db    3
                db    0
                db  9Bh
                db  62h ; b
                db    5
                db 0B4h
                db 0F9h
                db    3
                db    0
                db 0B4h
                db  62h ; b
                db    5
                db  9Ch
                db 0F9h
                db    3
                db    0
                db 0FCh
                db  62h ; b
                db    5
                db 0E7h
                db 0F9h
                db    3
                db    0
                db  95h
                db  63h ; c
                db    5
                db 0CFh
                db 0F9h
                db    3
                db    0
                db 0DDh
                db  63h ; c
                db    5
                db  9Ah
                db 0FAh
                db    3
                db    0
                db 0F6h
                db  63h ; c
                db    5
                db  82h
                db 0FAh
                db    3
                db    0
                db 0BEh
                db  64h ; d
                db    5
                db 0CDh
                db 0FAh
                db    3
                db    0
                db 0D7h
                db  64h ; d
                db    5
                db 0B5h
                db 0FAh
                db    3
                db    0
                db 0C3h
                db  94h
                db    1
                db    5
                db 0E8h
                db 0FAh
                db    3
                db    0
                db 0A0h
                db 0C4h
                db    1
                db    5
                db  83h
                db 0FBh
                db    3
                db    0
                db 0FDh
                db 0F3h
                db    1
                db    5
                db  9Eh
                db 0FBh
                db    3
                db    0
                db 0AAh
                db 0F4h
                db    1
                db    5
                db 0FEh
                db 0FBh
                db    3
                db    0
                db 0A0h
                db 0F5h
                db    1
                db  9Ah
                db  80h
                db    2
                db 0E6h
                db 0FBh
                db    3
                db    0
                db 0D5h
                db 0F5h
                db    3
                db    5
                db 0CEh
                db 0FBh
                db    3
                db    0
                db 0EEh
                db 0F5h
                db    3
                db    5
                db 0B6h
                db 0FBh
                db    3
                db    0
                db 0C9h
                db 0F8h
                db    3
                db 0A1h
                db    4
                db    0
                db    0
                db 0FFh
                db 0FFh
                db    1
                db    0
                db 0FFh
                db 0FFh
                db    1
                db    0
                db    0
                db    0
                db 0FFh
                db    3
                db  25h ; %
                db    1
                db  1Ah
                db  39h ; 9
                db  5Ah ; Z
                db    0
                db    0
                db 0FDh
                db    2
                db  3Fh ; ?
                db 0DBh
                db    4
                db    1
                db 0E9h
                db    3
                db  28h ; (
                db    0
                db    0
                db 0AEh
                db    5
                db  21h ; !
                db 0CFh
                db    5
                db    0
                db 0E1h
                db    5
                db    5
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db 0FFh
                db    3
                db  19h
                db    1
                db  0Fh
                db  68h ; h
                db    5
                db  77h ; w
                db    1
                db  91h
                db    1
                db  0Ah
                db  9Bh
                db    1
                db    0
                db 0ADh
                db    1
                db    5
                db    0
                db    0
                db    1
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_gcc_except_table ends

; ELF Initialization Function Table
; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
_init_array     segment qword public 'DATA' use64
                assume cs:_init_array
                ;org 419DD8h
__frame_dummy_init_array_entry dq offset frame_dummy
                                        ; DATA XREF: LOAD:0000000000400168↑o
                                        ; LOAD:0000000000400328↑o
                dq offset _GLOBAL__sub_I__Z29ive_played_these_games_beforev
_init_array     ends

; ELF Termination Function Table
; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
_fini_array     segment qword public 'DATA' use64
                assume cs:_fini_array
                ;org 419DE8h
__do_global_dtors_aux_fini_array_entry dq offset __do_global_dtors_aux
_fini_array     ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
_data_rel_ro    segment qword public 'DATA' use64
                assume cs:_data_rel_ro
                ;org 419DF0h
                public _ZTISt9exception@GLIBCXX_3_4 ; weak
_ZTISt9exception@GLIBCXX_3_4 db    0    ; DATA XREF: LOAD:0000000000400830↑o
                                        ; Alternative name is '`typeinfo for'std::exception'
                                        ; Copy of shared data
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
_data_rel_ro    ends

; ELF Dynamic Information
; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
LOAD            segment mempage public 'DATA' use64
                assume cs:LOAD
                ;org 419E00h
_DYNAMIC        Elf64_Dyn <1, 7B3h>     ; DATA XREF: LOAD:00000000004001D8↑o
                                        ; .got.plt:_GLOBAL_OFFSET_TABLE_↓o
                                        ; DT_NEEDED libstdc++.so.6
                Elf64_Dyn <1, 7C2h>     ; DT_NEEDED libgcc_s.so.1
                Elf64_Dyn <1, 7D0h>     ; DT_NEEDED libc.so.6
                Elf64_Dyn <0Ch, 402000h> ; DT_INIT
                Elf64_Dyn <0Dh, 415ED0h> ; DT_FINI
                Elf64_Dyn <19h, 419DD8h> ; DT_INIT_ARRAY
                Elf64_Dyn <1Bh, 10h>    ; DT_INIT_ARRAYSZ
                Elf64_Dyn <1Ah, 419DE8h> ; DT_FINI_ARRAY
                Elf64_Dyn <1Ch, 8>      ; DT_FINI_ARRAYSZ
                Elf64_Dyn <6FFFFEF5h, 4003E8h> ; DT_GNU_HASH
                Elf64_Dyn <5, 4008C0h>  ; DT_STRTAB
                Elf64_Dyn <6, 400428h>  ; DT_SYMTAB
                Elf64_Dyn <0Ah, 845h>   ; DT_STRSZ
                Elf64_Dyn <0Bh, 18h>    ; DT_SYMENT
                Elf64_Dyn <15h, 0>      ; DT_DEBUG
                Elf64_Dyn <3, 41A000h>  ; DT_PLTGOT
                Elf64_Dyn <2, 420h>     ; DT_PLTRELSZ
                Elf64_Dyn <14h, 7>      ; DT_PLTREL
                Elf64_Dyn <17h, 401288h> ; DT_JMPREL
                Elf64_Dyn <7, 401228h>  ; DT_RELA
                Elf64_Dyn <8, 60h>      ; DT_RELASZ
                Elf64_Dyn <9, 18h>      ; DT_RELAENT
                Elf64_Dyn <6FFFFFFEh, 401168h> ; DT_VERNEED
                Elf64_Dyn <6FFFFFFFh, 3> ; DT_VERNEEDNUM
                Elf64_Dyn <6FFFFFF0h, 401106h> ; DT_VERSYM
                Elf64_Dyn <0>           ; DT_NULL
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
LOAD            ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
_got            segment qword public 'DATA' use64
                assume cs:_got
                ;org 419FF0h
__libc_start_main_ptr dq offset __libc_start_main ; DATA XREF: _start+1F↑r
__gmon_start___ptr dq offset __gmon_start__ ; DATA XREF: _init_proc+8↑r
_got            ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
_got_plt        segment qword public 'DATA' use64
                assume cs:_got_plt
                ;org 41A000h
_GLOBAL_OFFSET_TABLE_ dq offset _DYNAMIC
qword_41A008    dq 0                    ; DATA XREF: sub_402020↑r
qword_41A010    dq 0                    ; DATA XREF: sub_402020+6↑r
off_41A018      dq offset __errno_location ; DATA XREF: ___errno_location+4↑r
off_41A020      dq offset _ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE
                                        ; DATA XREF: std::getline<char,std::char_traits<char>,std::allocator<char>>(std::istream &,std::string &)+4↑r
                                        ; std::getline<char,std::char_traits<char>,std::allocator<char>>(std::istream &,std::string &)
off_41A028      dq offset _ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev
                                        ; DATA XREF: std::ifstream::~ifstream()+4↑r
                                        ; std::ifstream::~ifstream()
off_41A030      dq offset nanosleep     ; DATA XREF: _nanosleep+4↑r
off_41A038      dq offset _ZSt17__throw_bad_allocv
                                        ; DATA XREF: std::__throw_bad_alloc(void)+4↑r
                                        ; std::__throw_bad_alloc(void)
off_41A040      dq offset __cxa_begin_catch ; DATA XREF: ___cxa_begin_catch+4↑r
off_41A048      dq offset _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
                                        ; DATA XREF: std::string::basic_string(std::string const&)+4↑r
                                        ; std::string::basic_string(std::string const&)
off_41A050      dq offset _ZNKSt9basic_iosIcSt11char_traitsIcEEntEv
                                        ; DATA XREF: std::ios::operator!(void)+4↑r
                                        ; std::ios::operator!(void)
off_41A058      dq offset _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev
                                        ; DATA XREF: std::istringstream::~istringstream()+4↑r
                                        ; std::istringstream::~istringstream()
off_41A060      dq offset _ZSt20__throw_length_errorPKc
                                        ; DATA XREF: std::__throw_length_error(char const*)+4↑r
                                        ; std::__throw_length_error(char const*)
off_41A068      dq offset abort         ; DATA XREF: _abort+4↑r
off_41A070      dq offset _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_
                                        ; DATA XREF: std::string::basic_string(std::string&&)+4↑r
                                        ; std::string::basic_string(std::string&&)
off_41A078      dq offset _ZNSirsERi    ; DATA XREF: std::istream::operator>>(int &)+4↑r
                                        ; std::istream::operator>>(int &)
off_41A080      dq offset _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
                                        ; DATA XREF: std::string::~string()+4↑r
                                        ; std::string::~string()
off_41A088      dq offset _ZSt28__throw_bad_array_new_lengthv
                                        ; DATA XREF: std::__throw_bad_array_new_length(void)+4↑r
                                        ; std::__throw_bad_array_new_length(void)
off_41A090      dq offset __cxa_atexit  ; DATA XREF: ___cxa_atexit+4↑r
off_41A098      dq offset _ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE
                                        ; DATA XREF: std::operator<<<char>(std::ostream &,std::string const&)+4↑r
                                        ; std::operator<<<char>(std::ostream &,std::string const&)
off_41A0A0      dq offset _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv
                                        ; DATA XREF: std::string::begin(void)+4↑r
                                        ; std::string::begin(void)
off_41A0A8      dq offset _Znwm         ; DATA XREF: operator new(ulong)+4↑r
                                        ; operator new(ulong)
off_41A0B0      dq offset _ZdlPvm       ; DATA XREF: operator delete(void *,ulong)+4↑r
                                        ; operator delete(void *,ulong)
off_41A0B8      dq offset _ZNSolsEPFRSoS_E
                                        ; DATA XREF: std::ostream::operator<<(std::ostream & (*)(std::ostream &))+4↑r
                                        ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
off_41A0C0      dq offset _ZNSaIcED1Ev  ; DATA XREF: std::allocator<char>::~allocator()+4↑r
                                        ; std::allocator<char>::~allocator()
off_41A0C8      dq offset __stack_chk_fail ; DATA XREF: ___stack_chk_fail+4↑r
off_41A0D0      dq offset _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c
                                        ; DATA XREF: std::operator<<<std::char_traits<char>>(std::ostream &,char)+4↑r
                                        ; std::operator<<<std::char_traits<char>>(std::ostream &,char)
off_41A0D8      dq offset _ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv
                                        ; DATA XREF: std::ios::operator bool(void)+4↑r
                                        ; std::ios::operator bool(void)
off_41A0E0      dq offset _ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE
                                        ; DATA XREF: std::operator>><char>(std::istream &,std::string &)+4↑r
                                        ; std::operator>><char>(std::istream &,std::string &)
off_41A0E8      dq offset _ZSt5flushIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
                                        ; DATA XREF: std::flush<char,std::char_traits<char>>(std::ostream &)+4↑r
                                        ; std::flush<char,std::char_traits<char>>(std::ostream &)
off_41A0F0      dq offset _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
                                        ; DATA XREF: std::string::basic_string(char const*,std::allocator<char> const&)+4↑r
                                        ; std::string::basic_string(char const*,std::allocator<char> const&)
off_41A0F8      dq offset _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
                                        ; DATA XREF: std::string::basic_string(void)+4↑r
                                        ; std::string::basic_string(void)
off_41A100      dq offset __cxa_rethrow ; DATA XREF: ___cxa_rethrow+4↑r
off_41A108      dq offset _ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
                                        ; DATA XREF: std::ofstream::~ofstream()+4↑r
                                        ; std::ofstream::~ofstream()
off_41A110      dq offset _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv
                                        ; DATA XREF: std::string::length(void)+4↑r
                                        ; std::string::length(void)
off_41A118      dq offset _ZNSt8ios_base4InitC1Ev
                                        ; DATA XREF: std::ios_base::Init::Init(void)+4↑r
                                        ; std::ios_base::Init::Init(void)
off_41A120      dq offset __cxa_end_catch ; DATA XREF: ___cxa_end_catch+4↑r
off_41A128      dq offset __gxx_personality_v0
                                        ; DATA XREF: ___gxx_personality_v0+4↑r
off_41A130      dq offset _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode
                                        ; DATA XREF: std::istringstream::basic_istringstream(std::string const&,std::_Ios_Openmode)+4↑r
                                        ; std::istringstream::basic_istringstream(std::string const&,std::_Ios_Openmode)
off_41A138      dq offset _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcm
                                        ; DATA XREF: std::string::rfind(char const*,ulong)+4↑r
                                        ; std::string::rfind(char const*,ulong)
off_41A140      dq offset _Unwind_Resume ; DATA XREF: __Unwind_Resume+4↑r
off_41A148      dq offset _ZNSaIcEC1Ev  ; DATA XREF: std::allocator<char>::allocator(void)+4↑r
                                        ; std::allocator<char>::allocator(void)
off_41A150      dq offset _ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode
                                        ; DATA XREF: std::ifstream::basic_ifstream(char const*,std::_Ios_Openmode)+4↑r
                                        ; std::ifstream::basic_ifstream(char const*,std::_Ios_Openmode)
off_41A158      dq offset _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv
                                        ; DATA XREF: std::string::end(void)+4↑r
                                        ; std::string::end(void)
off_41A160      dq offset _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
                                        ; DATA XREF: std::ofstream::basic_ofstream(std::string const&,std::_Ios_Openmode)+4↑r
                                        ; std::ofstream::basic_ofstream(std::string const&,std::_Ios_Openmode)
off_41A168      dq offset _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm
                                        ; DATA XREF: std::string::operator[](ulong)+4↑r
                                        ; std::string::operator[](ulong)
off_41A170      dq offset _ZNSt8ios_base4InitD1Ev
                                        ; DATA XREF: std::ios_base::Init::~Init()+4↑r
_got_plt        ends                    ; std::ios_base::Init::~Init()

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
LOAD            segment mempage public 'DATA' use64
                assume cs:LOAD
                ;org 41A178h
                align 20h
LOAD            ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
_data           segment align_32 public 'DATA' use64
                assume cs:_data
                ;org 41A180h
                public __data_start ; weak
__data_start    db    0                 ; Alternative name is '__data_start'
                                        ; data_start
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                public __dso_handle
__dso_handle    db    0                 ; DATA XREF: __static_initialization_and_destruction_0(int,int)+33↑o
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
                db    0
; _a
_ZL2_a          db  61h ; a
; _b
_ZL2_b          db  62h ; b
; _c
_ZL2_c          db  63h ; c
; _d
_ZL2_d          db  64h ; d
; _e
_ZL2_e          db  65h ; e
; _f
_ZL2_f          db  66h ; f
; _g
_ZL2_g          db  67h ; g
; _h
_ZL2_h          db  68h ; h
; _i
_ZL2_i          db  69h ; i
; _j
_ZL2_j          db  6Ah ; j
; _k
_ZL2_k          db  6Bh ; k
; _l
_ZL2_l          db  6Ch ; l
; _m
_ZL2_m          db  6Dh ; m
; _n
_ZL2_n          db  6Eh ; n
; _o
_ZL2_o          db  6Fh ; o
; _p
_ZL2_p          db  70h ; p
; _q
_ZL2_q          db  71h ; q
; _r
_ZL2_r          db  72h ; r
; _s
_ZL2_s          db  73h ; s
; _t
_ZL2_t          db  74h ; t
; _u
_ZL2_u          db  75h ; u
; _v
_ZL2_v          db  76h ; v
; _w
_ZL2_w          db  77h ; w
; _x
_ZL2_x          db  78h ; x
; _y
_ZL2_y          db  79h ; y
; _z
_ZL2_z          db  7Ah ; z
; _S
_ZL2_S          db  53h ; S
; _L
_ZL2_L          db  4Ch ; L
; _A
_ZL2_A          db  41h ; A
; _I
_ZL2_I          db  49h ; I
; _D
_ZL2_D          db  44h ; D
; _P
_ZL2_P          db  50h ; P
_ZL2_1          db 1                    ; DATA XREF: ive_played_these_games_before(void)+8B↑r
                                        ; ive_played_these_games_before(void)+156↑r ...
_ZL2_2          db    2
_ZL2_3          db 3                    ; DATA XREF: ive_played_these_games_before(void)+DD↑r
                                        ; ive_played_these_games_before(void)+169↑r ...
_ZL2_4          db    4
_ZL2_5          db    5
_ZL2_6          db    6
_ZL2_7          db 7                    ; DATA XREF: ive_played_these_games_before(void)+CB↑r
                                        ; ive_played_these_games_before(void)+407↑r ...
_ZL2_8          db 8                    ; DATA XREF: ive_played_these_games_before(void)+78↑r
                                        ; ive_played_these_games_before(void)+143↑r ...
_ZL2_9          db 9                    ; DATA XREF: ive_played_these_games_before(void)+3E↑r
                                        ; ive_played_these_games_before(void)+10F↑r ...
                align 20h
; __int64 (__fastcall *obfusheader_watermark_orig)(const char *)
_ZL26obfusheader_watermark_orig dq offset _ZL26obfusheader_watermark_hookPKc
                                        ; DATA XREF: obfusheader_decoy_main(void):loc_40276F↑r
                                        ; main:loc_40394E↑r
                                        ; obfusheader_watermark_hook(char const*)
                align 20h
; __int64 obf::FunctionPtrHider<void (*)(void),10,6,&(abort),0,1,2,3,4,5,6,7,8,9>::shuffled_arr[]
_ZN3obf16FunctionPtrHiderIPFvvELi10ELi6EXadL_Z5abortEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE dq 0
                                        ; DATA XREF: main+9503↑r
                                        ; __static_initialization_and_destruction_0(int,int)+60↑w
                dq offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                dq offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                dq offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
qword_41A200    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+6C↑w
                align 10h
                dq offset _abort
                dq offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
qword_41A220    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+78↑w
qword_41A228    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+84↑w
                align 20h
; __int64 obf::FunctionPtrHider<void (*)(std::string const&,int),10,8,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr[]
_ZN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE dq 0
                                        ; DATA XREF: main+AFDC↑r
                                        ; __static_initialization_and_destruction_0(int,int)+A4↑w
                dq offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                dq offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                dq offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
qword_41A260    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+B0↑w
                align 10h
qword_41A270    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+BC↑w
                dq offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
                dq offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
qword_41A288    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+C8↑w
                align 20h
; __int64 obf::FunctionPtrHider<void (*)(void),10,4,&(abort),0,1,2,3,4,5,6,7,8,9>::shuffled_arr[]
_ZN3obf16FunctionPtrHiderIPFvvELi10ELi4EXadL_Z5abortEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE dq 0
                                        ; DATA XREF: main+CA99↑r
                                        ; __static_initialization_and_destruction_0(int,int)+E8↑w
                dq offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                dq offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                dq offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
                dq offset _abort
                align 10h
qword_41A2D0    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+F4↑w
                dq offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
qword_41A2E0    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+100↑w
qword_41A2E8    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+10C↑w
                align 20h
; obf::FunctionPtrHider<void (*)(std::string const&, int), 10, 0, &(slow_print(std::string const&, int)), 0, 1, 2, 3, 4, 5, 6, 7, 8, 9>::shuffled_arr
_ZN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE dq offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi
                                        ; DATA XREF: main+E289↑r ; slow_print(std::string const&,int)
                dq offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                dq offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                dq offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
qword_41A320    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+12C↑w
                align 10h
qword_41A330    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+138↑w
                dq offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
qword_41A340    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+144↑w
qword_41A348    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+150↑w
                align 20h
; __int64 obf::FunctionPtrHider<void (*)(std::string const&,int),10,6,&(slow_print(std::string const&,int)),0,1,2,3,4,5,6,7,8,9>::shuffled_arr[]
_ZN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE dq 0
                                        ; DATA XREF: main+FA88↑r
                                        ; __static_initialization_and_destruction_0(int,int)+170↑w
                dq offset _ZL19obfusheader_decoy_1v ; obfusheader_decoy_1(void)
                dq offset _ZL19obfusheader_decoy_2v ; obfusheader_decoy_2(void)
                dq offset _ZL19obfusheader_decoy_3v ; obfusheader_decoy_3(void)
qword_41A380    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+17C↑w
                align 10h
                dq offset _Z10slow_printRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi ; slow_print(std::string const&,int)
                dq offset _ZL19obfusheader_decoy_5v ; obfusheader_decoy_5(void)
qword_41A3A0    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+188↑w
qword_41A3A8    dq 0                    ; DATA XREF: __static_initialization_and_destruction_0(int,int)+194↑w
_data           ends

; ===========================================================================

; Segment type: Pure data
; Segment permissions: Read/Write
LOAD            segment mempage public 'DATA' use64
                assume cs:LOAD
                ;org 41A3B0h
                public __bss_start
__bss_start     db    ? ;               ; DATA XREF: deregister_tm_clones↑o
                                        ; deregister_tm_clones+5↑o ...
                                        ; Alternative name is '_edata'
                                        ; __TMC_END__
                                        ; _edata
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
LOAD            ends

; ===========================================================================

; Segment type: Uninitialized
; Segment permissions: Read/Write
_bss            segment align_64 public 'BSS' use64
                assume cs:_bss
                ;org 41A3C0h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                public _ZSt4cout@GLIBCXX_3_4
_ZSt4cout@GLIBCXX_3_4 db    ? ;         ; DATA XREF: LOAD:0000000000400878↑o
                                        ; main+7D13↑o ...
                                        ; Alternative name is 'std::cout'
                                        ; Copy of shared data
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
completed_0     db ?                    ; DATA XREF: __do_global_dtors_aux+4↑r
                                        ; __do_global_dtors_aux+16↑w
; std::ios_base::Init std::__ioinit
_ZStL8__ioinit  db    ? ;               ; DATA XREF: __static_initialization_and_destruction_0(int,int)+29↑o
                                        ; __static_initialization_and_destruction_0(int,int)+38↑o
_ZL2_0          db ?                    ; DATA XREF: ive_played_these_games_before(void)+18A↑r
                                        ; ive_played_these_games_before(void)+4C6↑r ...
                align 8
; `guard variable for'obf::FunctionPtrHider<void (*)(void), 10, 6, &(abort), 0, 1, 2, 3, 4, 5, 6, 7, 8, 9>::shuffled_arr
_ZGVN3obf16FunctionPtrHiderIPFvvELi10ELi6EXadL_Z5abortEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE db    ? ;
                                        ; DATA XREF: __static_initialization_and_destruction_0(int,int)+47↑o
                                        ; __static_initialization_and_destruction_0(int,int)+53↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
; `guard variable for'obf::FunctionPtrHider<void (*)(std::string const&, int), 10, 8, &(slow_print(std::string const&, int)), 0, 1, 2, 3, 4, 5, 6, 7, 8, 9>::shuffled_arr
_ZGVN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi8EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE db    ? ;
                                        ; DATA XREF: __static_initialization_and_destruction_0(int,int):loc_4137FB↑o
                                        ; __static_initialization_and_destruction_0(int,int)+97↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
; `guard variable for'obf::FunctionPtrHider<void (*)(void), 10, 4, &(abort), 0, 1, 2, 3, 4, 5, 6, 7, 8, 9>::shuffled_arr
_ZGVN3obf16FunctionPtrHiderIPFvvELi10ELi4EXadL_Z5abortEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE db    ? ;
                                        ; DATA XREF: __static_initialization_and_destruction_0(int,int):loc_41383F↑o
                                        ; __static_initialization_and_destruction_0(int,int)+DB↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
; `guard variable for'obf::FunctionPtrHider<void (*)(std::string const&, int), 10, 0, &(slow_print(std::string const&, int)), 0, 1, 2, 3, 4, 5, 6, 7, 8, 9>::shuffled_arr
_ZGVN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi0EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE db    ? ;
                                        ; DATA XREF: __static_initialization_and_destruction_0(int,int):loc_413883↑o
                                        ; __static_initialization_and_destruction_0(int,int)+11F↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
; `guard variable for'obf::FunctionPtrHider<void (*)(std::string const&, int), 10, 6, &(slow_print(std::string const&, int)), 0, 1, 2, 3, 4, 5, 6, 7, 8, 9>::shuffled_arr
_ZGVN3obf16FunctionPtrHiderIPFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiELi10ELi6EXadL_Z10slow_printS8_iEEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEE12shuffled_arrE db    ? ;
                                        ; DATA XREF: __static_initialization_and_destruction_0(int,int):loc_4138C7↑o
                                        ; __static_initialization_and_destruction_0(int,int)+163↑o
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
                db    ? ;
_bss            ends

; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
_my_anchor_section segment byte public 'CODE' use64
                assume cs:_my_anchor_section
                ;org 480269h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

; __int64 anchor_function(void)
                public _Z15anchor_functionv
_Z15anchor_functionv proc near          ; DATA XREF: LOAD:00000000004001A0↑o
                                        ; main+27↑o
; __unwind {
                endbr64
                push    rbp
                mov     rbp, rsp
                nop
                nop
                pop     rbp
                retn
; } // starts at 480269
_Z15anchor_functionv endp

_my_anchor_section ends

; ===========================================================================

; Segment type: Externs
; extern
; int *_errno_location(void)
                extrn __errno_location:near ; CODE XREF: ___errno_location+4↑j
                                        ; DATA XREF: .got.plt:off_41A018↑o
; std::istream & std::getline<char, std::char_traits<char>, std::allocator<char>>(std::istream &, std::string &)
                extrn _ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE:near
                                        ; CODE XREF: std::getline<char,std::char_traits<char>,std::allocator<char>>(std::istream &,std::string &)+4↑j
                                        ; DATA XREF: .got.plt:off_41A020↑o
; std::ifstream::~ifstream()
                extrn _ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev:near
                                        ; CODE XREF: std::ifstream::~ifstream()+4↑j
                                        ; DATA XREF: .got.plt:off_41A028↑o
; int nanosleep(const struct timespec *requested_time, struct timespec *remaining)
                extrn nanosleep:near    ; CODE XREF: _nanosleep+4↑j
                                        ; DATA XREF: .got.plt:off_41A030↑o
; void __noreturn std::__throw_bad_alloc(void)
                extrn _ZSt17__throw_bad_allocv:near
                                        ; CODE XREF: std::__throw_bad_alloc(void)+4↑j
                                        ; DATA XREF: .got.plt:off_41A038↑o
; void *_cxa_begin_catch(void *)
                extrn __cxa_begin_catch:near ; CODE XREF: ___cxa_begin_catch+4↑j
                                        ; DATA XREF: .got.plt:off_41A040↑o
; std::string::basic_string(std::string const&)
                extrn _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_:near
                                        ; CODE XREF: std::string::basic_string(std::string const&)+4↑j
                                        ; DATA XREF: .got.plt:off_41A048↑o
; std::ios::operator!(void)const
                extrn _ZNKSt9basic_iosIcSt11char_traitsIcEEntEv:near
                                        ; CODE XREF: std::ios::operator!(void)+4↑j
                                        ; DATA XREF: .got.plt:off_41A050↑o
; std::istringstream::~istringstream()
                extrn _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev:near
                                        ; CODE XREF: std::istringstream::~istringstream()+4↑j
                                        ; DATA XREF: .got.plt:off_41A058↑o
; void __noreturn std::__throw_length_error(const char *)
                extrn _ZSt20__throw_length_errorPKc:near
                                        ; CODE XREF: std::__throw_length_error(char const*)+4↑j
                                        ; DATA XREF: .got.plt:off_41A060↑o
; std::string::basic_string(std::string&&)
                extrn _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_:near
                                        ; CODE XREF: std::string::basic_string(std::string&&)+4↑j
                                        ; DATA XREF: .got.plt:off_41A070↑o
; std::istream::operator>>(int &)
                extrn _ZNSirsERi:near   ; CODE XREF: std::istream::operator>>(int &)+4↑j
                                        ; DATA XREF: .got.plt:off_41A078↑o
; std::string::~string()
                extrn _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev:near
                                        ; CODE XREF: std::string::~string()+4↑j
                                        ; DATA XREF: .got.plt:off_41A080↑o
; int _libc_start_main(int (*main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)
                extrn __libc_start_main:near ; CODE XREF: _start+1F↑p
                                        ; DATA XREF: .got:__libc_start_main_ptr↑o
; _QWORD std::__throw_bad_array_new_length(void)
                extrn _ZSt28__throw_bad_array_new_lengthv:near
                                        ; CODE XREF: std::__throw_bad_array_new_length(void)+4↑j
                                        ; DATA XREF: .got.plt:off_41A088↑o
; int _cxa_atexit(void (*lpfunc)(void *), void *obj, void *lpdso_handle)
                extrn __cxa_atexit:near ; CODE XREF: ___cxa_atexit+4↑j
                                        ; DATA XREF: .got.plt:off_41A090↑o
; std::ostream & std::operator<<<char>(std::ostream &, std::string const&)
                extrn _ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE:near
                                        ; CODE XREF: std::operator<<<char>(std::ostream &,std::string const&)+4↑j
                                        ; DATA XREF: .got.plt:off_41A098↑o
; std::string::begin(void)const
                extrn _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv:near
                                        ; CODE XREF: std::string::begin(void)+4↑j
                                        ; DATA XREF: .got.plt:off_41A0A0↑o
; _QWORD operator new(unsigned __int64)
                extrn _Znwm:near        ; CODE XREF: operator new(ulong)+4↑j
                                        ; DATA XREF: .got.plt:off_41A0A8↑o
; void operator delete(void *, unsigned __int64)
                extrn _ZdlPvm:near      ; CODE XREF: operator delete(void *,ulong)+4↑j
                                        ; DATA XREF: .got.plt:off_41A0B0↑o
; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
                extrn _ZNSolsEPFRSoS_E:near
                                        ; CODE XREF: std::ostream::operator<<(std::ostream & (*)(std::ostream &))+4↑j
                                        ; DATA XREF: .got.plt:off_41A0B8↑o
; std::allocator<char>::~allocator()
                extrn _ZNSaIcED1Ev:near ; CODE XREF: std::allocator<char>::~allocator()+4↑j
                                        ; DATA XREF: .got.plt:off_41A0C0↑o
                extrn __stack_chk_fail:near ; CODE XREF: ___stack_chk_fail+4↑j
                                        ; DATA XREF: .got.plt:off_41A0C8↑o
; std::ostream & std::operator<<<std::char_traits<char>>(std::ostream &, char)
                extrn _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c:near
                                        ; CODE XREF: std::operator<<<std::char_traits<char>>(std::ostream &,char)+4↑j
                                        ; DATA XREF: .got.plt:off_41A0D0↑o
; std::ios::operator bool(void)const
                extrn _ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv:near
                                        ; CODE XREF: std::ios::operator bool(void)+4↑j
                                        ; DATA XREF: .got.plt:off_41A0D8↑o
; std::istream & std::operator>><char>(std::istream &, std::string &)
                extrn _ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE:near
                                        ; CODE XREF: std::operator>><char>(std::istream &,std::string &)+4↑j
                                        ; DATA XREF: .got.plt:off_41A0E0↑o
; std::string::basic_string(char const*, std::allocator<char> const&)
                extrn _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_:near
                                        ; CODE XREF: std::string::basic_string(char const*,std::allocator<char> const&)+4↑j
                                        ; DATA XREF: .got.plt:off_41A0F0↑o
; std::string::basic_string(void)
                extrn _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev:near
                                        ; CODE XREF: std::string::basic_string(void)+4↑j
                                        ; DATA XREF: .got.plt:off_41A0F8↑o
; void __noreturn _cxa_rethrow(void)
                extrn __cxa_rethrow:near ; CODE XREF: ___cxa_rethrow+4↑j
                                        ; DATA XREF: .got.plt:off_41A100↑o
; std::ofstream::~ofstream()
                extrn _ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev:near
                                        ; CODE XREF: std::ofstream::~ofstream()+4↑j
                                        ; DATA XREF: .got.plt:off_41A108↑o
; std::string::length(void)const
                extrn _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv:near
                                        ; CODE XREF: std::string::length(void)+4↑j
                                        ; DATA XREF: .got.plt:off_41A110↑o
; _QWORD std::ios_base::Init::Init(std::ios_base::Init *__hidden this)
                extrn _ZNSt8ios_base4InitC1Ev:near
                                        ; CODE XREF: std::ios_base::Init::Init(void)+4↑j
                                        ; DATA XREF: .got.plt:off_41A118↑o
; void _cxa_end_catch(void)
                extrn __cxa_end_catch:near ; CODE XREF: ___cxa_end_catch+4↑j
                                        ; DATA XREF: .got.plt:off_41A120↑o
; std::istringstream::basic_istringstream(std::string const&, std::_Ios_Openmode)
                extrn _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode:near
                                        ; CODE XREF: std::istringstream::basic_istringstream(std::string const&,std::_Ios_Openmode)+4↑j
                                        ; DATA XREF: .got.plt:off_41A130↑o
; std::string::rfind(char const*, unsigned long)const
                extrn _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcm:near
                                        ; CODE XREF: std::string::rfind(char const*,ulong)+4↑j
                                        ; DATA XREF: .got.plt:off_41A138↑o
; void Unwind_Resume(struct _Unwind_Exception *)
                extrn _Unwind_Resume:near ; CODE XREF: __Unwind_Resume+4↑j
                                        ; DATA XREF: .got.plt:off_41A140↑o
; std::allocator<char>::allocator(void)
                extrn _ZNSaIcEC1Ev:near ; CODE XREF: std::allocator<char>::allocator(void)+4↑j
                                        ; DATA XREF: .got.plt:off_41A148↑o
; std::ifstream::basic_ifstream(char const*, std::_Ios_Openmode)
                extrn _ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode:near
                                        ; CODE XREF: std::ifstream::basic_ifstream(char const*,std::_Ios_Openmode)+4↑j
                                        ; DATA XREF: .got.plt:off_41A150↑o
; std::string::end(void)const
                extrn _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv:near
                                        ; CODE XREF: std::string::end(void)+4↑j
                                        ; DATA XREF: .got.plt:off_41A158↑o
; std::ofstream::basic_ofstream(std::string const&, std::_Ios_Openmode)
                extrn _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode:near
                                        ; CODE XREF: std::ofstream::basic_ofstream(std::string const&,std::_Ios_Openmode)+4↑j
                                        ; DATA XREF: .got.plt:off_41A160↑o
; std::string::operator[](unsigned long)
                extrn _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm:near
                                        ; CODE XREF: std::string::operator[](ulong)+4↑j
                                        ; DATA XREF: .got.plt:off_41A168↑o
; void __noreturn abort(void)
                extrn abort:near        ; CODE XREF: _abort+4↑j
                                        ; DATA XREF: .got.plt:off_41A068↑o
; std::ostream & std::flush<char, std::char_traits<char>>(std::ostream &)
                extrn _ZSt5flushIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_:near
                                        ; CODE XREF: std::flush<char,std::char_traits<char>>(std::ostream &)+4↑j
                                        ; DATA XREF: .got.plt:off_41A0E8↑o
                extrn __gxx_personality_v0:near
                                        ; CODE XREF: ___gxx_personality_v0+4↑j
                                        ; DATA XREF: .got.plt:off_41A128↑o
; void std::ios_base::Init::~Init(std::ios_base::Init *__hidden this)
                extrn _ZNSt8ios_base4InitD1Ev:near
                                        ; CODE XREF: std::ios_base::Init::~Init()+4↑j
                                        ; DATA XREF: .got.plt:off_41A170↑o
                extrn __gmon_start__:near ; weak ; CODE XREF: _init_proc+14↑p
                                        ; DATA XREF: .got:__gmon_start___ptr↑o


                end _start
